ARM GAS  /tmp/ccCP5zb3.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB68:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccCP5zb3.s 			page 2


  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** /* USER CODE BEGIN PFP */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN 0 */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /**
  63:Src/main.c    ****   * @brief  The application entry point.
  64:Src/main.c    ****   * @retval int
  65:Src/main.c    ****   */
  66:Src/main.c    **** int main(void)
  67:Src/main.c    **** {
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE END 1 */
  71:Src/main.c    ****   
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Initialize all configured peripherals */
  90:Src/main.c    ****   MX_GPIO_Init();
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccCP5zb3.s 			page 3


  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END 2 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Infinite loop */
  96:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  97:Src/main.c    ****   uint32_t tick;
  98:Src/main.c    ****   tick = HAL_GetTick();
  99:Src/main.c    ****   while (1)
 100:Src/main.c    ****   {
 101:Src/main.c    ****     /* USER CODE END WHILE */ 
 102:Src/main.c    ****     if(HAL_GetTick() - tick >= 1000)
 103:Src/main.c    ****     {
 104:Src/main.c    ****       HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_2);
 105:Src/main.c    ****       tick = HAL_GetTick();
 106:Src/main.c    ****     }
 107:Src/main.c    ****     /* USER CODE BEGIN 3 */
 108:Src/main.c    ****   }
 109:Src/main.c    ****   /* USER CODE END 3 */
 110:Src/main.c    **** }
 111:Src/main.c    **** 
 112:Src/main.c    **** /**
 113:Src/main.c    ****   * @brief System Clock Configuration
 114:Src/main.c    ****   * @retval None
 115:Src/main.c    ****   */
 116:Src/main.c    **** void SystemClock_Config(void)
 117:Src/main.c    **** {
 118:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Src/main.c    **** 
 121:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 122:Src/main.c    ****   */
 123:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 124:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 125:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 127:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 128:Src/main.c    ****   {
 129:Src/main.c    ****     Error_Handler();
 130:Src/main.c    ****   }
 131:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 132:Src/main.c    ****   */
 133:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 134:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 136:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 137:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 138:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 139:Src/main.c    **** 
 140:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 141:Src/main.c    ****   {
 142:Src/main.c    ****     Error_Handler();
 143:Src/main.c    ****   }
 144:Src/main.c    **** }
 145:Src/main.c    **** 
 146:Src/main.c    **** /**
 147:Src/main.c    ****   * @brief GPIO Initialization Function
 148:Src/main.c    ****   * @param None
ARM GAS  /tmp/ccCP5zb3.s 			page 4


 149:Src/main.c    ****   * @retval None
 150:Src/main.c    ****   */
 151:Src/main.c    **** static void MX_GPIO_Init(void)
 152:Src/main.c    **** {
  25              		.loc 1 152 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 24
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 70B5     		push	{r4, r5, r6, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 153:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 153 0
  40 0004 0023     		movs	r3, #0
  41 0006 0493     		str	r3, [sp, #16]
  42              	.LBB2:
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* GPIO Ports Clock Enable */
 156:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  43              		.loc 1 156 0
  44 0008 03F18043 		add	r3, r3, #1073741824
  45 000c 03F50433 		add	r3, r3, #135168
  46 0010 9A69     		ldr	r2, [r3, #24]
  47 0012 42F02002 		orr	r2, r2, #32
  48 0016 9A61     		str	r2, [r3, #24]
  49 0018 9B69     		ldr	r3, [r3, #24]
  50 001a 03F02003 		and	r3, r3, #32
  51 001e 0193     		str	r3, [sp, #4]
  52 0020 019B     		ldr	r3, [sp, #4]
  53              	.LBE2:
 157:Src/main.c    **** 
 158:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
  54              		.loc 1 158 0
  55 0022 0425     		movs	r5, #4
  56 0024 0295     		str	r5, [sp, #8]
 159:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  57              		.loc 1 159 0
  58 0026 0126     		movs	r6, #1
  59 0028 0396     		str	r6, [sp, #12]
 160:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 161:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  60              		.loc 1 161 0
  61 002a 0223     		movs	r3, #2
  62 002c 0593     		str	r3, [sp, #20]
 162:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
  63              		.loc 1 162 0
  64 002e 064C     		ldr	r4, .L3
  65 0030 02A9     		add	r1, sp, #8
  66 0032 2046     		mov	r0, r4
  67 0034 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccCP5zb3.s 			page 5


  68              	.LVL0:
 163:Src/main.c    **** 
 164:Src/main.c    ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
  69              		.loc 1 164 0
  70 0038 3246     		mov	r2, r6
  71 003a 2946     		mov	r1, r5
  72 003c 2046     		mov	r0, r4
  73 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  74              	.LVL1:
 165:Src/main.c    **** 
 166:Src/main.c    **** }
  75              		.loc 1 166 0
  76 0042 06B0     		add	sp, sp, #24
  77              	.LCFI2:
  78              		.cfi_def_cfa_offset 16
  79              		@ sp needed
  80 0044 70BD     		pop	{r4, r5, r6, pc}
  81              	.L4:
  82 0046 00BF     		.align	2
  83              	.L3:
  84 0048 00140140 		.word	1073812480
  85              		.cfi_endproc
  86              	.LFE68:
  88              		.section	.text.SystemClock_Config,"ax",%progbits
  89              		.align	1
  90              		.global	SystemClock_Config
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu softvfp
  96              	SystemClock_Config:
  97              	.LFB67:
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  98              		.loc 1 117 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 64
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102 0000 10B5     		push	{r4, lr}
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 107 0002 90B0     		sub	sp, sp, #64
 108              	.LCFI4:
 109              		.cfi_def_cfa_offset 72
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 110              		.loc 1 118 0
 111 0004 2422     		movs	r2, #36
 112 0006 0021     		movs	r1, #0
 113 0008 07A8     		add	r0, sp, #28
 114 000a FFF7FEFF 		bl	memset
 115              	.LVL2:
 119:Src/main.c    **** 
 116              		.loc 1 119 0
 117 000e 0024     		movs	r4, #0
 118 0010 0194     		str	r4, [sp, #4]
 119 0012 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/ccCP5zb3.s 			page 6


 120 0014 0394     		str	r4, [sp, #12]
 121 0016 0494     		str	r4, [sp, #16]
 122 0018 0594     		str	r4, [sp, #20]
 123:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 123              		.loc 1 123 0
 124 001a 0223     		movs	r3, #2
 125 001c 0693     		str	r3, [sp, #24]
 124:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 126              		.loc 1 124 0
 127 001e 0123     		movs	r3, #1
 128 0020 0A93     		str	r3, [sp, #40]
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 129              		.loc 1 125 0
 130 0022 1023     		movs	r3, #16
 131 0024 0B93     		str	r3, [sp, #44]
 127:Src/main.c    ****   {
 132              		.loc 1 127 0
 133 0026 06A8     		add	r0, sp, #24
 134 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 135              	.LVL3:
 133:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 136              		.loc 1 133 0
 137 002c 0F23     		movs	r3, #15
 138 002e 0193     		str	r3, [sp, #4]
 135:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139              		.loc 1 135 0
 140 0030 0294     		str	r4, [sp, #8]
 136:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 141              		.loc 1 136 0
 142 0032 0394     		str	r4, [sp, #12]
 137:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143              		.loc 1 137 0
 144 0034 0494     		str	r4, [sp, #16]
 138:Src/main.c    **** 
 145              		.loc 1 138 0
 146 0036 0594     		str	r4, [sp, #20]
 140:Src/main.c    ****   {
 147              		.loc 1 140 0
 148 0038 2146     		mov	r1, r4
 149 003a 01A8     		add	r0, sp, #4
 150 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 151              	.LVL4:
 144:Src/main.c    **** 
 152              		.loc 1 144 0
 153 0040 10B0     		add	sp, sp, #64
 154              	.LCFI5:
 155              		.cfi_def_cfa_offset 8
 156              		@ sp needed
 157 0042 10BD     		pop	{r4, pc}
 158              		.cfi_endproc
 159              	.LFE67:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
ARM GAS  /tmp/ccCP5zb3.s 			page 7


 167              		.fpu softvfp
 169              	main:
 170              	.LFB66:
  67:Src/main.c    ****   /* USER CODE BEGIN 1 */
 171              		.loc 1 67 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 10B5     		push	{r4, lr}
 176              	.LCFI6:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
  76:Src/main.c    **** 
 180              		.loc 1 76 0
 181 0002 FFF7FEFF 		bl	HAL_Init
 182              	.LVL5:
  83:Src/main.c    **** 
 183              		.loc 1 83 0
 184 0006 FFF7FEFF 		bl	SystemClock_Config
 185              	.LVL6:
  90:Src/main.c    ****   /* USER CODE BEGIN 2 */
 186              		.loc 1 90 0
 187 000a FFF7FEFF 		bl	MX_GPIO_Init
 188              	.LVL7:
  98:Src/main.c    ****   while (1)
 189              		.loc 1 98 0
 190 000e FFF7FEFF 		bl	HAL_GetTick
 191              	.LVL8:
 192 0012 0446     		mov	r4, r0
 193              	.LVL9:
 194              	.L8:
 102:Src/main.c    ****     {
 195              		.loc 1 102 0
 196 0014 FFF7FEFF 		bl	HAL_GetTick
 197              	.LVL10:
 198 0018 001B     		subs	r0, r0, r4
 199 001a B0F57A7F 		cmp	r0, #1000
 200 001e F9D3     		bcc	.L8
 104:Src/main.c    ****       tick = HAL_GetTick();
 201              		.loc 1 104 0
 202 0020 0421     		movs	r1, #4
 203 0022 0348     		ldr	r0, .L11
 204 0024 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 205              	.LVL11:
 105:Src/main.c    ****     }
 206              		.loc 1 105 0
 207 0028 FFF7FEFF 		bl	HAL_GetTick
 208              	.LVL12:
 209 002c 0446     		mov	r4, r0
 210              	.LVL13:
 211 002e F1E7     		b	.L8
 212              	.L12:
 213              		.align	2
 214              	.L11:
 215 0030 00140140 		.word	1073812480
 216              		.cfi_endproc
ARM GAS  /tmp/ccCP5zb3.s 			page 8


 217              	.LFE66:
 219              		.section	.text.Error_Handler,"ax",%progbits
 220              		.align	1
 221              		.global	Error_Handler
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	Error_Handler:
 228              	.LFB69:
 167:Src/main.c    **** 
 168:Src/main.c    **** /* USER CODE BEGIN 4 */
 169:Src/main.c    **** 
 170:Src/main.c    **** /* USER CODE END 4 */
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 174:Src/main.c    ****   * @retval None
 175:Src/main.c    ****   */
 176:Src/main.c    **** void Error_Handler(void)
 177:Src/main.c    **** {
 229              		.loc 1 177 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 178:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 179:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 182:Src/main.c    **** }
 234              		.loc 1 182 0
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE69:
 239              		.text
 240              	.Letext0:
 241              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 242              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 243              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 244              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 245              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 246              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 247              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 248              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 249              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 250              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 251              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 252              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 253              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 254              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 255              		.file 16 "<built-in>"
ARM GAS  /tmp/ccCP5zb3.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccCP5zb3.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccCP5zb3.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccCP5zb3.s:84     .text.MX_GPIO_Init:0000000000000048 $d
     /tmp/ccCP5zb3.s:89     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccCP5zb3.s:96     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccCP5zb3.s:162    .text.main:0000000000000000 $t
     /tmp/ccCP5zb3.s:169    .text.main:0000000000000000 main
     /tmp/ccCP5zb3.s:215    .text.main:0000000000000030 $d
     /tmp/ccCP5zb3.s:220    .text.Error_Handler:0000000000000000 $t
     /tmp/ccCP5zb3.s:227    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_GPIO_TogglePin
