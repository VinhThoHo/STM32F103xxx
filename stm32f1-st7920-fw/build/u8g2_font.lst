ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g2_font.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_font_get_byte,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	u8g2_font_get_byte:
  23              	.LFB0:
  24              		.file 1 "u8g2/csrc/u8g2_font.c"
   1:u8g2/csrc/u8g2_font.c **** /*
   2:u8g2/csrc/u8g2_font.c **** 
   3:u8g2/csrc/u8g2_font.c ****   u8g2_font.c
   4:u8g2/csrc/u8g2_font.c **** 
   5:u8g2/csrc/u8g2_font.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2/csrc/u8g2_font.c **** 
   7:u8g2/csrc/u8g2_font.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2/csrc/u8g2_font.c ****   All rights reserved.
   9:u8g2/csrc/u8g2_font.c **** 
  10:u8g2/csrc/u8g2_font.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2/csrc/u8g2_font.c ****   are permitted provided that the following conditions are met:
  12:u8g2/csrc/u8g2_font.c **** 
  13:u8g2/csrc/u8g2_font.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2/csrc/u8g2_font.c ****     of conditions and the following disclaimer.
  15:u8g2/csrc/u8g2_font.c ****     
  16:u8g2/csrc/u8g2_font.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2/csrc/u8g2_font.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2/csrc/u8g2_font.c ****     materials provided with the distribution.
  19:u8g2/csrc/u8g2_font.c **** 
  20:u8g2/csrc/u8g2_font.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2/csrc/u8g2_font.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2/csrc/u8g2_font.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2/csrc/u8g2_font.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2/csrc/u8g2_font.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2/csrc/u8g2_font.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2/csrc/u8g2_font.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2/csrc/u8g2_font.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2/csrc/u8g2_font.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2/csrc/u8g2_font.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2/csrc/u8g2_font.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2/csrc/u8g2_font.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:u8g2/csrc/u8g2_font.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2/csrc/u8g2_font.c **** 
  34:u8g2/csrc/u8g2_font.c **** */
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 2


  35:u8g2/csrc/u8g2_font.c **** 
  36:u8g2/csrc/u8g2_font.c **** #include "u8g2.h"
  37:u8g2/csrc/u8g2_font.c **** 
  38:u8g2/csrc/u8g2_font.c **** /* size of the font data structure, there is no struct or class... */
  39:u8g2/csrc/u8g2_font.c **** /* this is the size for the new font format */
  40:u8g2/csrc/u8g2_font.c **** #define U8G2_FONT_DATA_STRUCT_SIZE 23
  41:u8g2/csrc/u8g2_font.c **** 
  42:u8g2/csrc/u8g2_font.c **** /*
  43:u8g2/csrc/u8g2_font.c ****   font data:
  44:u8g2/csrc/u8g2_font.c **** 
  45:u8g2/csrc/u8g2_font.c ****   offset	bytes	description
  46:u8g2/csrc/u8g2_font.c ****   0		1		glyph_cnt		number of glyphs
  47:u8g2/csrc/u8g2_font.c ****   1		1		bbx_mode	0: proportional, 1: common height, 2: monospace, 3: multiple of 8
  48:u8g2/csrc/u8g2_font.c ****   2		1		bits_per_0	glyph rle parameter
  49:u8g2/csrc/u8g2_font.c ****   3		1		bits_per_1	glyph rle parameter
  50:u8g2/csrc/u8g2_font.c **** 
  51:u8g2/csrc/u8g2_font.c ****   4		1		bits_per_char_width		glyph rle parameter
  52:u8g2/csrc/u8g2_font.c ****   5		1		bits_per_char_height	glyph rle parameter
  53:u8g2/csrc/u8g2_font.c ****   6		1		bits_per_char_x		glyph rle parameter
  54:u8g2/csrc/u8g2_font.c ****   7		1		bits_per_char_y		glyph rle parameter
  55:u8g2/csrc/u8g2_font.c ****   8		1		bits_per_delta_x		glyph rle parameter
  56:u8g2/csrc/u8g2_font.c **** 
  57:u8g2/csrc/u8g2_font.c ****   9		1		max_char_width
  58:u8g2/csrc/u8g2_font.c ****   10		1		max_char_height
  59:u8g2/csrc/u8g2_font.c ****   11		1		x offset
  60:u8g2/csrc/u8g2_font.c ****   12		1		y offset (descent)
  61:u8g2/csrc/u8g2_font.c ****   
  62:u8g2/csrc/u8g2_font.c ****   13		1		ascent (capital A)
  63:u8g2/csrc/u8g2_font.c ****   14		1		descent (lower g)
  64:u8g2/csrc/u8g2_font.c ****   15		1		ascent '('
  65:u8g2/csrc/u8g2_font.c ****   16		1		descent ')'
  66:u8g2/csrc/u8g2_font.c ****   
  67:u8g2/csrc/u8g2_font.c ****   17		1		start pos 'A' high byte
  68:u8g2/csrc/u8g2_font.c ****   18		1		start pos 'A' low byte
  69:u8g2/csrc/u8g2_font.c **** 
  70:u8g2/csrc/u8g2_font.c ****   19		1		start pos 'a' high byte
  71:u8g2/csrc/u8g2_font.c ****   20		1		start pos 'a' low byte
  72:u8g2/csrc/u8g2_font.c **** 
  73:u8g2/csrc/u8g2_font.c ****   21		1		start pos unicode high byte
  74:u8g2/csrc/u8g2_font.c ****   22		1		start pos unicode low byte
  75:u8g2/csrc/u8g2_font.c **** 
  76:u8g2/csrc/u8g2_font.c ****   Font build mode, 0: proportional, 1: common height, 2: monospace, 3: multiple of 8
  77:u8g2/csrc/u8g2_font.c **** 
  78:u8g2/csrc/u8g2_font.c ****   Font build mode 0:		
  79:u8g2/csrc/u8g2_font.c ****     - "t"
  80:u8g2/csrc/u8g2_font.c ****     - Ref height mode: U8G2_FONT_HEIGHT_MODE_TEXT, U8G2_FONT_HEIGHT_MODE_XTEXT or U8G2_FONT_HEIGHT_
  81:u8g2/csrc/u8g2_font.c ****     - use in transparent mode only (does not look good in solid mode)
  82:u8g2/csrc/u8g2_font.c ****     - most compact format
  83:u8g2/csrc/u8g2_font.c ****     - different font heights possible
  84:u8g2/csrc/u8g2_font.c ****     
  85:u8g2/csrc/u8g2_font.c ****   Font build mode 1:		
  86:u8g2/csrc/u8g2_font.c ****     - "h"
  87:u8g2/csrc/u8g2_font.c ****     - Ref height mode: U8G2_FONT_HEIGHT_MODE_ALL
  88:u8g2/csrc/u8g2_font.c ****     - transparent or solid mode
  89:u8g2/csrc/u8g2_font.c ****     - The height of the glyphs depend on the largest glyph in the font. This means font height depe
  90:u8g2/csrc/u8g2_font.c **** 
  91:u8g2/csrc/u8g2_font.c **** */
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 3


  92:u8g2/csrc/u8g2_font.c **** 
  93:u8g2/csrc/u8g2_font.c **** /* use case: What is the width and the height of the minimal box into which string s fints? */
  94:u8g2/csrc/u8g2_font.c **** void u8g2_font_GetStrSize(const void *font, const char *s, u8g2_uint_t *width, u8g2_uint_t *height)
  95:u8g2/csrc/u8g2_font.c **** void u8g2_font_GetStrSizeP(const void *font, const char *s, u8g2_uint_t *width, u8g2_uint_t *height
  96:u8g2/csrc/u8g2_font.c **** 
  97:u8g2/csrc/u8g2_font.c **** /* use case: lower left edge of a minimal box is known, what is the correct x, y position for the s
  98:u8g2/csrc/u8g2_font.c **** void u8g2_font_AdjustXYToDraw(const void *font, const char *s, u8g2_uint_t *x, u8g2_uint_t *y);
  99:u8g2/csrc/u8g2_font.c **** void u8g2_font_AdjustXYToDrawP(const void *font, const char *s, u8g2_uint_t *x, u8g2_uint_t *y);
 100:u8g2/csrc/u8g2_font.c **** 
 101:u8g2/csrc/u8g2_font.c **** /* use case: Baseline origin known, return minimal box */
 102:u8g2/csrc/u8g2_font.c **** void u8g2_font_GetStrMinBox(u8g2_t *u8g2, const void *font, const char *s, u8g2_uint_t *x, u8g2_uin
 103:u8g2/csrc/u8g2_font.c **** 
 104:u8g2/csrc/u8g2_font.c **** /* procedures */
 105:u8g2/csrc/u8g2_font.c **** 
 106:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 107:u8g2/csrc/u8g2_font.c **** /* low level byte and word access */
 108:u8g2/csrc/u8g2_font.c **** 
 109:u8g2/csrc/u8g2_font.c **** /* removed NOINLINE, because it leads to smaller code, might also be faster */
 110:u8g2/csrc/u8g2_font.c **** //static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
 111:u8g2/csrc/u8g2_font.c **** static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
 112:u8g2/csrc/u8g2_font.c **** {
  25              		.loc 1 112 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 113:u8g2/csrc/u8g2_font.c ****   font += offset;
 114:u8g2/csrc/u8g2_font.c ****   return u8x8_pgm_read( font );  
 115:u8g2/csrc/u8g2_font.c **** }
  31              		.loc 1 115 0
  32 0000 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
  33              	.LVL1:
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE0:
  38              		.section	.text.u8g2_font_get_word,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	u8g2_font_get_word:
  46              	.LFB1:
 116:u8g2/csrc/u8g2_font.c **** 
 117:u8g2/csrc/u8g2_font.c **** static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset) U8G2_NOINLINE; 
 118:u8g2/csrc/u8g2_font.c **** static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
 119:u8g2/csrc/u8g2_font.c **** {
  47              		.loc 1 119 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL2:
 120:u8g2/csrc/u8g2_font.c ****     uint16_t pos;
 121:u8g2/csrc/u8g2_font.c ****     font += offset;
  53              		.loc 1 121 0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 4


  54 0000 4218     		adds	r2, r0, r1
  55              	.LVL3:
 122:u8g2/csrc/u8g2_font.c ****     pos = u8x8_pgm_read( font );
  56              		.loc 1 122 0
  57 0002 435C     		ldrb	r3, [r0, r1]	@ zero_extendqisi2
  58              	.LVL4:
 123:u8g2/csrc/u8g2_font.c ****     font++;
 124:u8g2/csrc/u8g2_font.c ****     pos <<= 8;
 125:u8g2/csrc/u8g2_font.c ****     pos += u8x8_pgm_read( font);
  59              		.loc 1 125 0
  60 0004 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
  61 0006 00EB0320 		add	r0, r0, r3, lsl #8
  62              	.LVL5:
 126:u8g2/csrc/u8g2_font.c ****     return pos;
 127:u8g2/csrc/u8g2_font.c **** }
  63              		.loc 1 127 0
  64 000a 80B2     		uxth	r0, r0
  65 000c 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE1:
  69              		.section	.text.u8g2_add_vector_y,"ax",%progbits
  70              		.align	1
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  76              	u8g2_add_vector_y:
  77              	.LFB11:
 128:u8g2/csrc/u8g2_font.c **** 
 129:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 130:u8g2/csrc/u8g2_font.c **** /* new font format */
 131:u8g2/csrc/u8g2_font.c **** void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
 132:u8g2/csrc/u8g2_font.c **** {
 133:u8g2/csrc/u8g2_font.c ****   /* offset 0 */
 134:u8g2/csrc/u8g2_font.c ****   font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
 135:u8g2/csrc/u8g2_font.c ****   font_info->bbx_mode = u8g2_font_get_byte(font, 1);
 136:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
 137:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
 138:u8g2/csrc/u8g2_font.c ****   
 139:u8g2/csrc/u8g2_font.c ****   /* offset 4 */
 140:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
 141:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
 142:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
 143:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
 144:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
 145:u8g2/csrc/u8g2_font.c ****   
 146:u8g2/csrc/u8g2_font.c ****   /* offset 9 */
 147:u8g2/csrc/u8g2_font.c ****   font_info->max_char_width = u8g2_font_get_byte(font, 9);
 148:u8g2/csrc/u8g2_font.c ****   font_info->max_char_height = u8g2_font_get_byte(font, 10);
 149:u8g2/csrc/u8g2_font.c ****   font_info->x_offset = u8g2_font_get_byte(font, 11);
 150:u8g2/csrc/u8g2_font.c ****   font_info->y_offset = u8g2_font_get_byte(font, 12);
 151:u8g2/csrc/u8g2_font.c ****   
 152:u8g2/csrc/u8g2_font.c ****   /* offset 13 */
 153:u8g2/csrc/u8g2_font.c ****   font_info->ascent_A = u8g2_font_get_byte(font, 13);
 154:u8g2/csrc/u8g2_font.c ****   font_info->descent_g = u8g2_font_get_byte(font, 14);
 155:u8g2/csrc/u8g2_font.c ****   font_info->ascent_para = u8g2_font_get_byte(font, 15);
 156:u8g2/csrc/u8g2_font.c ****   font_info->descent_para = u8g2_font_get_byte(font, 16);
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 5


 157:u8g2/csrc/u8g2_font.c ****   
 158:u8g2/csrc/u8g2_font.c ****   /* offset 17 */
 159:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
 160:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
 161:u8g2/csrc/u8g2_font.c ****   
 162:u8g2/csrc/u8g2_font.c ****   /* offset 21 */
 163:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_UNICODE
 164:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_unicode = u8g2_font_get_word(font, 21); 
 165:u8g2/csrc/u8g2_font.c **** #endif
 166:u8g2/csrc/u8g2_font.c **** }
 167:u8g2/csrc/u8g2_font.c **** 
 168:u8g2/csrc/u8g2_font.c **** 
 169:u8g2/csrc/u8g2_font.c **** /* calculate the overall length of the font, only used to create the picture for the google wiki */
 170:u8g2/csrc/u8g2_font.c **** size_t u8g2_GetFontSize(const uint8_t *font_arg)
 171:u8g2/csrc/u8g2_font.c **** {
 172:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 173:u8g2/csrc/u8g2_font.c ****   const uint8_t *font = font_arg;
 174:u8g2/csrc/u8g2_font.c ****   font += U8G2_FONT_DATA_STRUCT_SIZE;
 175:u8g2/csrc/u8g2_font.c ****   
 176:u8g2/csrc/u8g2_font.c ****   for(;;)
 177:u8g2/csrc/u8g2_font.c ****   {
 178:u8g2/csrc/u8g2_font.c ****     if ( u8x8_pgm_read( font + 1 ) == 0 )
 179:u8g2/csrc/u8g2_font.c ****       break;
 180:u8g2/csrc/u8g2_font.c ****     font += u8x8_pgm_read( font + 1 );
 181:u8g2/csrc/u8g2_font.c ****   }
 182:u8g2/csrc/u8g2_font.c ****   
 183:u8g2/csrc/u8g2_font.c ****   /* continue with unicode section */
 184:u8g2/csrc/u8g2_font.c ****   font += 2;
 185:u8g2/csrc/u8g2_font.c ****   
 186:u8g2/csrc/u8g2_font.c ****   for(;;)
 187:u8g2/csrc/u8g2_font.c ****   {
 188:u8g2/csrc/u8g2_font.c ****     e = u8x8_pgm_read( font );
 189:u8g2/csrc/u8g2_font.c ****     e <<= 8;
 190:u8g2/csrc/u8g2_font.c ****     e |= u8x8_pgm_read( font + 1 );
 191:u8g2/csrc/u8g2_font.c ****     if ( e == 0 )
 192:u8g2/csrc/u8g2_font.c ****       break;
 193:u8g2/csrc/u8g2_font.c ****     font += u8x8_pgm_read( font + 2 );    
 194:u8g2/csrc/u8g2_font.c ****   }
 195:u8g2/csrc/u8g2_font.c ****   
 196:u8g2/csrc/u8g2_font.c ****   return (font - font_arg) + 2;
 197:u8g2/csrc/u8g2_font.c **** }
 198:u8g2/csrc/u8g2_font.c **** 
 199:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 200:u8g2/csrc/u8g2_font.c **** /* u8g2 interface, font access */
 201:u8g2/csrc/u8g2_font.c **** 
 202:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontBBXWidth(u8g2_t *u8g2)
 203:u8g2/csrc/u8g2_font.c **** {
 204:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_width;		/* new font info structure */
 205:u8g2/csrc/u8g2_font.c **** }
 206:u8g2/csrc/u8g2_font.c **** 
 207:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontBBXHeight(u8g2_t *u8g2)
 208:u8g2/csrc/u8g2_font.c **** {
 209:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_height;		/* new font info structure */
 210:u8g2/csrc/u8g2_font.c **** }
 211:u8g2/csrc/u8g2_font.c **** 
 212:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffX(u8g2_t *u8g2) U8G2_NOINLINE;
 213:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffX(u8g2_t *u8g2)
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 6


 214:u8g2/csrc/u8g2_font.c **** {
 215:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.x_offset;		/* new font info structure */
 216:u8g2/csrc/u8g2_font.c **** }
 217:u8g2/csrc/u8g2_font.c **** 
 218:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffY(u8g2_t *u8g2) U8G2_NOINLINE;
 219:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffY(u8g2_t *u8g2)
 220:u8g2/csrc/u8g2_font.c **** {
 221:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.y_offset;		/* new font info structure */
 222:u8g2/csrc/u8g2_font.c **** }
 223:u8g2/csrc/u8g2_font.c **** 
 224:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontCapitalAHeight(u8g2_t *u8g2) U8G2_NOINLINE; 
 225:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontCapitalAHeight(u8g2_t *u8g2)
 226:u8g2/csrc/u8g2_font.c **** {
 227:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.ascent_A;		/* new font info structure */
 228:u8g2/csrc/u8g2_font.c **** }
 229:u8g2/csrc/u8g2_font.c **** 
 230:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 231:u8g2/csrc/u8g2_font.c **** /* glyph handling */
 232:u8g2/csrc/u8g2_font.c **** 
 233:u8g2/csrc/u8g2_font.c **** /* optimized */
 234:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_font_decode_get_unsigned_bits(u8g2_font_decode_t *f, uint8_t cnt) 
 235:u8g2/csrc/u8g2_font.c **** {
 236:u8g2/csrc/u8g2_font.c ****   uint8_t val;
 237:u8g2/csrc/u8g2_font.c ****   uint8_t bit_pos = f->decode_bit_pos;
 238:u8g2/csrc/u8g2_font.c ****   uint8_t bit_pos_plus_cnt;
 239:u8g2/csrc/u8g2_font.c ****   
 240:u8g2/csrc/u8g2_font.c ****   //val = *(f->decode_ptr);
 241:u8g2/csrc/u8g2_font.c ****   val = u8x8_pgm_read( f->decode_ptr );  
 242:u8g2/csrc/u8g2_font.c ****   
 243:u8g2/csrc/u8g2_font.c ****   val >>= bit_pos;
 244:u8g2/csrc/u8g2_font.c ****   bit_pos_plus_cnt = bit_pos;
 245:u8g2/csrc/u8g2_font.c ****   bit_pos_plus_cnt += cnt;
 246:u8g2/csrc/u8g2_font.c ****   if ( bit_pos_plus_cnt >= 8 )
 247:u8g2/csrc/u8g2_font.c ****   {
 248:u8g2/csrc/u8g2_font.c ****     uint8_t s = 8;
 249:u8g2/csrc/u8g2_font.c ****     s -= bit_pos;
 250:u8g2/csrc/u8g2_font.c ****     f->decode_ptr++;
 251:u8g2/csrc/u8g2_font.c ****     //val |= *(f->decode_ptr) << (8-bit_pos);
 252:u8g2/csrc/u8g2_font.c ****     val |= u8x8_pgm_read( f->decode_ptr ) << (s);
 253:u8g2/csrc/u8g2_font.c ****     //bit_pos -= 8;
 254:u8g2/csrc/u8g2_font.c ****     bit_pos_plus_cnt -= 8;
 255:u8g2/csrc/u8g2_font.c ****   }
 256:u8g2/csrc/u8g2_font.c ****   val &= (1U<<cnt)-1;
 257:u8g2/csrc/u8g2_font.c ****   //bit_pos += cnt;
 258:u8g2/csrc/u8g2_font.c ****   
 259:u8g2/csrc/u8g2_font.c ****   f->decode_bit_pos = bit_pos_plus_cnt;
 260:u8g2/csrc/u8g2_font.c ****   return val;
 261:u8g2/csrc/u8g2_font.c **** }
 262:u8g2/csrc/u8g2_font.c **** 
 263:u8g2/csrc/u8g2_font.c **** 
 264:u8g2/csrc/u8g2_font.c **** /*
 265:u8g2/csrc/u8g2_font.c ****     2 bit --> cnt = 2
 266:u8g2/csrc/u8g2_font.c ****       -2,-1,0. 1
 267:u8g2/csrc/u8g2_font.c **** 
 268:u8g2/csrc/u8g2_font.c ****     3 bit --> cnt = 3
 269:u8g2/csrc/u8g2_font.c ****       -2,-1,0. 1
 270:u8g2/csrc/u8g2_font.c ****       -4,-3,-2,-1,0,1,2,3
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 7


 271:u8g2/csrc/u8g2_font.c **** 
 272:u8g2/csrc/u8g2_font.c ****       if ( x < 0 )
 273:u8g2/csrc/u8g2_font.c **** 	r = bits(x-1)+1;
 274:u8g2/csrc/u8g2_font.c ****     else
 275:u8g2/csrc/u8g2_font.c **** 	r = bits(x)+1;
 276:u8g2/csrc/u8g2_font.c **** 
 277:u8g2/csrc/u8g2_font.c **** */
 278:u8g2/csrc/u8g2_font.c **** /* optimized */
 279:u8g2/csrc/u8g2_font.c **** int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
 280:u8g2/csrc/u8g2_font.c **** {
 281:u8g2/csrc/u8g2_font.c ****   int8_t v, d;
 282:u8g2/csrc/u8g2_font.c ****   v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
 283:u8g2/csrc/u8g2_font.c ****   d = 1;
 284:u8g2/csrc/u8g2_font.c ****   cnt--;
 285:u8g2/csrc/u8g2_font.c ****   d <<= cnt;
 286:u8g2/csrc/u8g2_font.c ****   v -= d;
 287:u8g2/csrc/u8g2_font.c ****   return v;
 288:u8g2/csrc/u8g2_font.c ****   //return (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt) - ((1<<cnt)>>1);
 289:u8g2/csrc/u8g2_font.c **** }
 290:u8g2/csrc/u8g2_font.c **** 
 291:u8g2/csrc/u8g2_font.c **** 
 292:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 293:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir) U8G2_NOINLINE
 294:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)
 295:u8g2/csrc/u8g2_font.c **** {
  78              		.loc 1 295 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL6:
 296:u8g2/csrc/u8g2_font.c ****   switch(dir)
  84              		.loc 1 296 0
  85 0000 012B     		cmp	r3, #1
  86 0002 08D0     		beq	.L5
  87 0004 23B1     		cbz	r3, .L6
  88 0006 022B     		cmp	r3, #2
  89 0008 08D0     		beq	.L7
 297:u8g2/csrc/u8g2_font.c ****   {
 298:u8g2/csrc/u8g2_font.c ****     case 0:
 299:u8g2/csrc/u8g2_font.c ****       dy += y;
 300:u8g2/csrc/u8g2_font.c ****       break;
 301:u8g2/csrc/u8g2_font.c ****     case 1:
 302:u8g2/csrc/u8g2_font.c ****       dy += x;
 303:u8g2/csrc/u8g2_font.c ****       break;
 304:u8g2/csrc/u8g2_font.c ****     case 2:
 305:u8g2/csrc/u8g2_font.c ****       dy -= y;
 306:u8g2/csrc/u8g2_font.c ****       break;
 307:u8g2/csrc/u8g2_font.c ****     default:
 308:u8g2/csrc/u8g2_font.c ****       dy -= x;
  90              		.loc 1 308 0
  91 000a 401A     		subs	r0, r0, r1
  92              	.LVL7:
  93 000c C0B2     		uxtb	r0, r0
  94              	.LVL8:
 309:u8g2/csrc/u8g2_font.c ****       break;      
 310:u8g2/csrc/u8g2_font.c ****   }
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 8


 311:u8g2/csrc/u8g2_font.c ****   return dy;
 312:u8g2/csrc/u8g2_font.c **** }
  95              		.loc 1 312 0
  96 000e 7047     		bx	lr
  97              	.L6:
 299:u8g2/csrc/u8g2_font.c ****       break;
  98              		.loc 1 299 0
  99 0010 1044     		add	r0, r0, r2
 100              	.LVL9:
 101 0012 C0B2     		uxtb	r0, r0
 102              	.LVL10:
 300:u8g2/csrc/u8g2_font.c ****     case 1:
 103              		.loc 1 300 0
 104 0014 7047     		bx	lr
 105              	.L5:
 302:u8g2/csrc/u8g2_font.c ****       break;
 106              		.loc 1 302 0
 107 0016 0844     		add	r0, r0, r1
 108              	.LVL11:
 109 0018 C0B2     		uxtb	r0, r0
 110              	.LVL12:
 303:u8g2/csrc/u8g2_font.c ****     case 2:
 111              		.loc 1 303 0
 112 001a 7047     		bx	lr
 113              	.L7:
 305:u8g2/csrc/u8g2_font.c ****       break;
 114              		.loc 1 305 0
 115 001c 801A     		subs	r0, r0, r2
 116              	.LVL13:
 117 001e C0B2     		uxtb	r0, r0
 118              	.LVL14:
 306:u8g2/csrc/u8g2_font.c ****     default:
 119              		.loc 1 306 0
 120 0020 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE11:
 124              		.section	.text.u8g2_add_vector_x,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	u8g2_add_vector_x:
 132              	.LFB12:
 313:u8g2/csrc/u8g2_font.c **** 
 314:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir) U8G2_NOINLINE
 315:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)
 316:u8g2/csrc/u8g2_font.c **** {
 133              		.loc 1 316 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL15:
 317:u8g2/csrc/u8g2_font.c ****   switch(dir)
 139              		.loc 1 317 0
 140 0000 012B     		cmp	r3, #1
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 9


 141 0002 08D0     		beq	.L12
 142 0004 23B1     		cbz	r3, .L13
 143 0006 022B     		cmp	r3, #2
 144 0008 08D0     		beq	.L14
 318:u8g2/csrc/u8g2_font.c ****   {
 319:u8g2/csrc/u8g2_font.c ****     case 0:
 320:u8g2/csrc/u8g2_font.c ****       dx += x;
 321:u8g2/csrc/u8g2_font.c ****       break;
 322:u8g2/csrc/u8g2_font.c ****     case 1:
 323:u8g2/csrc/u8g2_font.c ****       dx -= y;
 324:u8g2/csrc/u8g2_font.c ****       break;
 325:u8g2/csrc/u8g2_font.c ****     case 2:
 326:u8g2/csrc/u8g2_font.c ****       dx -= x;
 327:u8g2/csrc/u8g2_font.c ****       break;
 328:u8g2/csrc/u8g2_font.c ****     default:
 329:u8g2/csrc/u8g2_font.c ****       dx += y;
 145              		.loc 1 329 0
 146 000a 1044     		add	r0, r0, r2
 147              	.LVL16:
 148 000c C0B2     		uxtb	r0, r0
 149              	.LVL17:
 330:u8g2/csrc/u8g2_font.c ****       break;      
 331:u8g2/csrc/u8g2_font.c ****   }
 332:u8g2/csrc/u8g2_font.c ****   return dx;
 333:u8g2/csrc/u8g2_font.c **** }
 150              		.loc 1 333 0
 151 000e 7047     		bx	lr
 152              	.L13:
 320:u8g2/csrc/u8g2_font.c ****       break;
 153              		.loc 1 320 0
 154 0010 0844     		add	r0, r0, r1
 155              	.LVL18:
 156 0012 C0B2     		uxtb	r0, r0
 157              	.LVL19:
 321:u8g2/csrc/u8g2_font.c ****     case 1:
 158              		.loc 1 321 0
 159 0014 7047     		bx	lr
 160              	.L12:
 323:u8g2/csrc/u8g2_font.c ****       break;
 161              		.loc 1 323 0
 162 0016 801A     		subs	r0, r0, r2
 163              	.LVL20:
 164 0018 C0B2     		uxtb	r0, r0
 165              	.LVL21:
 324:u8g2/csrc/u8g2_font.c ****     case 2:
 166              		.loc 1 324 0
 167 001a 7047     		bx	lr
 168              	.L14:
 326:u8g2/csrc/u8g2_font.c ****       break;
 169              		.loc 1 326 0
 170 001c 401A     		subs	r0, r0, r1
 171              	.LVL22:
 172 001e C0B2     		uxtb	r0, r0
 173              	.LVL23:
 327:u8g2/csrc/u8g2_font.c ****     default:
 174              		.loc 1 327 0
 175 0020 7047     		bx	lr
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 10


 176              		.cfi_endproc
 177              	.LFE12:
 179              		.section	.text.u8g2_font_calc_vref_font,"ax",%progbits
 180              		.align	1
 181              		.global	u8g2_font_calc_vref_font
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu softvfp
 187              	u8g2_font_calc_vref_font:
 188              	.LFB31:
 334:u8g2/csrc/u8g2_font.c **** #endif
 335:u8g2/csrc/u8g2_font.c **** 
 336:u8g2/csrc/u8g2_font.c **** 
 337:u8g2/csrc/u8g2_font.c **** 
 338:u8g2/csrc/u8g2_font.c **** /*
 339:u8g2/csrc/u8g2_font.c ****   Description:
 340:u8g2/csrc/u8g2_font.c ****     Draw a run-length area of the glyph. "len" can have any size and the line
 341:u8g2/csrc/u8g2_font.c ****     length has to be wrapped at the glyph border.
 342:u8g2/csrc/u8g2_font.c ****   Args:
 343:u8g2/csrc/u8g2_font.c ****     len: 					Length of the line
 344:u8g2/csrc/u8g2_font.c ****     is_foreground			foreground/background?
 345:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_x		X position
 346:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_y		Y position
 347:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.is_transparent	Transparent mode
 348:u8g2/csrc/u8g2_font.c ****   Return:
 349:u8g2/csrc/u8g2_font.c ****     -
 350:u8g2/csrc/u8g2_font.c ****   Calls:
 351:u8g2/csrc/u8g2_font.c ****     u8g2_Draw90Line()
 352:u8g2/csrc/u8g2_font.c ****   Called by:
 353:u8g2/csrc/u8g2_font.c ****     u8g2_font_decode_glyph()
 354:u8g2/csrc/u8g2_font.c **** */
 355:u8g2/csrc/u8g2_font.c **** /* optimized */
 356:u8g2/csrc/u8g2_font.c **** void u8g2_font_decode_len(u8g2_t *u8g2, uint8_t len, uint8_t is_foreground)
 357:u8g2/csrc/u8g2_font.c **** {
 358:u8g2/csrc/u8g2_font.c ****   uint8_t cnt;	/* total number of remaining pixels, which have to be drawn */
 359:u8g2/csrc/u8g2_font.c ****   uint8_t rem; 	/* remaining pixel to the right edge of the glyph */
 360:u8g2/csrc/u8g2_font.c ****   uint8_t current;	/* number of pixels, which need to be drawn for the draw procedure */
 361:u8g2/csrc/u8g2_font.c ****     /* current is either equal to cnt or equal to rem */
 362:u8g2/csrc/u8g2_font.c ****   
 363:u8g2/csrc/u8g2_font.c ****   /* local coordinates of the glyph */
 364:u8g2/csrc/u8g2_font.c ****   uint8_t lx,ly;
 365:u8g2/csrc/u8g2_font.c ****   
 366:u8g2/csrc/u8g2_font.c ****   /* target position on the screen */
 367:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t x, y;
 368:u8g2/csrc/u8g2_font.c ****   
 369:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 370:u8g2/csrc/u8g2_font.c ****   
 371:u8g2/csrc/u8g2_font.c ****   cnt = len;
 372:u8g2/csrc/u8g2_font.c ****   
 373:u8g2/csrc/u8g2_font.c ****   /* get the local position */
 374:u8g2/csrc/u8g2_font.c ****   lx = decode->x;
 375:u8g2/csrc/u8g2_font.c ****   ly = decode->y;
 376:u8g2/csrc/u8g2_font.c ****   
 377:u8g2/csrc/u8g2_font.c ****   for(;;)
 378:u8g2/csrc/u8g2_font.c ****   {
 379:u8g2/csrc/u8g2_font.c ****     /* calculate the number of pixel to the right edge of the glyph */
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 11


 380:u8g2/csrc/u8g2_font.c ****     rem = decode->glyph_width;
 381:u8g2/csrc/u8g2_font.c ****     rem -= lx;
 382:u8g2/csrc/u8g2_font.c ****     
 383:u8g2/csrc/u8g2_font.c ****     /* calculate how many pixel to draw. This is either to the right edge */
 384:u8g2/csrc/u8g2_font.c ****     /* or lesser, if not enough pixel are left */
 385:u8g2/csrc/u8g2_font.c ****     current = rem;
 386:u8g2/csrc/u8g2_font.c ****     if ( cnt < rem )
 387:u8g2/csrc/u8g2_font.c ****       current = cnt;
 388:u8g2/csrc/u8g2_font.c ****     
 389:u8g2/csrc/u8g2_font.c ****     
 390:u8g2/csrc/u8g2_font.c ****     /* now draw the line, but apply the rotation around the glyph target position */
 391:u8g2/csrc/u8g2_font.c ****     //u8g2_font_decode_draw_pixel(u8g2, lx,ly,current, is_foreground);
 392:u8g2/csrc/u8g2_font.c **** 
 393:u8g2/csrc/u8g2_font.c ****     /* get target position */
 394:u8g2/csrc/u8g2_font.c ****     x = decode->target_x;
 395:u8g2/csrc/u8g2_font.c ****     y = decode->target_y;
 396:u8g2/csrc/u8g2_font.c **** 
 397:u8g2/csrc/u8g2_font.c ****     /* apply rotation */
 398:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 399:u8g2/csrc/u8g2_font.c ****     x = u8g2_add_vector_x(x, lx, ly, decode->dir);
 400:u8g2/csrc/u8g2_font.c ****     y = u8g2_add_vector_y(y, lx, ly, decode->dir);
 401:u8g2/csrc/u8g2_font.c **** #else
 402:u8g2/csrc/u8g2_font.c ****     x += lx;
 403:u8g2/csrc/u8g2_font.c ****     y += ly;
 404:u8g2/csrc/u8g2_font.c **** #endif
 405:u8g2/csrc/u8g2_font.c ****     
 406:u8g2/csrc/u8g2_font.c ****     /* draw foreground and background (if required) */
 407:u8g2/csrc/u8g2_font.c ****     if ( is_foreground )
 408:u8g2/csrc/u8g2_font.c ****     {
 409:u8g2/csrc/u8g2_font.c ****       u8g2->draw_color = decode->fg_color;			/* draw_color will be restored later */
 410:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 411:u8g2/csrc/u8g2_font.c **** 	x, 
 412:u8g2/csrc/u8g2_font.c **** 	y, 
 413:u8g2/csrc/u8g2_font.c **** 	current, 
 414:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 415:u8g2/csrc/u8g2_font.c **** 	/* dir */ decode->dir
 416:u8g2/csrc/u8g2_font.c **** #else
 417:u8g2/csrc/u8g2_font.c **** 	0
 418:u8g2/csrc/u8g2_font.c **** #endif
 419:u8g2/csrc/u8g2_font.c ****       );
 420:u8g2/csrc/u8g2_font.c ****     }
 421:u8g2/csrc/u8g2_font.c ****     else if ( decode->is_transparent == 0 )    
 422:u8g2/csrc/u8g2_font.c ****     {
 423:u8g2/csrc/u8g2_font.c ****       u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
 424:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 425:u8g2/csrc/u8g2_font.c **** 	x, 
 426:u8g2/csrc/u8g2_font.c **** 	y, 
 427:u8g2/csrc/u8g2_font.c **** 	current, 
 428:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 429:u8g2/csrc/u8g2_font.c **** 	/* dir */ decode->dir
 430:u8g2/csrc/u8g2_font.c **** #else
 431:u8g2/csrc/u8g2_font.c **** 	0
 432:u8g2/csrc/u8g2_font.c **** #endif
 433:u8g2/csrc/u8g2_font.c ****       );   
 434:u8g2/csrc/u8g2_font.c ****     }
 435:u8g2/csrc/u8g2_font.c ****     
 436:u8g2/csrc/u8g2_font.c ****     /* check, whether the end of the run length code has been reached */
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 12


 437:u8g2/csrc/u8g2_font.c ****     if ( cnt < rem )
 438:u8g2/csrc/u8g2_font.c ****       break;
 439:u8g2/csrc/u8g2_font.c ****     cnt -= rem;
 440:u8g2/csrc/u8g2_font.c ****     lx = 0;
 441:u8g2/csrc/u8g2_font.c ****     ly++;
 442:u8g2/csrc/u8g2_font.c ****   }
 443:u8g2/csrc/u8g2_font.c ****   lx += cnt;
 444:u8g2/csrc/u8g2_font.c ****   
 445:u8g2/csrc/u8g2_font.c ****   decode->x = lx;
 446:u8g2/csrc/u8g2_font.c ****   decode->y = ly;
 447:u8g2/csrc/u8g2_font.c ****   
 448:u8g2/csrc/u8g2_font.c **** }
 449:u8g2/csrc/u8g2_font.c **** 
 450:u8g2/csrc/u8g2_font.c **** static void u8g2_font_setup_decode(u8g2_t *u8g2, const uint8_t *glyph_data)
 451:u8g2/csrc/u8g2_font.c **** {
 452:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 453:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr = glyph_data;
 454:u8g2/csrc/u8g2_font.c ****   decode->decode_bit_pos = 0;
 455:u8g2/csrc/u8g2_font.c ****   
 456:u8g2/csrc/u8g2_font.c ****   /* 8 Nov 2015, this is already done in the glyph data search procedure */
 457:u8g2/csrc/u8g2_font.c ****   /*
 458:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr += 1;
 459:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr += 1;
 460:u8g2/csrc/u8g2_font.c ****   */
 461:u8g2/csrc/u8g2_font.c ****   
 462:u8g2/csrc/u8g2_font.c ****   decode->glyph_width = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_char_wi
 463:u8g2/csrc/u8g2_font.c ****   decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_he
 464:u8g2/csrc/u8g2_font.c ****   
 465:u8g2/csrc/u8g2_font.c ****   decode->fg_color = u8g2->draw_color;
 466:u8g2/csrc/u8g2_font.c ****   decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
 467:u8g2/csrc/u8g2_font.c **** }
 468:u8g2/csrc/u8g2_font.c **** 
 469:u8g2/csrc/u8g2_font.c **** 
 470:u8g2/csrc/u8g2_font.c **** /*
 471:u8g2/csrc/u8g2_font.c ****   Description:
 472:u8g2/csrc/u8g2_font.c ****     Decode and draw a glyph.
 473:u8g2/csrc/u8g2_font.c ****   Args:
 474:u8g2/csrc/u8g2_font.c ****     glyph_data: 					Pointer to the compressed glyph data of the font
 475:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_x		X position
 476:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_y		Y position
 477:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.is_transparent	Transparent mode
 478:u8g2/csrc/u8g2_font.c ****   Return:
 479:u8g2/csrc/u8g2_font.c ****     Width (delta x advance) of the glyph.
 480:u8g2/csrc/u8g2_font.c ****   Calls:
 481:u8g2/csrc/u8g2_font.c ****     u8g2_font_decode_len()
 482:u8g2/csrc/u8g2_font.c **** */
 483:u8g2/csrc/u8g2_font.c **** /* optimized */
 484:u8g2/csrc/u8g2_font.c **** int8_t u8g2_font_decode_glyph(u8g2_t *u8g2, const uint8_t *glyph_data)
 485:u8g2/csrc/u8g2_font.c **** {
 486:u8g2/csrc/u8g2_font.c ****   uint8_t a, b;
 487:u8g2/csrc/u8g2_font.c ****   int8_t x, y;
 488:u8g2/csrc/u8g2_font.c ****   int8_t d;
 489:u8g2/csrc/u8g2_font.c ****   int8_t h;
 490:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 491:u8g2/csrc/u8g2_font.c ****     
 492:u8g2/csrc/u8g2_font.c ****   u8g2_font_setup_decode(u8g2, glyph_data);
 493:u8g2/csrc/u8g2_font.c ****   h = u8g2->font_decode.glyph_height;
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 13


 494:u8g2/csrc/u8g2_font.c ****   
 495:u8g2/csrc/u8g2_font.c ****   x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
 496:u8g2/csrc/u8g2_font.c ****   y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
 497:u8g2/csrc/u8g2_font.c ****   d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
 498:u8g2/csrc/u8g2_font.c ****   
 499:u8g2/csrc/u8g2_font.c ****   if ( decode->glyph_width > 0 )
 500:u8g2/csrc/u8g2_font.c ****   {
 501:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 502:u8g2/csrc/u8g2_font.c ****     decode->target_x = u8g2_add_vector_x(decode->target_x, x, -(h+y), decode->dir);
 503:u8g2/csrc/u8g2_font.c ****     decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
 504:u8g2/csrc/u8g2_font.c **** #else
 505:u8g2/csrc/u8g2_font.c ****     decode->target_x += x;
 506:u8g2/csrc/u8g2_font.c ****     decode->target_y -= h+y;
 507:u8g2/csrc/u8g2_font.c **** #endif
 508:u8g2/csrc/u8g2_font.c ****     //u8g2_add_vector(&(decode->target_x), &(decode->target_y), x, -(h+y), decode->dir);
 509:u8g2/csrc/u8g2_font.c **** 
 510:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_INTERSECTION
 511:u8g2/csrc/u8g2_font.c ****     {
 512:u8g2/csrc/u8g2_font.c ****       u8g2_uint_t x0, x1, y0, y1;
 513:u8g2/csrc/u8g2_font.c ****       x0 = decode->target_x;
 514:u8g2/csrc/u8g2_font.c ****       y0 = decode->target_y;
 515:u8g2/csrc/u8g2_font.c ****       x1 = x0;
 516:u8g2/csrc/u8g2_font.c ****       y1 = y0;
 517:u8g2/csrc/u8g2_font.c ****       
 518:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 519:u8g2/csrc/u8g2_font.c ****       switch(decode->dir)
 520:u8g2/csrc/u8g2_font.c ****       {
 521:u8g2/csrc/u8g2_font.c **** 	case 0:
 522:u8g2/csrc/u8g2_font.c **** 	    x1 += decode->glyph_width;
 523:u8g2/csrc/u8g2_font.c **** 	    y1 += h;
 524:u8g2/csrc/u8g2_font.c **** 	    break;
 525:u8g2/csrc/u8g2_font.c **** 	case 1:
 526:u8g2/csrc/u8g2_font.c **** 	    x0 -= h;
 527:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 528:u8g2/csrc/u8g2_font.c **** 	    x1++;
 529:u8g2/csrc/u8g2_font.c **** 	    y1 += decode->glyph_width;
 530:u8g2/csrc/u8g2_font.c **** 	    break;
 531:u8g2/csrc/u8g2_font.c **** 	case 2:
 532:u8g2/csrc/u8g2_font.c **** 	    x0 -= decode->glyph_width;
 533:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 534:u8g2/csrc/u8g2_font.c **** 	    x1++;
 535:u8g2/csrc/u8g2_font.c **** 	    y0 -= h;
 536:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 537:u8g2/csrc/u8g2_font.c **** 	    y1++;
 538:u8g2/csrc/u8g2_font.c **** 	    break;	  
 539:u8g2/csrc/u8g2_font.c **** 	case 3:
 540:u8g2/csrc/u8g2_font.c **** 	    x1 += h;
 541:u8g2/csrc/u8g2_font.c **** 	    y0 -= decode->glyph_width;
 542:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 543:u8g2/csrc/u8g2_font.c **** 	    y1++;
 544:u8g2/csrc/u8g2_font.c **** 	    break;	  
 545:u8g2/csrc/u8g2_font.c ****       }
 546:u8g2/csrc/u8g2_font.c **** #else /* U8G2_WITH_FONT_ROTATION */
 547:u8g2/csrc/u8g2_font.c ****       x1 += decode->glyph_width;
 548:u8g2/csrc/u8g2_font.c ****       y1 += h;      
 549:u8g2/csrc/u8g2_font.c **** #endif
 550:u8g2/csrc/u8g2_font.c ****       
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 14


 551:u8g2/csrc/u8g2_font.c ****       if ( u8g2_IsIntersection(u8g2, x0, y0, x1, y1) == 0 ) 
 552:u8g2/csrc/u8g2_font.c **** 	return d;
 553:u8g2/csrc/u8g2_font.c ****     }
 554:u8g2/csrc/u8g2_font.c **** #endif /* U8G2_WITH_INTERSECTION */
 555:u8g2/csrc/u8g2_font.c ****    
 556:u8g2/csrc/u8g2_font.c ****     /* reset local x/y position */
 557:u8g2/csrc/u8g2_font.c ****     decode->x = 0;
 558:u8g2/csrc/u8g2_font.c ****     decode->y = 0;
 559:u8g2/csrc/u8g2_font.c ****     
 560:u8g2/csrc/u8g2_font.c ****     /* decode glyph */
 561:u8g2/csrc/u8g2_font.c ****     for(;;)
 562:u8g2/csrc/u8g2_font.c ****     {
 563:u8g2/csrc/u8g2_font.c ****       a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
 564:u8g2/csrc/u8g2_font.c ****       b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
 565:u8g2/csrc/u8g2_font.c ****       do
 566:u8g2/csrc/u8g2_font.c ****       {
 567:u8g2/csrc/u8g2_font.c **** 	u8g2_font_decode_len(u8g2, a, 0);
 568:u8g2/csrc/u8g2_font.c **** 	u8g2_font_decode_len(u8g2, b, 1);
 569:u8g2/csrc/u8g2_font.c ****       } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
 570:u8g2/csrc/u8g2_font.c **** 
 571:u8g2/csrc/u8g2_font.c ****       if ( decode->y >= h )
 572:u8g2/csrc/u8g2_font.c **** 	break;
 573:u8g2/csrc/u8g2_font.c ****     }
 574:u8g2/csrc/u8g2_font.c ****     
 575:u8g2/csrc/u8g2_font.c ****     /* restore the u8g2 draw color, because this is modified by the decode algo */
 576:u8g2/csrc/u8g2_font.c ****     u8g2->draw_color = decode->fg_color;
 577:u8g2/csrc/u8g2_font.c ****   }
 578:u8g2/csrc/u8g2_font.c ****   return d;
 579:u8g2/csrc/u8g2_font.c **** }
 580:u8g2/csrc/u8g2_font.c **** 
 581:u8g2/csrc/u8g2_font.c **** /*
 582:u8g2/csrc/u8g2_font.c ****   Description:
 583:u8g2/csrc/u8g2_font.c ****     Find the starting point of the glyph data.
 584:u8g2/csrc/u8g2_font.c ****   Args:
 585:u8g2/csrc/u8g2_font.c ****     encoding: Encoding (ASCII or Unicode) of the glyph
 586:u8g2/csrc/u8g2_font.c ****   Return:
 587:u8g2/csrc/u8g2_font.c ****     Address of the glyph data or NULL, if the encoding is not avialable in the font.
 588:u8g2/csrc/u8g2_font.c **** */
 589:u8g2/csrc/u8g2_font.c **** const uint8_t *u8g2_font_get_glyph_data(u8g2_t *u8g2, uint16_t encoding)
 590:u8g2/csrc/u8g2_font.c **** {
 591:u8g2/csrc/u8g2_font.c ****   const uint8_t *font = u8g2->font;
 592:u8g2/csrc/u8g2_font.c ****   font += U8G2_FONT_DATA_STRUCT_SIZE;
 593:u8g2/csrc/u8g2_font.c **** 
 594:u8g2/csrc/u8g2_font.c ****   
 595:u8g2/csrc/u8g2_font.c ****   if ( encoding <= 255 )
 596:u8g2/csrc/u8g2_font.c ****   {
 597:u8g2/csrc/u8g2_font.c ****     if ( encoding >= 'a' )
 598:u8g2/csrc/u8g2_font.c ****     {
 599:u8g2/csrc/u8g2_font.c ****       font += u8g2->font_info.start_pos_lower_a;
 600:u8g2/csrc/u8g2_font.c ****     }
 601:u8g2/csrc/u8g2_font.c ****     else if ( encoding >= 'A' )
 602:u8g2/csrc/u8g2_font.c ****     {
 603:u8g2/csrc/u8g2_font.c ****       font += u8g2->font_info.start_pos_upper_A;
 604:u8g2/csrc/u8g2_font.c ****     }
 605:u8g2/csrc/u8g2_font.c ****     
 606:u8g2/csrc/u8g2_font.c ****     for(;;)
 607:u8g2/csrc/u8g2_font.c ****     {
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 15


 608:u8g2/csrc/u8g2_font.c ****       if ( u8x8_pgm_read( font + 1 ) == 0 )
 609:u8g2/csrc/u8g2_font.c **** 	break;
 610:u8g2/csrc/u8g2_font.c ****       if ( u8x8_pgm_read( font ) == encoding )
 611:u8g2/csrc/u8g2_font.c ****       {
 612:u8g2/csrc/u8g2_font.c **** 	return font+2;	/* skip encoding and glyph size */
 613:u8g2/csrc/u8g2_font.c ****       }
 614:u8g2/csrc/u8g2_font.c ****       font += u8x8_pgm_read( font + 1 );
 615:u8g2/csrc/u8g2_font.c ****     }
 616:u8g2/csrc/u8g2_font.c ****   }
 617:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_UNICODE
 618:u8g2/csrc/u8g2_font.c ****   else
 619:u8g2/csrc/u8g2_font.c ****   {
 620:u8g2/csrc/u8g2_font.c ****     uint16_t e;
 621:u8g2/csrc/u8g2_font.c ****     
 622:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
 623:u8g2/csrc/u8g2_font.c ****     if ( u8g2->last_font_data != NULL && encoding >= u8g2->last_unicode )
 624:u8g2/csrc/u8g2_font.c ****     {
 625:u8g2/csrc/u8g2_font.c **** 	font = u8g2->last_font_data;
 626:u8g2/csrc/u8g2_font.c ****     }
 627:u8g2/csrc/u8g2_font.c ****     else
 628:u8g2/csrc/u8g2_font.c **** #endif 
 629:u8g2/csrc/u8g2_font.c **** 
 630:u8g2/csrc/u8g2_font.c ****     font += u8g2->font_info.start_pos_unicode;
 631:u8g2/csrc/u8g2_font.c ****     
 632:u8g2/csrc/u8g2_font.c ****     
 633:u8g2/csrc/u8g2_font.c ****     for(;;)
 634:u8g2/csrc/u8g2_font.c ****     {
 635:u8g2/csrc/u8g2_font.c ****       e = u8x8_pgm_read( font );
 636:u8g2/csrc/u8g2_font.c ****       e <<= 8;
 637:u8g2/csrc/u8g2_font.c ****       e |= u8x8_pgm_read( font + 1 );
 638:u8g2/csrc/u8g2_font.c ****   
 639:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
 640:u8g2/csrc/u8g2_font.c ****       if ( encoding < e )
 641:u8g2/csrc/u8g2_font.c ****         break;
 642:u8g2/csrc/u8g2_font.c **** #endif 
 643:u8g2/csrc/u8g2_font.c **** 
 644:u8g2/csrc/u8g2_font.c ****       if ( e == 0 )
 645:u8g2/csrc/u8g2_font.c **** 	break;
 646:u8g2/csrc/u8g2_font.c ****   
 647:u8g2/csrc/u8g2_font.c ****       if ( e == encoding )
 648:u8g2/csrc/u8g2_font.c ****       {
 649:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
 650:u8g2/csrc/u8g2_font.c **** 	u8g2->last_font_data = font;
 651:u8g2/csrc/u8g2_font.c **** 	u8g2->last_unicode = encoding;
 652:u8g2/csrc/u8g2_font.c **** #endif 
 653:u8g2/csrc/u8g2_font.c **** 	return font+3;	/* skip encoding and glyph size */
 654:u8g2/csrc/u8g2_font.c ****       }
 655:u8g2/csrc/u8g2_font.c ****       font += u8x8_pgm_read( font + 2 );
 656:u8g2/csrc/u8g2_font.c ****     }  
 657:u8g2/csrc/u8g2_font.c ****   }
 658:u8g2/csrc/u8g2_font.c **** #endif
 659:u8g2/csrc/u8g2_font.c ****   
 660:u8g2/csrc/u8g2_font.c ****   return NULL;
 661:u8g2/csrc/u8g2_font.c **** }
 662:u8g2/csrc/u8g2_font.c **** 
 663:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_font_draw_glyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encodi
 664:u8g2/csrc/u8g2_font.c **** {
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 16


 665:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t dx = 0;
 666:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_x = x;
 667:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_y = y;
 668:u8g2/csrc/u8g2_font.c ****   //u8g2->font_decode.is_transparent = is_transparent; this is already set
 669:u8g2/csrc/u8g2_font.c ****   //u8g2->font_decode.dir = dir;
 670:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
 671:u8g2/csrc/u8g2_font.c ****   if ( glyph_data != NULL )
 672:u8g2/csrc/u8g2_font.c ****   {
 673:u8g2/csrc/u8g2_font.c ****     dx = u8g2_font_decode_glyph(u8g2, glyph_data);
 674:u8g2/csrc/u8g2_font.c ****   }
 675:u8g2/csrc/u8g2_font.c ****   return dx;
 676:u8g2/csrc/u8g2_font.c **** }
 677:u8g2/csrc/u8g2_font.c **** 
 678:u8g2/csrc/u8g2_font.c **** 
 679:u8g2/csrc/u8g2_font.c **** 
 680:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_IsGlyph(u8g2_t *u8g2, uint16_t requested_encoding)
 681:u8g2/csrc/u8g2_font.c **** {
 682:u8g2/csrc/u8g2_font.c ****   /* updated to new code */
 683:u8g2/csrc/u8g2_font.c ****   if ( u8g2_font_get_glyph_data(u8g2, requested_encoding) != NULL )
 684:u8g2/csrc/u8g2_font.c ****     return 1;
 685:u8g2/csrc/u8g2_font.c ****   return 0;
 686:u8g2/csrc/u8g2_font.c **** }
 687:u8g2/csrc/u8g2_font.c **** 
 688:u8g2/csrc/u8g2_font.c **** /* side effect: updates u8g2->font_decode and u8g2->glyph_x_offset */
 689:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetGlyphWidth(u8g2_t *u8g2, uint16_t requested_encoding)
 690:u8g2/csrc/u8g2_font.c **** {
 691:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
 692:u8g2/csrc/u8g2_font.c ****   if ( glyph_data == NULL )
 693:u8g2/csrc/u8g2_font.c ****     return 0; 
 694:u8g2/csrc/u8g2_font.c ****   
 695:u8g2/csrc/u8g2_font.c ****   u8g2_font_setup_decode(u8g2, glyph_data);
 696:u8g2/csrc/u8g2_font.c ****   u8g2->glyph_x_offset = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bit
 697:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
 698:u8g2/csrc/u8g2_font.c ****   
 699:u8g2/csrc/u8g2_font.c ****   /* glyph width is here: u8g2->font_decode.glyph_width */
 700:u8g2/csrc/u8g2_font.c **** 
 701:u8g2/csrc/u8g2_font.c ****   return u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_delta_x);
 702:u8g2/csrc/u8g2_font.c **** }
 703:u8g2/csrc/u8g2_font.c **** 
 704:u8g2/csrc/u8g2_font.c **** 
 705:u8g2/csrc/u8g2_font.c **** /*
 706:u8g2/csrc/u8g2_font.c ****   set one of:
 707:u8g2/csrc/u8g2_font.c ****     U8G2_FONT_MODE_TRANSPARENT
 708:u8g2/csrc/u8g2_font.c ****     U8G2_FONT_MODE_SOLID
 709:u8g2/csrc/u8g2_font.c ****     U8G2_FONT_MODE_NONE
 710:u8g2/csrc/u8g2_font.c ****   This has been changed for the new font procedures  
 711:u8g2/csrc/u8g2_font.c **** */
 712:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontMode(u8g2_t *u8g2, uint8_t is_transparent)
 713:u8g2/csrc/u8g2_font.c **** {
 714:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
 715:u8g2/csrc/u8g2_font.c **** }
 716:u8g2/csrc/u8g2_font.c **** 
 717:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawGlyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
 718:u8g2/csrc/u8g2_font.c **** {
 719:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 720:u8g2/csrc/u8g2_font.c ****   switch(u8g2->font_decode.dir)
 721:u8g2/csrc/u8g2_font.c ****   {
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 17


 722:u8g2/csrc/u8g2_font.c ****     case 0:
 723:u8g2/csrc/u8g2_font.c ****       y += u8g2->font_calc_vref(u8g2);
 724:u8g2/csrc/u8g2_font.c ****       break;
 725:u8g2/csrc/u8g2_font.c ****     case 1:
 726:u8g2/csrc/u8g2_font.c ****       x -= u8g2->font_calc_vref(u8g2);
 727:u8g2/csrc/u8g2_font.c ****       break;
 728:u8g2/csrc/u8g2_font.c ****     case 2:
 729:u8g2/csrc/u8g2_font.c ****       y -= u8g2->font_calc_vref(u8g2);
 730:u8g2/csrc/u8g2_font.c ****       break;
 731:u8g2/csrc/u8g2_font.c ****     case 3:
 732:u8g2/csrc/u8g2_font.c ****       x += u8g2->font_calc_vref(u8g2);
 733:u8g2/csrc/u8g2_font.c ****       break;
 734:u8g2/csrc/u8g2_font.c ****   }
 735:u8g2/csrc/u8g2_font.c **** #else
 736:u8g2/csrc/u8g2_font.c ****   y += u8g2->font_calc_vref(u8g2);
 737:u8g2/csrc/u8g2_font.c **** #endif
 738:u8g2/csrc/u8g2_font.c ****   return u8g2_font_draw_glyph(u8g2, x, y, encoding);
 739:u8g2/csrc/u8g2_font.c **** }
 740:u8g2/csrc/u8g2_font.c **** 
 741:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str) U8
 742:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
 743:u8g2/csrc/u8g2_font.c **** {
 744:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 745:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t delta, sum;
 746:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 747:u8g2/csrc/u8g2_font.c ****   sum = 0;
 748:u8g2/csrc/u8g2_font.c ****   for(;;)
 749:u8g2/csrc/u8g2_font.c ****   {
 750:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 751:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 752:u8g2/csrc/u8g2_font.c ****       break;
 753:u8g2/csrc/u8g2_font.c ****     str++;
 754:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 755:u8g2/csrc/u8g2_font.c ****     {
 756:u8g2/csrc/u8g2_font.c ****       delta = u8g2_DrawGlyph(u8g2, x, y, e);
 757:u8g2/csrc/u8g2_font.c ****     
 758:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 759:u8g2/csrc/u8g2_font.c ****       switch(u8g2->font_decode.dir)
 760:u8g2/csrc/u8g2_font.c ****       {
 761:u8g2/csrc/u8g2_font.c **** 	case 0:
 762:u8g2/csrc/u8g2_font.c **** 	  x += delta;
 763:u8g2/csrc/u8g2_font.c **** 	  break;
 764:u8g2/csrc/u8g2_font.c **** 	case 1:
 765:u8g2/csrc/u8g2_font.c **** 	  y += delta;
 766:u8g2/csrc/u8g2_font.c **** 	  break;
 767:u8g2/csrc/u8g2_font.c **** 	case 2:
 768:u8g2/csrc/u8g2_font.c **** 	  x -= delta;
 769:u8g2/csrc/u8g2_font.c **** 	  break;
 770:u8g2/csrc/u8g2_font.c **** 	case 3:
 771:u8g2/csrc/u8g2_font.c **** 	  y -= delta;
 772:u8g2/csrc/u8g2_font.c **** 	  break;
 773:u8g2/csrc/u8g2_font.c ****       }
 774:u8g2/csrc/u8g2_font.c **** #else
 775:u8g2/csrc/u8g2_font.c ****       x += delta;
 776:u8g2/csrc/u8g2_font.c **** #endif
 777:u8g2/csrc/u8g2_font.c **** 
 778:u8g2/csrc/u8g2_font.c ****       sum += delta;    
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 18


 779:u8g2/csrc/u8g2_font.c ****     }
 780:u8g2/csrc/u8g2_font.c ****   }
 781:u8g2/csrc/u8g2_font.c ****   return sum;
 782:u8g2/csrc/u8g2_font.c **** }
 783:u8g2/csrc/u8g2_font.c **** 
 784:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawStr(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
 785:u8g2/csrc/u8g2_font.c **** {
 786:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 787:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 788:u8g2/csrc/u8g2_font.c **** }
 789:u8g2/csrc/u8g2_font.c **** 
 790:u8g2/csrc/u8g2_font.c **** /*
 791:u8g2/csrc/u8g2_font.c **** source: https://en.wikipedia.org/wiki/UTF-8
 792:u8g2/csrc/u8g2_font.c **** Bits	from 		to			bytes	Byte 1 		Byte 2 		Byte 3 		Byte 4 		Byte 5 		Byte 6
 793:u8g2/csrc/u8g2_font.c ****   7 	U+0000 		U+007F 		1 		0xxxxxxx
 794:u8g2/csrc/u8g2_font.c **** 11 	U+0080 		U+07FF 		2 		110xxxxx 	10xxxxxx
 795:u8g2/csrc/u8g2_font.c **** 16 	U+0800 		U+FFFF 		3 		1110xxxx 	10xxxxxx 	10xxxxxx
 796:u8g2/csrc/u8g2_font.c **** 21 	U+10000 	U+1FFFFF 	4 		11110xxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
 797:u8g2/csrc/u8g2_font.c **** 26 	U+200000 	U+3FFFFFF 	5 		111110xx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
 798:u8g2/csrc/u8g2_font.c **** 31 	U+4000000 	U+7FFFFFFF 	6 		1111110x 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx  
 799:u8g2/csrc/u8g2_font.c **** */
 800:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawUTF8(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
 801:u8g2/csrc/u8g2_font.c **** {
 802:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 803:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 804:u8g2/csrc/u8g2_font.c **** }
 805:u8g2/csrc/u8g2_font.c **** 
 806:u8g2/csrc/u8g2_font.c **** 
 807:u8g2/csrc/u8g2_font.c **** 
 808:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawExtendedUTF8(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint8_t to_left, u8g2
 809:u8g2/csrc/u8g2_font.c **** {
 810:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 811:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 812:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 813:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t delta, sum, k;
 814:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 815:u8g2/csrc/u8g2_font.c ****   sum = 0;
 816:u8g2/csrc/u8g2_font.c ****   for(;;)
 817:u8g2/csrc/u8g2_font.c ****   {
 818:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 819:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 820:u8g2/csrc/u8g2_font.c ****       break;
 821:u8g2/csrc/u8g2_font.c ****     str++;
 822:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 823:u8g2/csrc/u8g2_font.c ****     {
 824:u8g2/csrc/u8g2_font.c ****       delta = u8g2_GetGlyphWidth(u8g2, e);
 825:u8g2/csrc/u8g2_font.c **** 	    
 826:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 827:u8g2/csrc/u8g2_font.c ****       {
 828:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerning(u8g2, kerning, e, e_prev);
 829:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 830:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 831:u8g2/csrc/u8g2_font.c ****       }
 832:u8g2/csrc/u8g2_font.c ****       else
 833:u8g2/csrc/u8g2_font.c ****       {
 834:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerning(u8g2, kerning, e_prev, e);
 835:u8g2/csrc/u8g2_font.c **** 	delta -= k;
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 19


 836:u8g2/csrc/u8g2_font.c ****       }
 837:u8g2/csrc/u8g2_font.c ****       e_prev = e;
 838:u8g2/csrc/u8g2_font.c **** 
 839:u8g2/csrc/u8g2_font.c ****       u8g2_DrawGlyph(u8g2, x, y, e);
 840:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 841:u8g2/csrc/u8g2_font.c ****       {
 842:u8g2/csrc/u8g2_font.c ****       }
 843:u8g2/csrc/u8g2_font.c ****       else
 844:u8g2/csrc/u8g2_font.c ****       {
 845:u8g2/csrc/u8g2_font.c **** 	x += delta;
 846:u8g2/csrc/u8g2_font.c **** 	x -= k;
 847:u8g2/csrc/u8g2_font.c ****       }
 848:u8g2/csrc/u8g2_font.c ****       
 849:u8g2/csrc/u8g2_font.c ****       sum += delta;    
 850:u8g2/csrc/u8g2_font.c ****     }
 851:u8g2/csrc/u8g2_font.c ****   }
 852:u8g2/csrc/u8g2_font.c ****   return sum;
 853:u8g2/csrc/u8g2_font.c **** }
 854:u8g2/csrc/u8g2_font.c **** 
 855:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawExtUTF8(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint8_t to_left, const uin
 856:u8g2/csrc/u8g2_font.c **** {
 857:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 858:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 859:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 860:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t delta, sum, k;
 861:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 862:u8g2/csrc/u8g2_font.c ****   sum = 0;
 863:u8g2/csrc/u8g2_font.c ****   for(;;)
 864:u8g2/csrc/u8g2_font.c ****   {
 865:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 866:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 867:u8g2/csrc/u8g2_font.c ****       break;
 868:u8g2/csrc/u8g2_font.c ****     str++;
 869:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 870:u8g2/csrc/u8g2_font.c ****     {
 871:u8g2/csrc/u8g2_font.c ****       delta = u8g2_GetGlyphWidth(u8g2, e);
 872:u8g2/csrc/u8g2_font.c **** 	    
 873:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 874:u8g2/csrc/u8g2_font.c ****       {
 875:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerningByTable(u8g2, kerning_table, e, e_prev);
 876:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 877:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 878:u8g2/csrc/u8g2_font.c ****       }
 879:u8g2/csrc/u8g2_font.c ****       else
 880:u8g2/csrc/u8g2_font.c ****       {
 881:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerningByTable(u8g2, kerning_table, e_prev, e);
 882:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 883:u8g2/csrc/u8g2_font.c ****       }
 884:u8g2/csrc/u8g2_font.c ****       e_prev = e;
 885:u8g2/csrc/u8g2_font.c **** 
 886:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 887:u8g2/csrc/u8g2_font.c ****       {
 888:u8g2/csrc/u8g2_font.c ****       }
 889:u8g2/csrc/u8g2_font.c ****       else
 890:u8g2/csrc/u8g2_font.c ****       {
 891:u8g2/csrc/u8g2_font.c **** 	x += delta;
 892:u8g2/csrc/u8g2_font.c ****       }
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 20


 893:u8g2/csrc/u8g2_font.c ****       u8g2_DrawGlyph(u8g2, x, y, e);
 894:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 895:u8g2/csrc/u8g2_font.c ****       {
 896:u8g2/csrc/u8g2_font.c ****       }
 897:u8g2/csrc/u8g2_font.c ****       else
 898:u8g2/csrc/u8g2_font.c ****       {
 899:u8g2/csrc/u8g2_font.c **** 	//x += delta;
 900:u8g2/csrc/u8g2_font.c **** 	//x -= k;
 901:u8g2/csrc/u8g2_font.c ****       }
 902:u8g2/csrc/u8g2_font.c ****       
 903:u8g2/csrc/u8g2_font.c ****       sum += delta;    
 904:u8g2/csrc/u8g2_font.c ****     }
 905:u8g2/csrc/u8g2_font.c ****   }
 906:u8g2/csrc/u8g2_font.c ****   return sum;
 907:u8g2/csrc/u8g2_font.c **** }
 908:u8g2/csrc/u8g2_font.c **** 
 909:u8g2/csrc/u8g2_font.c **** 
 910:u8g2/csrc/u8g2_font.c **** 
 911:u8g2/csrc/u8g2_font.c **** /*===============================================*/
 912:u8g2/csrc/u8g2_font.c **** 
 913:u8g2/csrc/u8g2_font.c **** /* set ascent/descent for reference point calculation */
 914:u8g2/csrc/u8g2_font.c **** 
 915:u8g2/csrc/u8g2_font.c **** void u8g2_UpdateRefHeight(u8g2_t *u8g2)
 916:u8g2/csrc/u8g2_font.c **** {
 917:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font == NULL )
 918:u8g2/csrc/u8g2_font.c ****     return;
 919:u8g2/csrc/u8g2_font.c ****   u8g2->font_ref_ascent = u8g2->font_info.ascent_A;
 920:u8g2/csrc/u8g2_font.c ****   u8g2->font_ref_descent = u8g2->font_info.descent_g;
 921:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
 922:u8g2/csrc/u8g2_font.c ****   {
 923:u8g2/csrc/u8g2_font.c ****   }
 924:u8g2/csrc/u8g2_font.c ****   else if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_XTEXT )
 925:u8g2/csrc/u8g2_font.c ****   {
 926:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_ascent < u8g2->font_info.ascent_para )
 927:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
 928:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
 929:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.descent_para;
 930:u8g2/csrc/u8g2_font.c ****   }
 931:u8g2/csrc/u8g2_font.c ****   else
 932:u8g2/csrc/u8g2_font.c ****   {
 933:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_ascent < u8g2->font_info.max_char_height+u8g2->font_info.y_offset )
 934:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
 935:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
 936:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.y_offset;
 937:u8g2/csrc/u8g2_font.c ****   }  
 938:u8g2/csrc/u8g2_font.c **** }
 939:u8g2/csrc/u8g2_font.c **** 
 940:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontRefHeightText(u8g2_t *u8g2)
 941:u8g2/csrc/u8g2_font.c **** {
 942:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_TEXT;
 943:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 944:u8g2/csrc/u8g2_font.c **** }
 945:u8g2/csrc/u8g2_font.c **** 
 946:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontRefHeightExtendedText(u8g2_t *u8g2)
 947:u8g2/csrc/u8g2_font.c **** {
 948:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_XTEXT;
 949:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 21


 950:u8g2/csrc/u8g2_font.c **** }
 951:u8g2/csrc/u8g2_font.c **** 
 952:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontRefHeightAll(u8g2_t *u8g2)
 953:u8g2/csrc/u8g2_font.c **** {
 954:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_ALL;
 955:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 956:u8g2/csrc/u8g2_font.c **** }
 957:u8g2/csrc/u8g2_font.c **** 
 958:u8g2/csrc/u8g2_font.c **** /*===============================================*/
 959:u8g2/csrc/u8g2_font.c **** /* callback procedures to correct the y position */
 960:u8g2/csrc/u8g2_font.c **** 
 961:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_font(U8X8_UNUSED u8g2_t *u8g2)
 962:u8g2/csrc/u8g2_font.c **** {
 189              		.loc 1 962 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL24:
 963:u8g2/csrc/u8g2_font.c ****   return 0;
 964:u8g2/csrc/u8g2_font.c **** }
 195              		.loc 1 964 0
 196 0000 0020     		movs	r0, #0
 197              	.LVL25:
 198 0002 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE31:
 202              		.section	.text.u8g2_font_calc_vref_bottom,"ax",%progbits
 203              		.align	1
 204              		.global	u8g2_font_calc_vref_bottom
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	u8g2_font_calc_vref_bottom:
 211              	.LFB33:
 965:u8g2/csrc/u8g2_font.c **** 
 966:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosBaseline(u8g2_t *u8g2)
 967:u8g2/csrc/u8g2_font.c **** {
 968:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_font;
 969:u8g2/csrc/u8g2_font.c **** }
 970:u8g2/csrc/u8g2_font.c **** 
 971:u8g2/csrc/u8g2_font.c **** 
 972:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_bottom(u8g2_t *u8g2)
 973:u8g2/csrc/u8g2_font.c **** {
 212              		.loc 1 973 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL26:
 974:u8g2/csrc/u8g2_font.c ****   return (u8g2_uint_t)(u8g2->font_ref_descent);
 975:u8g2/csrc/u8g2_font.c **** }
 218              		.loc 1 975 0
 219 0000 90F87A00 		ldrb	r0, [r0, #122]	@ zero_extendqisi2
 220              	.LVL27:
 221 0004 7047     		bx	lr
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 22


 222              		.cfi_endproc
 223              	.LFE33:
 225              		.section	.text.u8g2_font_calc_vref_top,"ax",%progbits
 226              		.align	1
 227              		.global	u8g2_font_calc_vref_top
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu softvfp
 233              	u8g2_font_calc_vref_top:
 234              	.LFB35:
 976:u8g2/csrc/u8g2_font.c **** 
 977:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosBottom(u8g2_t *u8g2)
 978:u8g2/csrc/u8g2_font.c **** {
 979:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_bottom;
 980:u8g2/csrc/u8g2_font.c **** }
 981:u8g2/csrc/u8g2_font.c **** 
 982:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_top(u8g2_t *u8g2)
 983:u8g2/csrc/u8g2_font.c **** {
 235              		.loc 1 983 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL28:
 984:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t tmp;
 985:u8g2/csrc/u8g2_font.c ****   /* reference pos is one pixel above the upper edge of the reference glyph */
 986:u8g2/csrc/u8g2_font.c ****   tmp = (u8g2_uint_t)(u8g2->font_ref_ascent);
 241              		.loc 1 986 0
 242 0000 90F87900 		ldrb	r0, [r0, #121]	@ zero_extendqisi2
 243              	.LVL29:
 987:u8g2/csrc/u8g2_font.c ****   tmp++;
 244              		.loc 1 987 0
 245 0004 0130     		adds	r0, r0, #1
 246              	.LVL30:
 988:u8g2/csrc/u8g2_font.c ****   return tmp;
 989:u8g2/csrc/u8g2_font.c **** }
 247              		.loc 1 989 0
 248 0006 C0B2     		uxtb	r0, r0
 249 0008 7047     		bx	lr
 250              		.cfi_endproc
 251              	.LFE35:
 253              		.section	.text.u8g2_font_calc_vref_center,"ax",%progbits
 254              		.align	1
 255              		.global	u8g2_font_calc_vref_center
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu softvfp
 261              	u8g2_font_calc_vref_center:
 262              	.LFB37:
 990:u8g2/csrc/u8g2_font.c **** 
 991:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosTop(u8g2_t *u8g2)
 992:u8g2/csrc/u8g2_font.c **** {
 993:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_top;
 994:u8g2/csrc/u8g2_font.c **** }
 995:u8g2/csrc/u8g2_font.c **** 
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 23


 996:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_center(u8g2_t *u8g2)
 997:u8g2/csrc/u8g2_font.c **** {
 263              		.loc 1 997 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL31:
 998:u8g2/csrc/u8g2_font.c ****   int8_t tmp;
 999:u8g2/csrc/u8g2_font.c ****   tmp = u8g2->font_ref_ascent;
 269              		.loc 1 999 0
 270 0000 90F97930 		ldrsb	r3, [r0, #121]
 271              	.LVL32:
1000:u8g2/csrc/u8g2_font.c ****   tmp -= u8g2->font_ref_descent;
 272              		.loc 1 1000 0
 273 0004 90F87A20 		ldrb	r2, [r0, #122]	@ zero_extendqisi2
 274 0008 981A     		subs	r0, r3, r2
 275              	.LVL33:
 276 000a 40B2     		sxtb	r0, r0
 277              	.LVL34:
1001:u8g2/csrc/u8g2_font.c ****   tmp /= 2;
 278              		.loc 1 1001 0
 279 000c 00EBD070 		add	r0, r0, r0, lsr #31
 280              	.LVL35:
1002:u8g2/csrc/u8g2_font.c ****   tmp += u8g2->font_ref_descent;  
 281              		.loc 1 1002 0
 282 0010 02EB6000 		add	r0, r2, r0, asr #1
 283              	.LVL36:
1003:u8g2/csrc/u8g2_font.c ****   return tmp;
1004:u8g2/csrc/u8g2_font.c **** }
 284              		.loc 1 1004 0
 285 0014 C0B2     		uxtb	r0, r0
 286 0016 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE37:
 290              		.section	.text.u8g2_read_font_info,"ax",%progbits
 291              		.align	1
 292              		.global	u8g2_read_font_info
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu softvfp
 298              	u8g2_read_font_info:
 299              	.LFB2:
 132:u8g2/csrc/u8g2_font.c ****   /* offset 0 */
 300              		.loc 1 132 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              	.LVL37:
 305 0000 38B5     		push	{r3, r4, r5, lr}
 306              	.LCFI0:
 307              		.cfi_def_cfa_offset 16
 308              		.cfi_offset 3, -16
 309              		.cfi_offset 4, -12
 310              		.cfi_offset 5, -8
 311              		.cfi_offset 14, -4
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 24


 312 0002 0446     		mov	r4, r0
 313 0004 0D46     		mov	r5, r1
 134:u8g2/csrc/u8g2_font.c ****   font_info->bbx_mode = u8g2_font_get_byte(font, 1);
 314              		.loc 1 134 0
 315 0006 0021     		movs	r1, #0
 316              	.LVL38:
 317 0008 2846     		mov	r0, r5
 318              	.LVL39:
 319 000a FFF7FEFF 		bl	u8g2_font_get_byte
 320              	.LVL40:
 321 000e 2070     		strb	r0, [r4]
 135:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
 322              		.loc 1 135 0
 323 0010 0121     		movs	r1, #1
 324 0012 2846     		mov	r0, r5
 325 0014 FFF7FEFF 		bl	u8g2_font_get_byte
 326              	.LVL41:
 327 0018 6070     		strb	r0, [r4, #1]
 136:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
 328              		.loc 1 136 0
 329 001a 0221     		movs	r1, #2
 330 001c 2846     		mov	r0, r5
 331 001e FFF7FEFF 		bl	u8g2_font_get_byte
 332              	.LVL42:
 333 0022 A070     		strb	r0, [r4, #2]
 137:u8g2/csrc/u8g2_font.c ****   
 334              		.loc 1 137 0
 335 0024 0321     		movs	r1, #3
 336 0026 2846     		mov	r0, r5
 337 0028 FFF7FEFF 		bl	u8g2_font_get_byte
 338              	.LVL43:
 339 002c E070     		strb	r0, [r4, #3]
 140:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
 340              		.loc 1 140 0
 341 002e 0421     		movs	r1, #4
 342 0030 2846     		mov	r0, r5
 343 0032 FFF7FEFF 		bl	u8g2_font_get_byte
 344              	.LVL44:
 345 0036 2071     		strb	r0, [r4, #4]
 141:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
 346              		.loc 1 141 0
 347 0038 0521     		movs	r1, #5
 348 003a 2846     		mov	r0, r5
 349 003c FFF7FEFF 		bl	u8g2_font_get_byte
 350              	.LVL45:
 351 0040 6071     		strb	r0, [r4, #5]
 142:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
 352              		.loc 1 142 0
 353 0042 0621     		movs	r1, #6
 354 0044 2846     		mov	r0, r5
 355 0046 FFF7FEFF 		bl	u8g2_font_get_byte
 356              	.LVL46:
 357 004a A071     		strb	r0, [r4, #6]
 143:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
 358              		.loc 1 143 0
 359 004c 0721     		movs	r1, #7
 360 004e 2846     		mov	r0, r5
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 25


 361 0050 FFF7FEFF 		bl	u8g2_font_get_byte
 362              	.LVL47:
 363 0054 E071     		strb	r0, [r4, #7]
 144:u8g2/csrc/u8g2_font.c ****   
 364              		.loc 1 144 0
 365 0056 0821     		movs	r1, #8
 366 0058 2846     		mov	r0, r5
 367 005a FFF7FEFF 		bl	u8g2_font_get_byte
 368              	.LVL48:
 369 005e 2072     		strb	r0, [r4, #8]
 147:u8g2/csrc/u8g2_font.c ****   font_info->max_char_height = u8g2_font_get_byte(font, 10);
 370              		.loc 1 147 0
 371 0060 0921     		movs	r1, #9
 372 0062 2846     		mov	r0, r5
 373 0064 FFF7FEFF 		bl	u8g2_font_get_byte
 374              	.LVL49:
 375 0068 6072     		strb	r0, [r4, #9]
 148:u8g2/csrc/u8g2_font.c ****   font_info->x_offset = u8g2_font_get_byte(font, 11);
 376              		.loc 1 148 0
 377 006a 0A21     		movs	r1, #10
 378 006c 2846     		mov	r0, r5
 379 006e FFF7FEFF 		bl	u8g2_font_get_byte
 380              	.LVL50:
 381 0072 A072     		strb	r0, [r4, #10]
 149:u8g2/csrc/u8g2_font.c ****   font_info->y_offset = u8g2_font_get_byte(font, 12);
 382              		.loc 1 149 0
 383 0074 0B21     		movs	r1, #11
 384 0076 2846     		mov	r0, r5
 385 0078 FFF7FEFF 		bl	u8g2_font_get_byte
 386              	.LVL51:
 387 007c E072     		strb	r0, [r4, #11]
 150:u8g2/csrc/u8g2_font.c ****   
 388              		.loc 1 150 0
 389 007e 0C21     		movs	r1, #12
 390 0080 2846     		mov	r0, r5
 391 0082 FFF7FEFF 		bl	u8g2_font_get_byte
 392              	.LVL52:
 393 0086 2073     		strb	r0, [r4, #12]
 153:u8g2/csrc/u8g2_font.c ****   font_info->descent_g = u8g2_font_get_byte(font, 14);
 394              		.loc 1 153 0
 395 0088 0D21     		movs	r1, #13
 396 008a 2846     		mov	r0, r5
 397 008c FFF7FEFF 		bl	u8g2_font_get_byte
 398              	.LVL53:
 399 0090 6073     		strb	r0, [r4, #13]
 154:u8g2/csrc/u8g2_font.c ****   font_info->ascent_para = u8g2_font_get_byte(font, 15);
 400              		.loc 1 154 0
 401 0092 0E21     		movs	r1, #14
 402 0094 2846     		mov	r0, r5
 403 0096 FFF7FEFF 		bl	u8g2_font_get_byte
 404              	.LVL54:
 405 009a A073     		strb	r0, [r4, #14]
 155:u8g2/csrc/u8g2_font.c ****   font_info->descent_para = u8g2_font_get_byte(font, 16);
 406              		.loc 1 155 0
 407 009c 0F21     		movs	r1, #15
 408 009e 2846     		mov	r0, r5
 409 00a0 FFF7FEFF 		bl	u8g2_font_get_byte
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 26


 410              	.LVL55:
 411 00a4 E073     		strb	r0, [r4, #15]
 156:u8g2/csrc/u8g2_font.c ****   
 412              		.loc 1 156 0
 413 00a6 1021     		movs	r1, #16
 414 00a8 2846     		mov	r0, r5
 415 00aa FFF7FEFF 		bl	u8g2_font_get_byte
 416              	.LVL56:
 417 00ae 2074     		strb	r0, [r4, #16]
 159:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
 418              		.loc 1 159 0
 419 00b0 1121     		movs	r1, #17
 420 00b2 2846     		mov	r0, r5
 421 00b4 FFF7FEFF 		bl	u8g2_font_get_word
 422              	.LVL57:
 423 00b8 6082     		strh	r0, [r4, #18]	@ movhi
 160:u8g2/csrc/u8g2_font.c ****   
 424              		.loc 1 160 0
 425 00ba 1321     		movs	r1, #19
 426 00bc 2846     		mov	r0, r5
 427 00be FFF7FEFF 		bl	u8g2_font_get_word
 428              	.LVL58:
 429 00c2 A082     		strh	r0, [r4, #20]	@ movhi
 164:u8g2/csrc/u8g2_font.c **** #endif
 430              		.loc 1 164 0
 431 00c4 1521     		movs	r1, #21
 432 00c6 2846     		mov	r0, r5
 433 00c8 FFF7FEFF 		bl	u8g2_font_get_word
 434              	.LVL59:
 435 00cc E082     		strh	r0, [r4, #22]	@ movhi
 436 00ce 38BD     		pop	{r3, r4, r5, pc}
 437              		.cfi_endproc
 438              	.LFE2:
 440              		.section	.text.u8g2_GetFontSize,"ax",%progbits
 441              		.align	1
 442              		.global	u8g2_GetFontSize
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu softvfp
 448              	u8g2_GetFontSize:
 449              	.LFB3:
 171:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 450              		.loc 1 171 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              	.LVL60:
 174:u8g2/csrc/u8g2_font.c ****   
 456              		.loc 1 174 0
 457 0000 00F11703 		add	r3, r0, #23
 458              	.LVL61:
 459              	.L25:
 178:u8g2/csrc/u8g2_font.c ****       break;
 460              		.loc 1 178 0
 461 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 27


 462 0006 0AB1     		cbz	r2, .L24
 180:u8g2/csrc/u8g2_font.c ****   }
 463              		.loc 1 180 0
 464 0008 1344     		add	r3, r3, r2
 465              	.LVL62:
 178:u8g2/csrc/u8g2_font.c ****       break;
 466              		.loc 1 178 0
 467 000a FBE7     		b	.L25
 468              	.L24:
 184:u8g2/csrc/u8g2_font.c ****   
 469              		.loc 1 184 0
 470 000c 0233     		adds	r3, r3, #2
 471              	.LVL63:
 472              	.L27:
 188:u8g2/csrc/u8g2_font.c ****     e <<= 8;
 473              		.loc 1 188 0
 474 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 475              	.LVL64:
 190:u8g2/csrc/u8g2_font.c ****     if ( e == 0 )
 476              		.loc 1 190 0
 477 0010 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 478              	.LVL65:
 191:u8g2/csrc/u8g2_font.c ****       break;
 479              		.loc 1 191 0
 480 0012 52EA0122 		orrs	r2, r2, r1, lsl #8
 481              	.LVL66:
 482 0016 02D0     		beq	.L26
 193:u8g2/csrc/u8g2_font.c ****   }
 483              		.loc 1 193 0
 484 0018 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 485 001a 1344     		add	r3, r3, r2
 486              	.LVL67:
 188:u8g2/csrc/u8g2_font.c ****     e <<= 8;
 487              		.loc 1 188 0
 488 001c F7E7     		b	.L27
 489              	.LVL68:
 490              	.L26:
 196:u8g2/csrc/u8g2_font.c **** }
 491              		.loc 1 196 0
 492 001e 181A     		subs	r0, r3, r0
 493              	.LVL69:
 197:u8g2/csrc/u8g2_font.c **** 
 494              		.loc 1 197 0
 495 0020 0230     		adds	r0, r0, #2
 496 0022 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE3:
 500              		.section	.text.u8g2_GetFontBBXWidth,"ax",%progbits
 501              		.align	1
 502              		.global	u8g2_GetFontBBXWidth
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu softvfp
 508              	u8g2_GetFontBBXWidth:
 509              	.LFB4:
 203:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_width;		/* new font info structure */
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 28


 510              		.loc 1 203 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515              	.LVL70:
 205:u8g2/csrc/u8g2_font.c **** 
 516              		.loc 1 205 0
 517 0000 90F86900 		ldrb	r0, [r0, #105]	@ zero_extendqisi2
 518              	.LVL71:
 519 0004 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE4:
 523              		.section	.text.u8g2_GetFontBBXHeight,"ax",%progbits
 524              		.align	1
 525              		.global	u8g2_GetFontBBXHeight
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu softvfp
 531              	u8g2_GetFontBBXHeight:
 532              	.LFB5:
 208:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_height;		/* new font info structure */
 533              		.loc 1 208 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538              	.LVL72:
 210:u8g2/csrc/u8g2_font.c **** 
 539              		.loc 1 210 0
 540 0000 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 541              	.LVL73:
 542 0004 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE5:
 546              		.section	.text.u8g2_GetFontBBXOffX,"ax",%progbits
 547              		.align	1
 548              		.global	u8g2_GetFontBBXOffX
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu softvfp
 554              	u8g2_GetFontBBXOffX:
 555              	.LFB6:
 214:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.x_offset;		/* new font info structure */
 556              		.loc 1 214 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561              	.LVL74:
 216:u8g2/csrc/u8g2_font.c **** 
 562              		.loc 1 216 0
 563 0000 90F96B00 		ldrsb	r0, [r0, #107]
 564              	.LVL75:
 565 0004 7047     		bx	lr
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 29


 566              		.cfi_endproc
 567              	.LFE6:
 569              		.section	.text.u8g2_GetFontBBXOffY,"ax",%progbits
 570              		.align	1
 571              		.global	u8g2_GetFontBBXOffY
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu softvfp
 577              	u8g2_GetFontBBXOffY:
 578              	.LFB7:
 220:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.y_offset;		/* new font info structure */
 579              		.loc 1 220 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL76:
 222:u8g2/csrc/u8g2_font.c **** 
 585              		.loc 1 222 0
 586 0000 90F96C00 		ldrsb	r0, [r0, #108]
 587              	.LVL77:
 588 0004 7047     		bx	lr
 589              		.cfi_endproc
 590              	.LFE7:
 592              		.section	.text.u8g2_GetFontCapitalAHeight,"ax",%progbits
 593              		.align	1
 594              		.global	u8g2_GetFontCapitalAHeight
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 598              		.fpu softvfp
 600              	u8g2_GetFontCapitalAHeight:
 601              	.LFB8:
 226:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.ascent_A;		/* new font info structure */
 602              		.loc 1 226 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607              	.LVL78:
 228:u8g2/csrc/u8g2_font.c **** 
 608              		.loc 1 228 0
 609 0000 90F86D00 		ldrb	r0, [r0, #109]	@ zero_extendqisi2
 610              	.LVL79:
 611 0004 7047     		bx	lr
 612              		.cfi_endproc
 613              	.LFE8:
 615              		.section	.text.u8g2_font_decode_get_unsigned_bits,"ax",%progbits
 616              		.align	1
 617              		.global	u8g2_font_decode_get_unsigned_bits
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu softvfp
 623              	u8g2_font_decode_get_unsigned_bits:
 624              	.LFB9:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 30


 235:u8g2/csrc/u8g2_font.c ****   uint8_t val;
 625              		.loc 1 235 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL80:
 631 0000 70B4     		push	{r4, r5, r6}
 632              	.LCFI1:
 633              		.cfi_def_cfa_offset 12
 634              		.cfi_offset 4, -12
 635              		.cfi_offset 5, -8
 636              		.cfi_offset 6, -4
 237:u8g2/csrc/u8g2_font.c ****   uint8_t bit_pos_plus_cnt;
 637              		.loc 1 237 0
 638 0002 847A     		ldrb	r4, [r0, #10]	@ zero_extendqisi2
 639              	.LVL81:
 241:u8g2/csrc/u8g2_font.c ****   
 640              		.loc 1 241 0
 641 0004 0668     		ldr	r6, [r0]
 642 0006 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 643              	.LVL82:
 243:u8g2/csrc/u8g2_font.c ****   bit_pos_plus_cnt = bit_pos;
 644              		.loc 1 243 0
 645 0008 42FA04F5 		asr	r5, r2, r4
 646 000c EAB2     		uxtb	r2, r5
 647              	.LVL83:
 245:u8g2/csrc/u8g2_font.c ****   if ( bit_pos_plus_cnt >= 8 )
 648              		.loc 1 245 0
 649 000e 6318     		adds	r3, r4, r1
 650 0010 DBB2     		uxtb	r3, r3
 651              	.LVL84:
 246:u8g2/csrc/u8g2_font.c ****   {
 652              		.loc 1 246 0
 653 0012 072B     		cmp	r3, #7
 654 0014 0AD9     		bls	.L34
 655              	.LVL85:
 656              	.LBB2:
 249:u8g2/csrc/u8g2_font.c ****     f->decode_ptr++;
 657              		.loc 1 249 0
 658 0016 C4F10804 		rsb	r4, r4, #8
 659              	.LVL86:
 660 001a E4B2     		uxtb	r4, r4
 661              	.LVL87:
 250:u8g2/csrc/u8g2_font.c ****     //val |= *(f->decode_ptr) << (8-bit_pos);
 662              		.loc 1 250 0
 663 001c 721C     		adds	r2, r6, #1
 664              	.LVL88:
 665 001e 0260     		str	r2, [r0]
 252:u8g2/csrc/u8g2_font.c ****     //bit_pos -= 8;
 666              		.loc 1 252 0
 667 0020 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 668 0022 A240     		lsls	r2, r2, r4
 669 0024 2A43     		orrs	r2, r2, r5
 670 0026 D2B2     		uxtb	r2, r2
 671              	.LVL89:
 254:u8g2/csrc/u8g2_font.c ****   }
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 31


 672              		.loc 1 254 0
 673 0028 083B     		subs	r3, r3, #8
 674              	.LVL90:
 675 002a DBB2     		uxtb	r3, r3
 676              	.LVL91:
 677              	.L34:
 678              	.LBE2:
 256:u8g2/csrc/u8g2_font.c ****   //bit_pos += cnt;
 679              		.loc 1 256 0
 680 002c 0124     		movs	r4, #1
 681 002e 04FA01F1 		lsl	r1, r4, r1
 682              	.LVL92:
 683 0032 0139     		subs	r1, r1, #1
 684              	.LVL93:
 259:u8g2/csrc/u8g2_font.c ****   return val;
 685              		.loc 1 259 0
 686 0034 8372     		strb	r3, [r0, #10]
 687              	.LVL94:
 261:u8g2/csrc/u8g2_font.c **** 
 688              		.loc 1 261 0
 689 0036 01EA0200 		and	r0, r1, r2
 690              	.LVL95:
 691 003a 70BC     		pop	{r4, r5, r6}
 692              	.LCFI2:
 693              		.cfi_restore 6
 694              		.cfi_restore 5
 695              		.cfi_restore 4
 696              		.cfi_def_cfa_offset 0
 697 003c 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE9:
 701              		.section	.text.u8g2_font_setup_decode,"ax",%progbits
 702              		.align	1
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu softvfp
 708              	u8g2_font_setup_decode:
 709              	.LFB14:
 451:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 710              		.loc 1 451 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              	.LVL96:
 715 0000 38B5     		push	{r3, r4, r5, lr}
 716              	.LCFI3:
 717              		.cfi_def_cfa_offset 16
 718              		.cfi_offset 3, -16
 719              		.cfi_offset 4, -12
 720              		.cfi_offset 5, -8
 721              		.cfi_offset 14, -4
 722 0002 0446     		mov	r4, r0
 452:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr = glyph_data;
 723              		.loc 1 452 0
 724 0004 00F15005 		add	r5, r0, #80
 725              	.LVL97:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 32


 453:u8g2/csrc/u8g2_font.c ****   decode->decode_bit_pos = 0;
 726              		.loc 1 453 0
 727 0008 0165     		str	r1, [r0, #80]
 454:u8g2/csrc/u8g2_font.c ****   
 728              		.loc 1 454 0
 729 000a 0023     		movs	r3, #0
 730 000c 80F85A30 		strb	r3, [r0, #90]
 462:u8g2/csrc/u8g2_font.c ****   decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_he
 731              		.loc 1 462 0
 732 0010 90F86410 		ldrb	r1, [r0, #100]	@ zero_extendqisi2
 733              	.LVL98:
 734 0014 2846     		mov	r0, r5
 735              	.LVL99:
 736 0016 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 737              	.LVL100:
 738 001a 84F85800 		strb	r0, [r4, #88]
 463:u8g2/csrc/u8g2_font.c ****   
 739              		.loc 1 463 0
 740 001e 94F86510 		ldrb	r1, [r4, #101]	@ zero_extendqisi2
 741 0022 2846     		mov	r0, r5
 742 0024 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 743              	.LVL101:
 744 0028 84F85900 		strb	r0, [r4, #89]
 465:u8g2/csrc/u8g2_font.c ****   decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
 745              		.loc 1 465 0
 746 002c 94F87D30 		ldrb	r3, [r4, #125]	@ zero_extendqisi2
 747 0030 84F85C30 		strb	r3, [r4, #92]
 466:u8g2/csrc/u8g2_font.c **** }
 748              		.loc 1 466 0
 749 0034 B3FA83F3 		clz	r3, r3
 750 0038 5B09     		lsrs	r3, r3, #5
 751 003a 84F85D30 		strb	r3, [r4, #93]
 752 003e 38BD     		pop	{r3, r4, r5, pc}
 753              		.cfi_endproc
 754              	.LFE14:
 756              		.section	.text.u8g2_font_decode_get_signed_bits,"ax",%progbits
 757              		.align	1
 758              		.global	u8g2_font_decode_get_signed_bits
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 762              		.fpu softvfp
 764              	u8g2_font_decode_get_signed_bits:
 765              	.LFB10:
 280:u8g2/csrc/u8g2_font.c ****   int8_t v, d;
 766              		.loc 1 280 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              	.LVL102:
 771 0000 10B5     		push	{r4, lr}
 772              	.LCFI4:
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 4, -8
 775              		.cfi_offset 14, -4
 776 0002 0C46     		mov	r4, r1
 282:u8g2/csrc/u8g2_font.c ****   d = 1;
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 33


 777              		.loc 1 282 0
 778 0004 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 779              	.LVL103:
 284:u8g2/csrc/u8g2_font.c ****   d <<= cnt;
 780              		.loc 1 284 0
 781 0008 013C     		subs	r4, r4, #1
 782 000a E4B2     		uxtb	r4, r4
 783              	.LVL104:
 285:u8g2/csrc/u8g2_font.c ****   v -= d;
 784              		.loc 1 285 0
 785 000c 0123     		movs	r3, #1
 786 000e A340     		lsls	r3, r3, r4
 787              	.LVL105:
 286:u8g2/csrc/u8g2_font.c ****   return v;
 788              		.loc 1 286 0
 789 0010 C01A     		subs	r0, r0, r3
 790              	.LVL106:
 289:u8g2/csrc/u8g2_font.c **** 
 791              		.loc 1 289 0
 792 0012 40B2     		sxtb	r0, r0
 793 0014 10BD     		pop	{r4, pc}
 794              		.cfi_endproc
 795              	.LFE10:
 797              		.section	.text.u8g2_font_decode_len,"ax",%progbits
 798              		.align	1
 799              		.global	u8g2_font_decode_len
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu softvfp
 805              	u8g2_font_decode_len:
 806              	.LFB13:
 357:u8g2/csrc/u8g2_font.c ****   uint8_t cnt;	/* total number of remaining pixels, which have to be drawn */
 807              		.loc 1 357 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 16
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              	.LVL107:
 812 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 813              	.LCFI5:
 814              		.cfi_def_cfa_offset 36
 815              		.cfi_offset 4, -36
 816              		.cfi_offset 5, -32
 817              		.cfi_offset 6, -28
 818              		.cfi_offset 7, -24
 819              		.cfi_offset 8, -20
 820              		.cfi_offset 9, -16
 821              		.cfi_offset 10, -12
 822              		.cfi_offset 11, -8
 823              		.cfi_offset 14, -4
 824 0004 87B0     		sub	sp, sp, #28
 825              	.LCFI6:
 826              		.cfi_def_cfa_offset 64
 827 0006 0646     		mov	r6, r0
 828 0008 0C46     		mov	r4, r1
 829 000a 0592     		str	r2, [sp, #20]
 830              	.LVL108:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 34


 374:u8g2/csrc/u8g2_font.c ****   ly = decode->y;
 831              		.loc 1 374 0
 832 000c 90F856A0 		ldrb	r10, [r0, #86]	@ zero_extendqisi2
 833              	.LVL109:
 375:u8g2/csrc/u8g2_font.c ****   
 834              		.loc 1 375 0
 835 0010 90F85780 		ldrb	r8, [r0, #87]	@ zero_extendqisi2
 836              	.LVL110:
 837 0014 25E0     		b	.L45
 838              	.LVL111:
 839              	.L46:
 387:u8g2/csrc/u8g2_font.c ****     
 840              		.loc 1 387 0
 841 0016 0394     		str	r4, [sp, #12]
 842              	.L41:
 843              	.LVL112:
 395:u8g2/csrc/u8g2_font.c **** 
 844              		.loc 1 395 0
 845 0018 96F85590 		ldrb	r9, [r6, #85]	@ zero_extendqisi2
 846              	.LVL113:
 399:u8g2/csrc/u8g2_font.c ****     y = u8g2_add_vector_y(y, lx, ly, decode->dir);
 847              		.loc 1 399 0
 848 001c 4FFA8AF1 		sxtb	r1, r10
 849 0020 4FFA88FB 		sxtb	fp, r8
 850 0024 96F85E70 		ldrb	r7, [r6, #94]	@ zero_extendqisi2
 851 0028 3B46     		mov	r3, r7
 852 002a 5A46     		mov	r2, fp
 853 002c 0291     		str	r1, [sp, #8]
 854 002e 96F85400 		ldrb	r0, [r6, #84]	@ zero_extendqisi2
 855 0032 FFF7FEFF 		bl	u8g2_add_vector_x
 856              	.LVL114:
 857 0036 0490     		str	r0, [sp, #16]
 858              	.LVL115:
 400:u8g2/csrc/u8g2_font.c **** #else
 859              		.loc 1 400 0
 860 0038 3B46     		mov	r3, r7
 861 003a 5A46     		mov	r2, fp
 862 003c 0299     		ldr	r1, [sp, #8]
 863 003e 4846     		mov	r0, r9
 864 0040 FFF7FEFF 		bl	u8g2_add_vector_y
 865              	.LVL116:
 407:u8g2/csrc/u8g2_font.c ****     {
 866              		.loc 1 407 0
 867 0044 059B     		ldr	r3, [sp, #20]
 868 0046 ABB9     		cbnz	r3, .L48
 421:u8g2/csrc/u8g2_font.c ****     {
 869              		.loc 1 421 0
 870 0048 96F85B30 		ldrb	r3, [r6, #91]	@ zero_extendqisi2
 871 004c F3B1     		cbz	r3, .L49
 872              	.LVL117:
 873              	.L43:
 437:u8g2/csrc/u8g2_font.c ****       break;
 874              		.loc 1 437 0
 875 004e AC42     		cmp	r4, r5
 876 0050 28D3     		bcc	.L44
 439:u8g2/csrc/u8g2_font.c ****     lx = 0;
 877              		.loc 1 439 0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 35


 878 0052 641B     		subs	r4, r4, r5
 879              	.LVL118:
 880 0054 E4B2     		uxtb	r4, r4
 881              	.LVL119:
 441:u8g2/csrc/u8g2_font.c ****   }
 882              		.loc 1 441 0
 883 0056 08F10108 		add	r8, r8, #1
 884              	.LVL120:
 885 005a 5FFA88F8 		uxtb	r8, r8
 886              	.LVL121:
 440:u8g2/csrc/u8g2_font.c ****     ly++;
 887              		.loc 1 440 0
 888 005e 4FF0000A 		mov	r10, #0
 889              	.LVL122:
 890              	.L45:
 380:u8g2/csrc/u8g2_font.c ****     rem -= lx;
 891              		.loc 1 380 0
 892 0062 96F85850 		ldrb	r5, [r6, #88]	@ zero_extendqisi2
 893              	.LVL123:
 381:u8g2/csrc/u8g2_font.c ****     
 894              		.loc 1 381 0
 895 0066 A5EB0A05 		sub	r5, r5, r10
 896              	.LVL124:
 897 006a EDB2     		uxtb	r5, r5
 898              	.LVL125:
 386:u8g2/csrc/u8g2_font.c ****       current = cnt;
 899              		.loc 1 386 0
 900 006c AC42     		cmp	r4, r5
 901 006e D2D3     		bcc	.L46
 385:u8g2/csrc/u8g2_font.c ****     if ( cnt < rem )
 902              		.loc 1 385 0
 903 0070 0395     		str	r5, [sp, #12]
 904 0072 D1E7     		b	.L41
 905              	.LVL126:
 906              	.L48:
 409:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 907              		.loc 1 409 0
 908 0074 96F85C30 		ldrb	r3, [r6, #92]	@ zero_extendqisi2
 909 0078 86F87D30 		strb	r3, [r6, #125]
 410:u8g2/csrc/u8g2_font.c **** 	x, 
 910              		.loc 1 410 0
 911 007c 0097     		str	r7, [sp]
 912 007e 039B     		ldr	r3, [sp, #12]
 913 0080 0246     		mov	r2, r0
 914 0082 0499     		ldr	r1, [sp, #16]
 915 0084 3046     		mov	r0, r6
 916              	.LVL127:
 917 0086 FFF7FEFF 		bl	u8g2_DrawHVLine
 918              	.LVL128:
 919 008a E0E7     		b	.L43
 920              	.LVL129:
 921              	.L49:
 423:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 922              		.loc 1 423 0
 923 008c 96F85D30 		ldrb	r3, [r6, #93]	@ zero_extendqisi2
 924 0090 86F87D30 		strb	r3, [r6, #125]
 424:u8g2/csrc/u8g2_font.c **** 	x, 
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 36


 925              		.loc 1 424 0
 926 0094 0097     		str	r7, [sp]
 927 0096 039B     		ldr	r3, [sp, #12]
 928 0098 0246     		mov	r2, r0
 929 009a 0499     		ldr	r1, [sp, #16]
 930 009c 3046     		mov	r0, r6
 931              	.LVL130:
 932 009e FFF7FEFF 		bl	u8g2_DrawHVLine
 933              	.LVL131:
 934 00a2 D4E7     		b	.L43
 935              	.L44:
 443:u8g2/csrc/u8g2_font.c ****   
 936              		.loc 1 443 0
 937 00a4 5444     		add	r4, r4, r10
 938              	.LVL132:
 445:u8g2/csrc/u8g2_font.c ****   decode->y = ly;
 939              		.loc 1 445 0
 940 00a6 86F85640 		strb	r4, [r6, #86]
 446:u8g2/csrc/u8g2_font.c ****   
 941              		.loc 1 446 0
 942 00aa 86F857B0 		strb	fp, [r6, #87]
 448:u8g2/csrc/u8g2_font.c **** 
 943              		.loc 1 448 0
 944 00ae 07B0     		add	sp, sp, #28
 945              	.LCFI7:
 946              		.cfi_def_cfa_offset 36
 947              		@ sp needed
 948 00b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 949              		.cfi_endproc
 950              	.LFE13:
 952              		.section	.text.u8g2_font_decode_glyph,"ax",%progbits
 953              		.align	1
 954              		.global	u8g2_font_decode_glyph
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu softvfp
 960              	u8g2_font_decode_glyph:
 961              	.LFB15:
 485:u8g2/csrc/u8g2_font.c ****   uint8_t a, b;
 962              		.loc 1 485 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 8
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL133:
 967 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 968              	.LCFI8:
 969              		.cfi_def_cfa_offset 36
 970              		.cfi_offset 4, -36
 971              		.cfi_offset 5, -32
 972              		.cfi_offset 6, -28
 973              		.cfi_offset 7, -24
 974              		.cfi_offset 8, -20
 975              		.cfi_offset 9, -16
 976              		.cfi_offset 10, -12
 977              		.cfi_offset 11, -8
 978              		.cfi_offset 14, -4
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 37


 979 0004 85B0     		sub	sp, sp, #20
 980              	.LCFI9:
 981              		.cfi_def_cfa_offset 56
 982 0006 0446     		mov	r4, r0
 490:u8g2/csrc/u8g2_font.c ****     
 983              		.loc 1 490 0
 984 0008 00F15005 		add	r5, r0, #80
 985              	.LVL134:
 492:u8g2/csrc/u8g2_font.c ****   h = u8g2->font_decode.glyph_height;
 986              		.loc 1 492 0
 987 000c FFF7FEFF 		bl	u8g2_font_setup_decode
 988              	.LVL135:
 493:u8g2/csrc/u8g2_font.c ****   
 989              		.loc 1 493 0
 990 0010 94F95970 		ldrsb	r7, [r4, #89]
 991              	.LVL136:
 495:u8g2/csrc/u8g2_font.c ****   y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
 992              		.loc 1 495 0
 993 0014 94F86610 		ldrb	r1, [r4, #102]	@ zero_extendqisi2
 994 0018 2846     		mov	r0, r5
 995 001a FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 996              	.LVL137:
 997 001e 8346     		mov	fp, r0
 998              	.LVL138:
 496:u8g2/csrc/u8g2_font.c ****   d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
 999              		.loc 1 496 0
 1000 0020 94F86710 		ldrb	r1, [r4, #103]	@ zero_extendqisi2
 1001 0024 2846     		mov	r0, r5
 1002 0026 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1003              	.LVL139:
 1004 002a 0646     		mov	r6, r0
 1005              	.LVL140:
 497:u8g2/csrc/u8g2_font.c ****   
 1006              		.loc 1 497 0
 1007 002c 94F86810 		ldrb	r1, [r4, #104]	@ zero_extendqisi2
 1008 0030 2846     		mov	r0, r5
 1009 0032 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1010              	.LVL141:
 1011 0036 0290     		str	r0, [sp, #8]
 1012              	.LVL142:
 499:u8g2/csrc/u8g2_font.c ****   {
 1013              		.loc 1 499 0
 1014 0038 94F95880 		ldrsb	r8, [r4, #88]
 1015 003c B8F1000F 		cmp	r8, #0
 1016 0040 59DD     		ble	.L51
 502:u8g2/csrc/u8g2_font.c ****     decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
 1017              		.loc 1 502 0
 1018 0042 5FFA87FA 		uxtb	r10, r7
 1019 0046 5644     		add	r6, r6, r10
 1020              	.LVL143:
 1021 0048 F6B2     		uxtb	r6, r6
 1022 004a 7642     		negs	r6, r6
 1023 004c 76B2     		sxtb	r6, r6
 1024 004e 94F85E90 		ldrb	r9, [r4, #94]	@ zero_extendqisi2
 1025 0052 4B46     		mov	r3, r9
 1026 0054 3246     		mov	r2, r6
 1027 0056 CDF80CB0 		str	fp, [sp, #12]
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 38


 1028 005a 5946     		mov	r1, fp
 1029 005c 94F85400 		ldrb	r0, [r4, #84]	@ zero_extendqisi2
 1030 0060 FFF7FEFF 		bl	u8g2_add_vector_x
 1031              	.LVL144:
 1032 0064 8346     		mov	fp, r0
 1033              	.LVL145:
 1034 0066 84F85400 		strb	r0, [r4, #84]
 503:u8g2/csrc/u8g2_font.c **** #else
 1035              		.loc 1 503 0
 1036 006a 4B46     		mov	r3, r9
 1037 006c 3246     		mov	r2, r6
 1038 006e 0399     		ldr	r1, [sp, #12]
 1039 0070 94F85500 		ldrb	r0, [r4, #85]	@ zero_extendqisi2
 1040 0074 FFF7FEFF 		bl	u8g2_add_vector_y
 1041              	.LVL146:
 1042 0078 0246     		mov	r2, r0
 1043 007a 84F85500 		strb	r0, [r4, #85]
 1044              	.LVL147:
 1045              	.LBB3:
 519:u8g2/csrc/u8g2_font.c ****       {
 1046              		.loc 1 519 0
 1047 007e B9F1030F 		cmp	r9, #3
 1048 0082 69D8     		bhi	.L60
 1049 0084 DFE809F0 		tbb	[pc, r9]
 1050              	.L54:
 1051 0088 02       		.byte	(.L53-.L54)/2
 1052 0089 3B       		.byte	(.L55-.L54)/2
 1053 008a 49       		.byte	(.L56-.L54)/2
 1054 008b 5C       		.byte	(.L57-.L54)/2
 1055              		.p2align 1
 1056              	.L53:
 522:u8g2/csrc/u8g2_font.c **** 	    y1 += h;
 1057              		.loc 1 522 0
 1058 008c 5FFA88F3 		uxtb	r3, r8
 1059 0090 5B44     		add	r3, r3, fp
 1060 0092 DBB2     		uxtb	r3, r3
 1061              	.LVL148:
 523:u8g2/csrc/u8g2_font.c **** 	    break;
 1062              		.loc 1 523 0
 1063 0094 5044     		add	r0, r10, r0
 1064              	.LVL149:
 1065 0096 C0B2     		uxtb	r0, r0
 1066              	.LVL150:
 1067              	.L52:
 551:u8g2/csrc/u8g2_font.c **** 	return d;
 1068              		.loc 1 551 0
 1069 0098 0090     		str	r0, [sp]
 1070 009a 5946     		mov	r1, fp
 1071 009c 2046     		mov	r0, r4
 1072              	.LVL151:
 1073 009e FFF7FEFF 		bl	u8g2_IsIntersection
 1074              	.LVL152:
 1075 00a2 40B3     		cbz	r0, .L51
 1076              	.LBE3:
 557:u8g2/csrc/u8g2_font.c ****     decode->y = 0;
 1077              		.loc 1 557 0
 1078 00a4 0023     		movs	r3, #0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 39


 1079 00a6 84F85630 		strb	r3, [r4, #86]
 558:u8g2/csrc/u8g2_font.c ****     
 1080              		.loc 1 558 0
 1081 00aa 84F85730 		strb	r3, [r4, #87]
 1082              	.L59:
 563:u8g2/csrc/u8g2_font.c ****       b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
 1083              		.loc 1 563 0
 1084 00ae 94F86210 		ldrb	r1, [r4, #98]	@ zero_extendqisi2
 1085 00b2 2846     		mov	r0, r5
 1086 00b4 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 1087              	.LVL153:
 1088 00b8 8046     		mov	r8, r0
 1089              	.LVL154:
 564:u8g2/csrc/u8g2_font.c ****       do
 1090              		.loc 1 564 0
 1091 00ba 94F86310 		ldrb	r1, [r4, #99]	@ zero_extendqisi2
 1092 00be 2846     		mov	r0, r5
 1093 00c0 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 1094              	.LVL155:
 1095 00c4 0646     		mov	r6, r0
 1096              	.LVL156:
 1097              	.L58:
 567:u8g2/csrc/u8g2_font.c **** 	u8g2_font_decode_len(u8g2, b, 1);
 1098              		.loc 1 567 0 discriminator 1
 1099 00c6 0022     		movs	r2, #0
 1100 00c8 4146     		mov	r1, r8
 1101 00ca 2046     		mov	r0, r4
 1102 00cc FFF7FEFF 		bl	u8g2_font_decode_len
 1103              	.LVL157:
 568:u8g2/csrc/u8g2_font.c ****       } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
 1104              		.loc 1 568 0 discriminator 1
 1105 00d0 0122     		movs	r2, #1
 1106 00d2 3146     		mov	r1, r6
 1107 00d4 2046     		mov	r0, r4
 1108 00d6 FFF7FEFF 		bl	u8g2_font_decode_len
 1109              	.LVL158:
 569:u8g2/csrc/u8g2_font.c **** 
 1110              		.loc 1 569 0 discriminator 1
 1111 00da 0121     		movs	r1, #1
 1112 00dc 2846     		mov	r0, r5
 1113 00de FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 1114              	.LVL159:
 1115 00e2 0028     		cmp	r0, #0
 1116 00e4 EFD1     		bne	.L58
 571:u8g2/csrc/u8g2_font.c **** 	break;
 1117              		.loc 1 571 0
 1118 00e6 94F95730 		ldrsb	r3, [r4, #87]
 1119 00ea 9F42     		cmp	r7, r3
 1120 00ec DFDC     		bgt	.L59
 576:u8g2/csrc/u8g2_font.c ****   }
 1121              		.loc 1 576 0
 1122 00ee 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 1123 00f2 84F87D30 		strb	r3, [r4, #125]
 1124              	.LVL160:
 1125              	.L51:
 579:u8g2/csrc/u8g2_font.c **** 
 1126              		.loc 1 579 0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 40


 1127 00f6 0298     		ldr	r0, [sp, #8]
 1128 00f8 05B0     		add	sp, sp, #20
 1129              	.LCFI10:
 1130              		.cfi_remember_state
 1131              		.cfi_def_cfa_offset 36
 1132              		@ sp needed
 1133 00fa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1134              	.LVL161:
 1135              	.L55:
 1136              	.LCFI11:
 1137              		.cfi_restore_state
 1138              	.LBB4:
 526:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 1139              		.loc 1 526 0
 1140 00fe ABEB0A01 		sub	r1, fp, r10
 1141 0102 C9B2     		uxtb	r1, r1
 1142              	.LVL162:
 527:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1143              		.loc 1 527 0
 1144 0104 0131     		adds	r1, r1, #1
 1145              	.LVL163:
 528:u8g2/csrc/u8g2_font.c **** 	    y1 += decode->glyph_width;
 1146              		.loc 1 528 0
 1147 0106 0BF10103 		add	r3, fp, #1
 1148 010a DBB2     		uxtb	r3, r3
 1149              	.LVL164:
 529:u8g2/csrc/u8g2_font.c **** 	    break;
 1150              		.loc 1 529 0
 1151 010c 5FFA88F0 		uxtb	r0, r8
 1152              	.LVL165:
 1153 0110 1044     		add	r0, r0, r2
 1154 0112 C0B2     		uxtb	r0, r0
 1155              	.LVL166:
 527:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1156              		.loc 1 527 0
 1157 0114 5FFA81FB 		uxtb	fp, r1
 530:u8g2/csrc/u8g2_font.c **** 	case 2:
 1158              		.loc 1 530 0
 1159 0118 BEE7     		b	.L52
 1160              	.LVL167:
 1161              	.L56:
 532:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 1162              		.loc 1 532 0
 1163 011a 5FFA88F1 		uxtb	r1, r8
 1164 011e ABEB0101 		sub	r1, fp, r1
 1165 0122 C9B2     		uxtb	r1, r1
 1166              	.LVL168:
 533:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1167              		.loc 1 533 0
 1168 0124 0131     		adds	r1, r1, #1
 1169              	.LVL169:
 534:u8g2/csrc/u8g2_font.c **** 	    y0 -= h;
 1170              		.loc 1 534 0
 1171 0126 0BF10103 		add	r3, fp, #1
 1172 012a DBB2     		uxtb	r3, r3
 1173              	.LVL170:
 535:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 41


 1174              		.loc 1 535 0
 1175 012c A0EB0A06 		sub	r6, r0, r10
 1176 0130 F6B2     		uxtb	r6, r6
 1177              	.LVL171:
 536:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1178              		.loc 1 536 0
 1179 0132 0136     		adds	r6, r6, #1
 1180              	.LVL172:
 537:u8g2/csrc/u8g2_font.c **** 	    break;	  
 1181              		.loc 1 537 0
 1182 0134 0132     		adds	r2, r2, #1
 1183 0136 D0B2     		uxtb	r0, r2
 1184              	.LVL173:
 536:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1185              		.loc 1 536 0
 1186 0138 F2B2     		uxtb	r2, r6
 533:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1187              		.loc 1 533 0
 1188 013a 5FFA81FB 		uxtb	fp, r1
 538:u8g2/csrc/u8g2_font.c **** 	case 3:
 1189              		.loc 1 538 0
 1190 013e ABE7     		b	.L52
 1191              	.LVL174:
 1192              	.L57:
 540:u8g2/csrc/u8g2_font.c **** 	    y0 -= decode->glyph_width;
 1193              		.loc 1 540 0
 1194 0140 0AEB0B03 		add	r3, r10, fp
 1195 0144 DBB2     		uxtb	r3, r3
 1196              	.LVL175:
 541:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 1197              		.loc 1 541 0
 1198 0146 5FFA88F1 		uxtb	r1, r8
 1199 014a 411A     		subs	r1, r0, r1
 1200 014c C9B2     		uxtb	r1, r1
 1201              	.LVL176:
 542:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1202              		.loc 1 542 0
 1203 014e 0131     		adds	r1, r1, #1
 1204              	.LVL177:
 543:u8g2/csrc/u8g2_font.c **** 	    break;	  
 1205              		.loc 1 543 0
 1206 0150 0132     		adds	r2, r2, #1
 1207 0152 D0B2     		uxtb	r0, r2
 1208              	.LVL178:
 542:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1209              		.loc 1 542 0
 1210 0154 CAB2     		uxtb	r2, r1
 544:u8g2/csrc/u8g2_font.c ****       }
 1211              		.loc 1 544 0
 1212 0156 9FE7     		b	.L52
 1213              	.LVL179:
 1214              	.L60:
 515:u8g2/csrc/u8g2_font.c ****       y1 = y0;
 1215              		.loc 1 515 0
 1216 0158 5B46     		mov	r3, fp
 1217 015a 9DE7     		b	.L52
 1218              	.LBE4:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 42


 1219              		.cfi_endproc
 1220              	.LFE15:
 1222              		.section	.text.u8g2_font_get_glyph_data,"ax",%progbits
 1223              		.align	1
 1224              		.global	u8g2_font_get_glyph_data
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1228              		.fpu softvfp
 1230              	u8g2_font_get_glyph_data:
 1231              	.LFB16:
 590:u8g2/csrc/u8g2_font.c ****   const uint8_t *font = u8g2->font;
 1232              		.loc 1 590 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236              		@ link register save eliminated.
 1237              	.LVL180:
 591:u8g2/csrc/u8g2_font.c ****   font += U8G2_FONT_DATA_STRUCT_SIZE;
 1238              		.loc 1 591 0
 1239 0000 836C     		ldr	r3, [r0, #72]
 1240              	.LVL181:
 592:u8g2/csrc/u8g2_font.c **** 
 1241              		.loc 1 592 0
 1242 0002 1733     		adds	r3, r3, #23
 1243              	.LVL182:
 595:u8g2/csrc/u8g2_font.c ****   {
 1244              		.loc 1 595 0
 1245 0004 FF29     		cmp	r1, #255
 1246 0006 13D8     		bhi	.L63
 597:u8g2/csrc/u8g2_font.c ****     {
 1247              		.loc 1 597 0
 1248 0008 6029     		cmp	r1, #96
 1249 000a 09D9     		bls	.L64
 599:u8g2/csrc/u8g2_font.c ****     }
 1250              		.loc 1 599 0
 1251 000c B0F87420 		ldrh	r2, [r0, #116]
 1252 0010 1344     		add	r3, r3, r2
 1253              	.LVL183:
 1254              	.L68:
 608:u8g2/csrc/u8g2_font.c **** 	break;
 1255              		.loc 1 608 0
 1256 0012 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1257 0014 DAB1     		cbz	r2, .L71
 610:u8g2/csrc/u8g2_font.c ****       {
 1258              		.loc 1 610 0
 1259 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1260 0018 8142     		cmp	r1, r0
 1261 001a 07D0     		beq	.L73
 614:u8g2/csrc/u8g2_font.c ****     }
 1262              		.loc 1 614 0
 1263 001c 1344     		add	r3, r3, r2
 1264              	.LVL184:
 608:u8g2/csrc/u8g2_font.c **** 	break;
 1265              		.loc 1 608 0
 1266 001e F8E7     		b	.L68
 1267              	.LVL185:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 43


 1268              	.L64:
 601:u8g2/csrc/u8g2_font.c ****     {
 1269              		.loc 1 601 0
 1270 0020 4029     		cmp	r1, #64
 1271 0022 F6D9     		bls	.L68
 603:u8g2/csrc/u8g2_font.c ****     }
 1272              		.loc 1 603 0
 1273 0024 B0F87220 		ldrh	r2, [r0, #114]
 1274 0028 1344     		add	r3, r3, r2
 1275              	.LVL186:
 1276 002a F2E7     		b	.L68
 1277              	.LVL187:
 1278              	.L73:
 612:u8g2/csrc/u8g2_font.c ****       }
 1279              		.loc 1 612 0
 1280 002c 981C     		adds	r0, r3, #2
 1281 002e 7047     		bx	lr
 1282              	.LVL188:
 1283              	.L63:
 1284              	.LBB5:
 630:u8g2/csrc/u8g2_font.c ****     
 1285              		.loc 1 630 0
 1286 0030 B0F87600 		ldrh	r0, [r0, #118]
 1287              	.LVL189:
 1288 0034 1844     		add	r0, r0, r3
 1289              	.LVL190:
 1290              	.L70:
 635:u8g2/csrc/u8g2_font.c ****       e <<= 8;
 1291              		.loc 1 635 0
 1292 0036 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 1293              	.LVL191:
 637:u8g2/csrc/u8g2_font.c ****   
 1294              		.loc 1 637 0
 1295 0038 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1296              	.LVL192:
 644:u8g2/csrc/u8g2_font.c **** 	break;
 1297              		.loc 1 644 0
 1298 003a 53EA0223 		orrs	r3, r3, r2, lsl #8
 1299              	.LVL193:
 1300 003e 08D0     		beq	.L72
 647:u8g2/csrc/u8g2_font.c ****       {
 1301              		.loc 1 647 0
 1302 0040 9942     		cmp	r1, r3
 1303 0042 02D0     		beq	.L74
 655:u8g2/csrc/u8g2_font.c ****     }  
 1304              		.loc 1 655 0
 1305 0044 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1306 0046 1844     		add	r0, r0, r3
 1307              	.LVL194:
 635:u8g2/csrc/u8g2_font.c ****       e <<= 8;
 1308              		.loc 1 635 0
 1309 0048 F5E7     		b	.L70
 1310              	.LVL195:
 1311              	.L74:
 653:u8g2/csrc/u8g2_font.c ****       }
 1312              		.loc 1 653 0
 1313 004a 0330     		adds	r0, r0, #3
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 44


 1314              	.LVL196:
 1315 004c 7047     		bx	lr
 1316              	.LVL197:
 1317              	.L71:
 1318              	.LBE5:
 660:u8g2/csrc/u8g2_font.c **** }
 1319              		.loc 1 660 0
 1320 004e 0020     		movs	r0, #0
 1321 0050 7047     		bx	lr
 1322              	.LVL198:
 1323              	.L72:
 1324 0052 0020     		movs	r0, #0
 1325              	.LVL199:
 661:u8g2/csrc/u8g2_font.c **** 
 1326              		.loc 1 661 0
 1327 0054 7047     		bx	lr
 1328              		.cfi_endproc
 1329              	.LFE16:
 1331              		.section	.text.u8g2_font_draw_glyph,"ax",%progbits
 1332              		.align	1
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1336              		.fpu softvfp
 1338              	u8g2_font_draw_glyph:
 1339              	.LFB17:
 664:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t dx = 0;
 1340              		.loc 1 664 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              	.LVL200:
 1345 0000 10B5     		push	{r4, lr}
 1346              	.LCFI12:
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 4, -8
 1349              		.cfi_offset 14, -4
 1350 0002 0446     		mov	r4, r0
 1351              	.LVL201:
 666:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_y = y;
 1352              		.loc 1 666 0
 1353 0004 80F85410 		strb	r1, [r0, #84]
 667:u8g2/csrc/u8g2_font.c ****   //u8g2->font_decode.is_transparent = is_transparent; this is already set
 1354              		.loc 1 667 0
 1355 0008 80F85520 		strb	r2, [r0, #85]
 670:u8g2/csrc/u8g2_font.c ****   if ( glyph_data != NULL )
 1356              		.loc 1 670 0
 1357 000c 1946     		mov	r1, r3
 1358              	.LVL202:
 1359 000e FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1360              	.LVL203:
 671:u8g2/csrc/u8g2_font.c ****   {
 1361              		.loc 1 671 0
 1362 0012 28B1     		cbz	r0, .L77
 1363 0014 0146     		mov	r1, r0
 673:u8g2/csrc/u8g2_font.c ****   }
 1364              		.loc 1 673 0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 45


 1365 0016 2046     		mov	r0, r4
 1366              	.LVL204:
 1367 0018 FFF7FEFF 		bl	u8g2_font_decode_glyph
 1368              	.LVL205:
 1369 001c C0B2     		uxtb	r0, r0
 1370              	.LVL206:
 1371 001e 10BD     		pop	{r4, pc}
 1372              	.LVL207:
 1373              	.L77:
 665:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_x = x;
 1374              		.loc 1 665 0
 1375 0020 0020     		movs	r0, #0
 1376              	.LVL208:
 676:u8g2/csrc/u8g2_font.c **** 
 1377              		.loc 1 676 0
 1378 0022 10BD     		pop	{r4, pc}
 1379              		.cfi_endproc
 1380              	.LFE17:
 1382              		.section	.text.u8g2_GetGlyphHorizontalProperties,"ax",%progbits
 1383              		.align	1
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu softvfp
 1389              	u8g2_GetGlyphHorizontalProperties:
 1390              	.LFB41:
1005:u8g2/csrc/u8g2_font.c **** 
1006:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosCenter(u8g2_t *u8g2)
1007:u8g2/csrc/u8g2_font.c **** {
1008:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_center;
1009:u8g2/csrc/u8g2_font.c **** }
1010:u8g2/csrc/u8g2_font.c **** 
1011:u8g2/csrc/u8g2_font.c **** /*===============================================*/
1012:u8g2/csrc/u8g2_font.c **** 
1013:u8g2/csrc/u8g2_font.c **** void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
1014:u8g2/csrc/u8g2_font.c **** {
1015:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font != font )
1016:u8g2/csrc/u8g2_font.c ****   {
1017:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
1018:u8g2/csrc/u8g2_font.c **** 	u8g2->last_font_data = NULL;
1019:u8g2/csrc/u8g2_font.c **** 	u8g2->last_unicode = 0x0ffff;
1020:u8g2/csrc/u8g2_font.c **** #endif 
1021:u8g2/csrc/u8g2_font.c ****     u8g2->font = font;
1022:u8g2/csrc/u8g2_font.c ****     u8g2_read_font_info(&(u8g2->font_info), font);
1023:u8g2/csrc/u8g2_font.c ****     u8g2_UpdateRefHeight(u8g2);
1024:u8g2/csrc/u8g2_font.c ****     /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
1025:u8g2/csrc/u8g2_font.c ****   }
1026:u8g2/csrc/u8g2_font.c **** }
1027:u8g2/csrc/u8g2_font.c **** 
1028:u8g2/csrc/u8g2_font.c **** /*===============================================*/
1029:u8g2/csrc/u8g2_font.c **** 
1030:u8g2/csrc/u8g2_font.c **** /* string calculation is stilll not 100% perfect as it addes the initial string offset to the overa
1031:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_string_width(u8g2_t *u8g2, const char *str) U8G2_NOINLINE;
1032:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_string_width(u8g2_t *u8g2, const char *str)
1033:u8g2/csrc/u8g2_font.c **** {
1034:u8g2/csrc/u8g2_font.c ****   uint16_t e;
1035:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t  w, dx;
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 46


1036:u8g2/csrc/u8g2_font.c ****   
1037:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.glyph_width = 0;
1038:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
1039:u8g2/csrc/u8g2_font.c ****   
1040:u8g2/csrc/u8g2_font.c ****   /* reset the total width to zero, this will be expanded during calculation */
1041:u8g2/csrc/u8g2_font.c ****   w = 0;
1042:u8g2/csrc/u8g2_font.c ****   dx = 0;
1043:u8g2/csrc/u8g2_font.c **** 
1044:u8g2/csrc/u8g2_font.c ****   // printf("str=<%s>\n", str);
1045:u8g2/csrc/u8g2_font.c **** 	
1046:u8g2/csrc/u8g2_font.c ****   for(;;)
1047:u8g2/csrc/u8g2_font.c ****   {
1048:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
1049:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
1050:u8g2/csrc/u8g2_font.c ****       break;
1051:u8g2/csrc/u8g2_font.c ****     str++;
1052:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
1053:u8g2/csrc/u8g2_font.c ****     {
1054:u8g2/csrc/u8g2_font.c ****       dx = u8g2_GetGlyphWidth(u8g2, e);		/* delta x value of the glyph */
1055:u8g2/csrc/u8g2_font.c ****       w += dx;
1056:u8g2/csrc/u8g2_font.c ****     }
1057:u8g2/csrc/u8g2_font.c ****   }
1058:u8g2/csrc/u8g2_font.c ****   
1059:u8g2/csrc/u8g2_font.c ****   /* adjust the last glyph, check for issue #16: do not adjust if width is 0 */
1060:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font_decode.glyph_width != 0 )
1061:u8g2/csrc/u8g2_font.c ****   {
1062:u8g2/csrc/u8g2_font.c ****     w -= dx;
1063:u8g2/csrc/u8g2_font.c ****     w += u8g2->font_decode.glyph_width;  /* the real pixel width of the glyph, sideeffect of GetGly
1064:u8g2/csrc/u8g2_font.c ****     /* issue #46: we have to add the x offset also */
1065:u8g2/csrc/u8g2_font.c ****     w += u8g2->glyph_x_offset;	/* this value is set as a side effect of u8g2_GetGlyphWidth() */
1066:u8g2/csrc/u8g2_font.c ****   }
1067:u8g2/csrc/u8g2_font.c ****   // printf("w=%d \n", w);
1068:u8g2/csrc/u8g2_font.c ****   
1069:u8g2/csrc/u8g2_font.c ****   return w;  
1070:u8g2/csrc/u8g2_font.c **** }
1071:u8g2/csrc/u8g2_font.c **** 
1072:u8g2/csrc/u8g2_font.c **** static void u8g2_GetGlyphHorizontalProperties(u8g2_t *u8g2, uint16_t requested_encoding, uint8_t *w
1073:u8g2/csrc/u8g2_font.c **** {
 1391              		.loc 1 1073 0
 1392              		.cfi_startproc
 1393              		@ args = 4, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395              	.LVL209:
 1396 0000 70B5     		push	{r4, r5, r6, lr}
 1397              	.LCFI13:
 1398              		.cfi_def_cfa_offset 16
 1399              		.cfi_offset 4, -16
 1400              		.cfi_offset 5, -12
 1401              		.cfi_offset 6, -8
 1402              		.cfi_offset 14, -4
 1403 0002 0446     		mov	r4, r0
 1404 0004 1546     		mov	r5, r2
 1405 0006 1E46     		mov	r6, r3
1074:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
 1406              		.loc 1 1074 0
 1407 0008 FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1408              	.LVL210:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 47


1075:u8g2/csrc/u8g2_font.c ****   if ( glyph_data == NULL )
 1409              		.loc 1 1075 0
 1410 000c D0B1     		cbz	r0, .L79
 1411 000e 0146     		mov	r1, r0
1076:u8g2/csrc/u8g2_font.c ****     return; 
1077:u8g2/csrc/u8g2_font.c ****   
1078:u8g2/csrc/u8g2_font.c ****   u8g2_font_setup_decode(u8g2, glyph_data);
 1412              		.loc 1 1078 0
 1413 0010 2046     		mov	r0, r4
 1414              	.LVL211:
 1415 0012 FFF7FEFF 		bl	u8g2_font_setup_decode
 1416              	.LVL212:
1079:u8g2/csrc/u8g2_font.c ****   *w = u8g2->font_decode.glyph_width;
 1417              		.loc 1 1079 0
 1418 0016 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 1419 001a 2B70     		strb	r3, [r5]
1080:u8g2/csrc/u8g2_font.c ****   *ox =  u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_x);
 1420              		.loc 1 1080 0
 1421 001c 04F15005 		add	r5, r4, #80
 1422              	.LVL213:
 1423 0020 94F86610 		ldrb	r1, [r4, #102]	@ zero_extendqisi2
 1424 0024 2846     		mov	r0, r5
 1425 0026 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1426              	.LVL214:
 1427 002a 3070     		strb	r0, [r6]
1081:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
 1428              		.loc 1 1081 0
 1429 002c 94F86710 		ldrb	r1, [r4, #103]	@ zero_extendqisi2
 1430 0030 2846     		mov	r0, r5
 1431 0032 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1432              	.LVL215:
1082:u8g2/csrc/u8g2_font.c ****   *dx = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_delta_x);
 1433              		.loc 1 1082 0
 1434 0036 94F86810 		ldrb	r1, [r4, #104]	@ zero_extendqisi2
 1435 003a 2846     		mov	r0, r5
 1436 003c FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1437              	.LVL216:
 1438 0040 049B     		ldr	r3, [sp, #16]
 1439 0042 1870     		strb	r0, [r3]
 1440              	.L79:
 1441 0044 70BD     		pop	{r4, r5, r6, pc}
 1442              		.cfi_endproc
 1443              	.LFE41:
 1445              		.section	.text.u8g2_calculate_exact_string_width,"ax",%progbits
 1446              		.align	1
 1447              		.syntax unified
 1448              		.thumb
 1449              		.thumb_func
 1450              		.fpu softvfp
 1452              	u8g2_calculate_exact_string_width:
 1453              	.LFB43:
1083:u8g2/csrc/u8g2_font.c **** }
1084:u8g2/csrc/u8g2_font.c **** 
1085:u8g2/csrc/u8g2_font.c **** /* u8g compatible GetStrX function */
1086:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetStrX(u8g2_t *u8g2, const char *s)
1087:u8g2/csrc/u8g2_font.c **** {
1088:u8g2/csrc/u8g2_font.c ****   uint8_t w;
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 48


1089:u8g2/csrc/u8g2_font.c ****   int8_t ox, dx;
1090:u8g2/csrc/u8g2_font.c ****   u8g2_GetGlyphHorizontalProperties(u8g2, *s, &w, &ox, &dx);
1091:u8g2/csrc/u8g2_font.c ****   return ox;
1092:u8g2/csrc/u8g2_font.c **** }
1093:u8g2/csrc/u8g2_font.c **** 
1094:u8g2/csrc/u8g2_font.c **** 
1095:u8g2/csrc/u8g2_font.c **** 
1096:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_calculate_exact_string_width(u8g2_t *u8g2, const char *str)
1097:u8g2/csrc/u8g2_font.c **** {
 1454              		.loc 1 1097 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 8
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
 1458              	.LVL217:
 1459 0000 70B5     		push	{r4, r5, r6, lr}
 1460              	.LCFI14:
 1461              		.cfi_def_cfa_offset 16
 1462              		.cfi_offset 4, -16
 1463              		.cfi_offset 5, -12
 1464              		.cfi_offset 6, -8
 1465              		.cfi_offset 14, -4
 1466 0002 84B0     		sub	sp, sp, #16
 1467              	.LCFI15:
 1468              		.cfi_def_cfa_offset 32
 1469 0004 0446     		mov	r4, r0
 1470 0006 0D46     		mov	r5, r1
 1471              	.LVL218:
 1472              	.L83:
1098:u8g2/csrc/u8g2_font.c **** 
1099:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t  w;
1100:u8g2/csrc/u8g2_font.c ****   uint16_t enc;
1101:u8g2/csrc/u8g2_font.c ****   uint8_t gw; 
1102:u8g2/csrc/u8g2_font.c ****   int8_t ox, dx;
1103:u8g2/csrc/u8g2_font.c ****   
1104:u8g2/csrc/u8g2_font.c ****   /* reset the total minimal width to zero, this will be expanded during calculation */
1105:u8g2/csrc/u8g2_font.c ****   w = 0;
1106:u8g2/csrc/u8g2_font.c ****     
1107:u8g2/csrc/u8g2_font.c ****   
1108:u8g2/csrc/u8g2_font.c ****   /* check for empty string, width is already 0 */
1109:u8g2/csrc/u8g2_font.c ****   do
1110:u8g2/csrc/u8g2_font.c ****   {
1111:u8g2/csrc/u8g2_font.c ****     enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 1473              		.loc 1 1111 0 discriminator 1
 1474 0008 6368     		ldr	r3, [r4, #4]
 1475 000a 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1476              	.LVL219:
 1477 000e 2046     		mov	r0, r4
 1478 0010 9847     		blx	r3
 1479              	.LVL220:
1112:u8g2/csrc/u8g2_font.c ****     str++;
1113:u8g2/csrc/u8g2_font.c ****   } while( enc == 0x0fffe );
 1480              		.loc 1 1113 0 discriminator 1
 1481 0012 4FF6FE73 		movw	r3, #65534
 1482 0016 9842     		cmp	r0, r3
 1483 0018 F6D0     		beq	.L83
1114:u8g2/csrc/u8g2_font.c ****   
1115:u8g2/csrc/u8g2_font.c ****   if ( enc== 0x0ffff )
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 49


 1484              		.loc 1 1115 0
 1485 001a 4FF6FF73 		movw	r3, #65535
 1486 001e 9842     		cmp	r0, r3
 1487 0020 3CD0     		beq	.L89
1116:u8g2/csrc/u8g2_font.c ****      return w;
1117:u8g2/csrc/u8g2_font.c ****   
1118:u8g2/csrc/u8g2_font.c ****   /* get the glyph information of the first char. This must be valid, because we already checked fo
1119:u8g2/csrc/u8g2_font.c ****   /* if *s is not inside the font, then the cached parameters of the glyph are all zero */
1120:u8g2/csrc/u8g2_font.c ****   u8g2_GetGlyphHorizontalProperties(u8g2, enc, &gw, &ox, &dx);  
 1488              		.loc 1 1120 0
 1489 0022 0DF10D03 		add	r3, sp, #13
 1490 0026 0093     		str	r3, [sp]
 1491 0028 0DF10E03 		add	r3, sp, #14
 1492 002c 0DF10F02 		add	r2, sp, #15
 1493 0030 0146     		mov	r1, r0
 1494 0032 2046     		mov	r0, r4
 1495              	.LVL221:
 1496 0034 FFF7FEFF 		bl	u8g2_GetGlyphHorizontalProperties
 1497              	.LVL222:
1121:u8g2/csrc/u8g2_font.c **** 
1122:u8g2/csrc/u8g2_font.c ****   /* strlen(s) == 1:       width = width(s[0]) */
1123:u8g2/csrc/u8g2_font.c ****   /* strlen(s) == 2:       width = - offx(s[0]) + deltax(s[0]) + offx(s[1]) + width(s[1]) */
1124:u8g2/csrc/u8g2_font.c ****   /* strlen(s) == 3:       width = - offx(s[0]) + deltax(s[0]) + deltax(s[1]) + offx(s[2]) + width(
1125:u8g2/csrc/u8g2_font.c ****   
1126:u8g2/csrc/u8g2_font.c ****   /* assume that the string has size 2 or more, than start with negative offset-x */
1127:u8g2/csrc/u8g2_font.c ****   /* for string with size 1, this will be nullified after the loop */
1128:u8g2/csrc/u8g2_font.c ****   w = -ox;  
 1498              		.loc 1 1128 0
 1499 0038 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 1500 003c 5B42     		negs	r3, r3
 1501 003e DEB2     		uxtb	r6, r3
 1502              	.LVL223:
 1503              	.L85:
1129:u8g2/csrc/u8g2_font.c ****   for(;;)
1130:u8g2/csrc/u8g2_font.c ****   {
1131:u8g2/csrc/u8g2_font.c ****     
1132:u8g2/csrc/u8g2_font.c ****     /* check and stop if the end of the string is reached */
1133:u8g2/csrc/u8g2_font.c ****     do
1134:u8g2/csrc/u8g2_font.c ****     {
1135:u8g2/csrc/u8g2_font.c ****       enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 1504              		.loc 1 1135 0 discriminator 1
 1505 0040 6368     		ldr	r3, [r4, #4]
 1506 0042 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1507              	.LVL224:
 1508 0046 2046     		mov	r0, r4
 1509 0048 9847     		blx	r3
 1510              	.LVL225:
1136:u8g2/csrc/u8g2_font.c ****       str++;
1137:u8g2/csrc/u8g2_font.c ****     } while( enc == 0x0fffe );
 1511              		.loc 1 1137 0 discriminator 1
 1512 004a 4FF6FE73 		movw	r3, #65534
 1513 004e 9842     		cmp	r0, r3
 1514 0050 F6D0     		beq	.L85
1138:u8g2/csrc/u8g2_font.c ****     if ( enc== 0x0ffff )
 1515              		.loc 1 1138 0
 1516 0052 4FF6FF73 		movw	r3, #65535
 1517 0056 9842     		cmp	r0, r3
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 50


 1518 0058 0FD0     		beq	.L87
1139:u8g2/csrc/u8g2_font.c ****       break;
1140:u8g2/csrc/u8g2_font.c **** 
1141:u8g2/csrc/u8g2_font.c ****     u8g2_GetGlyphHorizontalProperties(u8g2, enc, &gw, &ox, &dx);  
 1519              		.loc 1 1141 0
 1520 005a 0DF10D03 		add	r3, sp, #13
 1521 005e 0093     		str	r3, [sp]
 1522 0060 0DF10E03 		add	r3, sp, #14
 1523 0064 0DF10F02 		add	r2, sp, #15
 1524 0068 0146     		mov	r1, r0
 1525 006a 2046     		mov	r0, r4
 1526              	.LVL226:
 1527 006c FFF7FEFF 		bl	u8g2_GetGlyphHorizontalProperties
 1528              	.LVL227:
1142:u8g2/csrc/u8g2_font.c ****     
1143:u8g2/csrc/u8g2_font.c ****     /* if there are still more characters, add the delta to the next glyph */
1144:u8g2/csrc/u8g2_font.c ****     w += dx;    
 1529              		.loc 1 1144 0
 1530 0070 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 1531 0074 3344     		add	r3, r3, r6
 1532 0076 DEB2     		uxtb	r6, r3
 1533              	.LVL228:
1129:u8g2/csrc/u8g2_font.c ****   {
 1534              		.loc 1 1129 0
 1535 0078 E2E7     		b	.L85
 1536              	.LVL229:
 1537              	.L87:
1145:u8g2/csrc/u8g2_font.c ****   }
1146:u8g2/csrc/u8g2_font.c ****   
1147:u8g2/csrc/u8g2_font.c ****   /* finally calculate the width of the last char */
1148:u8g2/csrc/u8g2_font.c ****   /* here is another exception, if the last char is a black, use the dx value instead */
1149:u8g2/csrc/u8g2_font.c ****   if ( enc != ' ' )
 1538              		.loc 1 1149 0
 1539 007a 2028     		cmp	r0, #32
 1540 007c 09D0     		beq	.L88
1150:u8g2/csrc/u8g2_font.c ****   {
1151:u8g2/csrc/u8g2_font.c ****     /* if g was not updated in the for loop (strlen() == 1), then the initial offset x gets removed
1152:u8g2/csrc/u8g2_font.c ****     w += gw;
 1541              		.loc 1 1152 0
 1542 007e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1543 0082 3344     		add	r3, r3, r6
 1544 0084 DBB2     		uxtb	r3, r3
 1545              	.LVL230:
1153:u8g2/csrc/u8g2_font.c ****     w += ox;
 1546              		.loc 1 1153 0
 1547 0086 9DF80E00 		ldrb	r0, [sp, #14]	@ zero_extendqisi2
 1548              	.LVL231:
 1549 008a 0344     		add	r3, r3, r0
 1550              	.LVL232:
 1551 008c D8B2     		uxtb	r0, r3
 1552              	.LVL233:
 1553              	.L84:
1154:u8g2/csrc/u8g2_font.c ****   }
1155:u8g2/csrc/u8g2_font.c ****   else
1156:u8g2/csrc/u8g2_font.c ****   {
1157:u8g2/csrc/u8g2_font.c ****     w += dx;
1158:u8g2/csrc/u8g2_font.c ****   }
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 51


1159:u8g2/csrc/u8g2_font.c ****   
1160:u8g2/csrc/u8g2_font.c ****   
1161:u8g2/csrc/u8g2_font.c ****   return w;
1162:u8g2/csrc/u8g2_font.c **** 	
1163:u8g2/csrc/u8g2_font.c **** }
 1554              		.loc 1 1163 0
 1555 008e 04B0     		add	sp, sp, #16
 1556              	.LCFI16:
 1557              		.cfi_remember_state
 1558              		.cfi_def_cfa_offset 16
 1559              		@ sp needed
 1560 0090 70BD     		pop	{r4, r5, r6, pc}
 1561              	.LVL234:
 1562              	.L88:
 1563              	.LCFI17:
 1564              		.cfi_restore_state
1157:u8g2/csrc/u8g2_font.c ****   }
 1565              		.loc 1 1157 0
 1566 0092 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 1567 0096 3344     		add	r3, r3, r6
 1568 0098 D8B2     		uxtb	r0, r3
 1569              	.LVL235:
 1570 009a F8E7     		b	.L84
 1571              	.LVL236:
 1572              	.L89:
1116:u8g2/csrc/u8g2_font.c ****   
 1573              		.loc 1 1116 0
 1574 009c 0020     		movs	r0, #0
 1575              	.LVL237:
 1576 009e F6E7     		b	.L84
 1577              		.cfi_endproc
 1578              	.LFE43:
 1580              		.section	.text.u8g2_IsGlyph,"ax",%progbits
 1581              		.align	1
 1582              		.global	u8g2_IsGlyph
 1583              		.syntax unified
 1584              		.thumb
 1585              		.thumb_func
 1586              		.fpu softvfp
 1588              	u8g2_IsGlyph:
 1589              	.LFB18:
 681:u8g2/csrc/u8g2_font.c ****   /* updated to new code */
 1590              		.loc 1 681 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 1594              	.LVL238:
 1595 0000 08B5     		push	{r3, lr}
 1596              	.LCFI18:
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 3, -8
 1599              		.cfi_offset 14, -4
 683:u8g2/csrc/u8g2_font.c ****     return 1;
 1600              		.loc 1 683 0
 1601 0002 FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1602              	.LVL239:
 1603 0006 08B1     		cbz	r0, .L93
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 52


 684:u8g2/csrc/u8g2_font.c ****   return 0;
 1604              		.loc 1 684 0
 1605 0008 0120     		movs	r0, #1
 1606 000a 08BD     		pop	{r3, pc}
 1607              	.L93:
 685:u8g2/csrc/u8g2_font.c **** }
 1608              		.loc 1 685 0
 1609 000c 0020     		movs	r0, #0
 686:u8g2/csrc/u8g2_font.c **** 
 1610              		.loc 1 686 0
 1611 000e 08BD     		pop	{r3, pc}
 1612              		.cfi_endproc
 1613              	.LFE18:
 1615              		.section	.text.u8g2_GetGlyphWidth,"ax",%progbits
 1616              		.align	1
 1617              		.global	u8g2_GetGlyphWidth
 1618              		.syntax unified
 1619              		.thumb
 1620              		.thumb_func
 1621              		.fpu softvfp
 1623              	u8g2_GetGlyphWidth:
 1624              	.LFB19:
 690:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
 1625              		.loc 1 690 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 1629              	.LVL240:
 1630 0000 38B5     		push	{r3, r4, r5, lr}
 1631              	.LCFI19:
 1632              		.cfi_def_cfa_offset 16
 1633              		.cfi_offset 3, -16
 1634              		.cfi_offset 4, -12
 1635              		.cfi_offset 5, -8
 1636              		.cfi_offset 14, -4
 1637 0002 0446     		mov	r4, r0
 691:u8g2/csrc/u8g2_font.c ****   if ( glyph_data == NULL )
 1638              		.loc 1 691 0
 1639 0004 FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1640              	.LVL241:
 692:u8g2/csrc/u8g2_font.c ****     return 0; 
 1641              		.loc 1 692 0
 1642 0008 B8B1     		cbz	r0, .L97
 1643 000a 0146     		mov	r1, r0
 695:u8g2/csrc/u8g2_font.c ****   u8g2->glyph_x_offset = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bit
 1644              		.loc 1 695 0
 1645 000c 2046     		mov	r0, r4
 1646              	.LVL242:
 1647 000e FFF7FEFF 		bl	u8g2_font_setup_decode
 1648              	.LVL243:
 696:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
 1649              		.loc 1 696 0
 1650 0012 04F15005 		add	r5, r4, #80
 1651 0016 94F86610 		ldrb	r1, [r4, #102]	@ zero_extendqisi2
 1652 001a 2846     		mov	r0, r5
 1653 001c FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1654              	.LVL244:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 53


 1655 0020 84F87B00 		strb	r0, [r4, #123]
 697:u8g2/csrc/u8g2_font.c ****   
 1656              		.loc 1 697 0
 1657 0024 94F86710 		ldrb	r1, [r4, #103]	@ zero_extendqisi2
 1658 0028 2846     		mov	r0, r5
 1659 002a FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1660              	.LVL245:
 701:u8g2/csrc/u8g2_font.c **** }
 1661              		.loc 1 701 0
 1662 002e 94F86810 		ldrb	r1, [r4, #104]	@ zero_extendqisi2
 1663 0032 2846     		mov	r0, r5
 1664 0034 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1665              	.LVL246:
 1666 0038 38BD     		pop	{r3, r4, r5, pc}
 1667              	.LVL247:
 1668              	.L97:
 693:u8g2/csrc/u8g2_font.c ****   
 1669              		.loc 1 693 0
 1670 003a 0020     		movs	r0, #0
 1671              	.LVL248:
 702:u8g2/csrc/u8g2_font.c **** 
 1672              		.loc 1 702 0
 1673 003c 38BD     		pop	{r3, r4, r5, pc}
 1674              		.cfi_endproc
 1675              	.LFE19:
 1677              		.section	.text.u8g2_string_width,"ax",%progbits
 1678              		.align	1
 1679              		.syntax unified
 1680              		.thumb
 1681              		.thumb_func
 1682              		.fpu softvfp
 1684              	u8g2_string_width:
 1685              	.LFB40:
1033:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 1686              		.loc 1 1033 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 0
 1689              		@ frame_needed = 0, uses_anonymous_args = 0
 1690              	.LVL249:
 1691 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1692              	.LCFI20:
 1693              		.cfi_def_cfa_offset 24
 1694              		.cfi_offset 3, -24
 1695              		.cfi_offset 4, -20
 1696              		.cfi_offset 5, -16
 1697              		.cfi_offset 6, -12
 1698              		.cfi_offset 7, -8
 1699              		.cfi_offset 14, -4
 1700 0002 0546     		mov	r5, r0
 1701 0004 0C46     		mov	r4, r1
1037:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 1702              		.loc 1 1037 0
 1703 0006 0026     		movs	r6, #0
 1704 0008 80F85860 		strb	r6, [r0, #88]
1038:u8g2/csrc/u8g2_font.c ****   
 1705              		.loc 1 1038 0
 1706 000c FFF7FEFF 		bl	u8x8_utf8_init
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 54


 1707              	.LVL250:
1042:u8g2/csrc/u8g2_font.c **** 
 1708              		.loc 1 1042 0
 1709 0010 3746     		mov	r7, r6
 1710              	.LVL251:
 1711              	.L100:
1048:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 1712              		.loc 1 1048 0
 1713 0012 6B68     		ldr	r3, [r5, #4]
 1714 0014 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1715 0016 2846     		mov	r0, r5
 1716 0018 9847     		blx	r3
 1717              	.LVL252:
1049:u8g2/csrc/u8g2_font.c ****       break;
 1718              		.loc 1 1049 0
 1719 001a 4FF6FF73 		movw	r3, #65535
 1720 001e 9842     		cmp	r0, r3
 1721 0020 0CD0     		beq	.L101
1051:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 1722              		.loc 1 1051 0
 1723 0022 0134     		adds	r4, r4, #1
 1724              	.LVL253:
1052:u8g2/csrc/u8g2_font.c ****     {
 1725              		.loc 1 1052 0
 1726 0024 4FF6FE73 		movw	r3, #65534
 1727 0028 9842     		cmp	r0, r3
 1728 002a F2D0     		beq	.L100
1054:u8g2/csrc/u8g2_font.c ****       w += dx;
 1729              		.loc 1 1054 0
 1730 002c 0146     		mov	r1, r0
 1731 002e 2846     		mov	r0, r5
 1732              	.LVL254:
 1733 0030 FFF7FEFF 		bl	u8g2_GetGlyphWidth
 1734              	.LVL255:
 1735 0034 C7B2     		uxtb	r7, r0
 1736              	.LVL256:
1055:u8g2/csrc/u8g2_font.c ****     }
 1737              		.loc 1 1055 0
 1738 0036 3E44     		add	r6, r6, r7
 1739              	.LVL257:
 1740 0038 F6B2     		uxtb	r6, r6
 1741              	.LVL258:
 1742 003a EAE7     		b	.L100
 1743              	.LVL259:
 1744              	.L101:
1060:u8g2/csrc/u8g2_font.c ****   {
 1745              		.loc 1 1060 0
 1746 003c 95F95830 		ldrsb	r3, [r5, #88]
 1747 0040 43B1     		cbz	r3, .L103
1062:u8g2/csrc/u8g2_font.c ****     w += u8g2->font_decode.glyph_width;  /* the real pixel width of the glyph, sideeffect of GetGly
 1748              		.loc 1 1062 0
 1749 0042 F61B     		subs	r6, r6, r7
 1750              	.LVL260:
 1751 0044 F6B2     		uxtb	r6, r6
 1752              	.LVL261:
1063:u8g2/csrc/u8g2_font.c ****     /* issue #46: we have to add the x offset also */
 1753              		.loc 1 1063 0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 55


 1754 0046 DBB2     		uxtb	r3, r3
 1755 0048 1E44     		add	r6, r6, r3
 1756              	.LVL262:
 1757 004a F6B2     		uxtb	r6, r6
 1758              	.LVL263:
1065:u8g2/csrc/u8g2_font.c ****   }
 1759              		.loc 1 1065 0
 1760 004c 95F87B30 		ldrb	r3, [r5, #123]	@ zero_extendqisi2
 1761 0050 1E44     		add	r6, r6, r3
 1762              	.LVL264:
 1763 0052 F6B2     		uxtb	r6, r6
 1764              	.LVL265:
 1765              	.L103:
1070:u8g2/csrc/u8g2_font.c **** 
 1766              		.loc 1 1070 0
 1767 0054 3046     		mov	r0, r6
 1768              	.LVL266:
 1769 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1770              		.cfi_endproc
 1771              	.LFE40:
 1773              		.section	.text.u8g2_SetFontMode,"ax",%progbits
 1774              		.align	1
 1775              		.global	u8g2_SetFontMode
 1776              		.syntax unified
 1777              		.thumb
 1778              		.thumb_func
 1779              		.fpu softvfp
 1781              	u8g2_SetFontMode:
 1782              	.LFB20:
 713:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
 1783              		.loc 1 713 0
 1784              		.cfi_startproc
 1785              		@ args = 0, pretend = 0, frame = 0
 1786              		@ frame_needed = 0, uses_anonymous_args = 0
 1787              		@ link register save eliminated.
 1788              	.LVL267:
 714:u8g2/csrc/u8g2_font.c **** }
 1789              		.loc 1 714 0
 1790 0000 80F85B10 		strb	r1, [r0, #91]
 1791 0004 7047     		bx	lr
 1792              		.cfi_endproc
 1793              	.LFE20:
 1795              		.section	.text.u8g2_DrawGlyph,"ax",%progbits
 1796              		.align	1
 1797              		.global	u8g2_DrawGlyph
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1801              		.fpu softvfp
 1803              	u8g2_DrawGlyph:
 1804              	.LFB21:
 718:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 1805              		.loc 1 718 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 0
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              	.LVL268:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 56


 1810 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1811              	.LCFI21:
 1812              		.cfi_def_cfa_offset 24
 1813              		.cfi_offset 3, -24
 1814              		.cfi_offset 4, -20
 1815              		.cfi_offset 5, -16
 1816              		.cfi_offset 6, -12
 1817              		.cfi_offset 7, -8
 1818              		.cfi_offset 14, -4
 1819 0002 0446     		mov	r4, r0
 1820 0004 0D46     		mov	r5, r1
 1821 0006 1646     		mov	r6, r2
 1822 0008 1F46     		mov	r7, r3
 720:u8g2/csrc/u8g2_font.c ****   {
 1823              		.loc 1 720 0
 1824 000a 90F85E30 		ldrb	r3, [r0, #94]	@ zero_extendqisi2
 1825              	.LVL269:
 1826 000e 032B     		cmp	r3, #3
 1827 0010 07D8     		bhi	.L107
 1828 0012 DFE803F0 		tbb	[pc, r3]
 1829              	.LVL270:
 1830              	.L109:
 1831 0016 02       		.byte	(.L108-.L109)/2
 1832 0017 0D       		.byte	(.L110-.L109)/2
 1833 0018 12       		.byte	(.L111-.L109)/2
 1834 0019 17       		.byte	(.L112-.L109)/2
 1835              		.p2align 1
 1836              	.L108:
 723:u8g2/csrc/u8g2_font.c ****       break;
 1837              		.loc 1 723 0
 1838 001a C36C     		ldr	r3, [r0, #76]
 1839 001c 9847     		blx	r3
 1840              	.LVL271:
 1841 001e 0644     		add	r6, r6, r0
 1842 0020 F6B2     		uxtb	r6, r6
 1843              	.LVL272:
 1844              	.L107:
 738:u8g2/csrc/u8g2_font.c **** }
 1845              		.loc 1 738 0
 1846 0022 3B46     		mov	r3, r7
 1847 0024 3246     		mov	r2, r6
 1848 0026 2946     		mov	r1, r5
 1849 0028 2046     		mov	r0, r4
 1850 002a FFF7FEFF 		bl	u8g2_font_draw_glyph
 1851              	.LVL273:
 739:u8g2/csrc/u8g2_font.c **** 
 1852              		.loc 1 739 0
 1853 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1854              	.LVL274:
 1855              	.L110:
 726:u8g2/csrc/u8g2_font.c ****       break;
 1856              		.loc 1 726 0
 1857 0030 C36C     		ldr	r3, [r0, #76]
 1858 0032 9847     		blx	r3
 1859              	.LVL275:
 1860 0034 2D1A     		subs	r5, r5, r0
 1861 0036 EDB2     		uxtb	r5, r5
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 57


 1862              	.LVL276:
 727:u8g2/csrc/u8g2_font.c ****     case 2:
 1863              		.loc 1 727 0
 1864 0038 F3E7     		b	.L107
 1865              	.LVL277:
 1866              	.L111:
 729:u8g2/csrc/u8g2_font.c ****       break;
 1867              		.loc 1 729 0
 1868 003a C36C     		ldr	r3, [r0, #76]
 1869 003c 9847     		blx	r3
 1870              	.LVL278:
 1871 003e 361A     		subs	r6, r6, r0
 1872 0040 F6B2     		uxtb	r6, r6
 1873              	.LVL279:
 730:u8g2/csrc/u8g2_font.c ****     case 3:
 1874              		.loc 1 730 0
 1875 0042 EEE7     		b	.L107
 1876              	.LVL280:
 1877              	.L112:
 732:u8g2/csrc/u8g2_font.c ****       break;
 1878              		.loc 1 732 0
 1879 0044 C36C     		ldr	r3, [r0, #76]
 1880 0046 9847     		blx	r3
 1881              	.LVL281:
 1882 0048 0544     		add	r5, r5, r0
 1883 004a EDB2     		uxtb	r5, r5
 1884              	.LVL282:
 733:u8g2/csrc/u8g2_font.c ****   }
 1885              		.loc 1 733 0
 1886 004c E9E7     		b	.L107
 1887              		.cfi_endproc
 1888              	.LFE21:
 1890              		.section	.text.u8g2_draw_string,"ax",%progbits
 1891              		.align	1
 1892              		.syntax unified
 1893              		.thumb
 1894              		.thumb_func
 1895              		.fpu softvfp
 1897              	u8g2_draw_string:
 1898              	.LFB22:
 743:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 1899              		.loc 1 743 0
 1900              		.cfi_startproc
 1901              		@ args = 0, pretend = 0, frame = 0
 1902              		@ frame_needed = 0, uses_anonymous_args = 0
 1903              	.LVL283:
 1904 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1905              	.LCFI22:
 1906              		.cfi_def_cfa_offset 24
 1907              		.cfi_offset 4, -24
 1908              		.cfi_offset 5, -20
 1909              		.cfi_offset 6, -16
 1910              		.cfi_offset 7, -12
 1911              		.cfi_offset 8, -8
 1912              		.cfi_offset 14, -4
 1913 0004 0446     		mov	r4, r0
 1914 0006 0F46     		mov	r7, r1
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 58


 1915 0008 1646     		mov	r6, r2
 1916 000a 1D46     		mov	r5, r3
 746:u8g2/csrc/u8g2_font.c ****   sum = 0;
 1917              		.loc 1 746 0
 1918 000c FFF7FEFF 		bl	u8x8_utf8_init
 1919              	.LVL284:
 747:u8g2/csrc/u8g2_font.c ****   for(;;)
 1920              		.loc 1 747 0
 1921 0010 4FF00008 		mov	r8, #0
 1922 0014 04E0     		b	.L115
 1923              	.LVL285:
 1924              	.L119:
 762:u8g2/csrc/u8g2_font.c **** 	  break;
 1925              		.loc 1 762 0
 1926 0016 0744     		add	r7, r7, r0
 1927              	.LVL286:
 1928 0018 FFB2     		uxtb	r7, r7
 1929              	.LVL287:
 1930              	.L118:
 778:u8g2/csrc/u8g2_font.c ****     }
 1931              		.loc 1 778 0
 1932 001a 4044     		add	r0, r0, r8
 1933              	.LVL288:
 1934 001c 5FFA80F8 		uxtb	r8, r0
 1935              	.LVL289:
 1936              	.L115:
 750:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 1937              		.loc 1 750 0
 1938 0020 6368     		ldr	r3, [r4, #4]
 1939 0022 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1940 0024 2046     		mov	r0, r4
 1941 0026 9847     		blx	r3
 1942              	.LVL290:
 751:u8g2/csrc/u8g2_font.c ****       break;
 1943              		.loc 1 751 0
 1944 0028 4FF6FF73 		movw	r3, #65535
 1945 002c 9842     		cmp	r0, r3
 1946 002e 22D0     		beq	.L116
 753:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 1947              		.loc 1 753 0
 1948 0030 0135     		adds	r5, r5, #1
 1949              	.LVL291:
 754:u8g2/csrc/u8g2_font.c ****     {
 1950              		.loc 1 754 0
 1951 0032 4FF6FE73 		movw	r3, #65534
 1952 0036 9842     		cmp	r0, r3
 1953 0038 F2D0     		beq	.L115
 756:u8g2/csrc/u8g2_font.c ****     
 1954              		.loc 1 756 0
 1955 003a 0346     		mov	r3, r0
 1956 003c 3246     		mov	r2, r6
 1957 003e 3946     		mov	r1, r7
 1958 0040 2046     		mov	r0, r4
 1959              	.LVL292:
 1960 0042 FFF7FEFF 		bl	u8g2_DrawGlyph
 1961              	.LVL293:
 759:u8g2/csrc/u8g2_font.c ****       {
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 59


 1962              		.loc 1 759 0
 1963 0046 94F85E30 		ldrb	r3, [r4, #94]	@ zero_extendqisi2
 1964 004a 032B     		cmp	r3, #3
 1965 004c E5D8     		bhi	.L118
 1966 004e 01A2     		adr	r2, .L120
 1967 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1968              		.p2align 2
 1969              	.L120:
 1970 0054 17000000 		.word	.L119+1
 1971 0058 65000000 		.word	.L121+1
 1972 005c 6B000000 		.word	.L122+1
 1973 0060 71000000 		.word	.L123+1
 1974              		.p2align 1
 1975              	.L121:
 765:u8g2/csrc/u8g2_font.c **** 	  break;
 1976              		.loc 1 765 0
 1977 0064 0644     		add	r6, r6, r0
 1978              	.LVL294:
 1979 0066 F6B2     		uxtb	r6, r6
 1980              	.LVL295:
 766:u8g2/csrc/u8g2_font.c **** 	case 2:
 1981              		.loc 1 766 0
 1982 0068 D7E7     		b	.L118
 1983              	.L122:
 768:u8g2/csrc/u8g2_font.c **** 	  break;
 1984              		.loc 1 768 0
 1985 006a 3F1A     		subs	r7, r7, r0
 1986              	.LVL296:
 1987 006c FFB2     		uxtb	r7, r7
 1988              	.LVL297:
 769:u8g2/csrc/u8g2_font.c **** 	case 3:
 1989              		.loc 1 769 0
 1990 006e D4E7     		b	.L118
 1991              	.L123:
 771:u8g2/csrc/u8g2_font.c **** 	  break;
 1992              		.loc 1 771 0
 1993 0070 361A     		subs	r6, r6, r0
 1994              	.LVL298:
 1995 0072 F6B2     		uxtb	r6, r6
 1996              	.LVL299:
 772:u8g2/csrc/u8g2_font.c ****       }
 1997              		.loc 1 772 0
 1998 0074 D1E7     		b	.L118
 1999              	.LVL300:
 2000              	.L116:
 782:u8g2/csrc/u8g2_font.c **** 
 2001              		.loc 1 782 0
 2002 0076 4046     		mov	r0, r8
 2003              	.LVL301:
 2004 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2005              		.cfi_endproc
 2006              	.LFE22:
 2008              		.section	.text.u8g2_DrawStr,"ax",%progbits
 2009              		.align	1
 2010              		.global	u8g2_DrawStr
 2011              		.syntax unified
 2012              		.thumb
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 60


 2013              		.thumb_func
 2014              		.fpu softvfp
 2016              	u8g2_DrawStr:
 2017              	.LFB23:
 785:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 2018              		.loc 1 785 0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 0, uses_anonymous_args = 0
 2022              	.LVL302:
 2023 0000 10B5     		push	{r4, lr}
 2024              	.LCFI23:
 2025              		.cfi_def_cfa_offset 8
 2026              		.cfi_offset 4, -8
 2027              		.cfi_offset 14, -4
 786:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 2028              		.loc 1 786 0
 2029 0002 024C     		ldr	r4, .L127
 2030 0004 4460     		str	r4, [r0, #4]
 787:u8g2/csrc/u8g2_font.c **** }
 2031              		.loc 1 787 0
 2032 0006 FFF7FEFF 		bl	u8g2_draw_string
 2033              	.LVL303:
 788:u8g2/csrc/u8g2_font.c **** 
 2034              		.loc 1 788 0
 2035 000a 10BD     		pop	{r4, pc}
 2036              	.L128:
 2037              		.align	2
 2038              	.L127:
 2039 000c 00000000 		.word	u8x8_ascii_next
 2040              		.cfi_endproc
 2041              	.LFE23:
 2043              		.section	.text.u8g2_DrawUTF8,"ax",%progbits
 2044              		.align	1
 2045              		.global	u8g2_DrawUTF8
 2046              		.syntax unified
 2047              		.thumb
 2048              		.thumb_func
 2049              		.fpu softvfp
 2051              	u8g2_DrawUTF8:
 2052              	.LFB24:
 801:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2053              		.loc 1 801 0
 2054              		.cfi_startproc
 2055              		@ args = 0, pretend = 0, frame = 0
 2056              		@ frame_needed = 0, uses_anonymous_args = 0
 2057              	.LVL304:
 2058 0000 10B5     		push	{r4, lr}
 2059              	.LCFI24:
 2060              		.cfi_def_cfa_offset 8
 2061              		.cfi_offset 4, -8
 2062              		.cfi_offset 14, -4
 802:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 2063              		.loc 1 802 0
 2064 0002 024C     		ldr	r4, .L131
 2065 0004 4460     		str	r4, [r0, #4]
 803:u8g2/csrc/u8g2_font.c **** }
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 61


 2066              		.loc 1 803 0
 2067 0006 FFF7FEFF 		bl	u8g2_draw_string
 2068              	.LVL305:
 804:u8g2/csrc/u8g2_font.c **** 
 2069              		.loc 1 804 0
 2070 000a 10BD     		pop	{r4, pc}
 2071              	.L132:
 2072              		.align	2
 2073              	.L131:
 2074 000c 00000000 		.word	u8x8_utf8_next
 2075              		.cfi_endproc
 2076              	.LFE24:
 2078              		.section	.text.u8g2_DrawExtendedUTF8,"ax",%progbits
 2079              		.align	1
 2080              		.global	u8g2_DrawExtendedUTF8
 2081              		.syntax unified
 2082              		.thumb
 2083              		.thumb_func
 2084              		.fpu softvfp
 2086              	u8g2_DrawExtendedUTF8:
 2087              	.LFB25:
 809:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2088              		.loc 1 809 0
 2089              		.cfi_startproc
 2090              		@ args = 8, pretend = 0, frame = 8
 2091              		@ frame_needed = 0, uses_anonymous_args = 0
 2092              	.LVL306:
 2093 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2094              	.LCFI25:
 2095              		.cfi_def_cfa_offset 36
 2096              		.cfi_offset 4, -36
 2097              		.cfi_offset 5, -32
 2098              		.cfi_offset 6, -28
 2099              		.cfi_offset 7, -24
 2100              		.cfi_offset 8, -20
 2101              		.cfi_offset 9, -16
 2102              		.cfi_offset 10, -12
 2103              		.cfi_offset 11, -8
 2104              		.cfi_offset 14, -4
 2105 0004 83B0     		sub	sp, sp, #12
 2106              	.LCFI26:
 2107              		.cfi_def_cfa_offset 48
 2108 0006 8146     		mov	r9, r0
 2109 0008 0F46     		mov	r7, r1
 2110 000a 0192     		str	r2, [sp, #4]
 2111 000c 9B46     		mov	fp, r3
 2112 000e DDF834A0 		ldr	r10, [sp, #52]
 810:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 2113              		.loc 1 810 0
 2114 0012 264B     		ldr	r3, .L141
 2115              	.LVL307:
 2116 0014 4360     		str	r3, [r0, #4]
 2117              	.LVL308:
 814:u8g2/csrc/u8g2_font.c ****   sum = 0;
 2118              		.loc 1 814 0
 2119 0016 FFF7FEFF 		bl	u8x8_utf8_init
 2120              	.LVL309:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 62


 815:u8g2/csrc/u8g2_font.c ****   for(;;)
 2121              		.loc 1 815 0
 2122 001a 0025     		movs	r5, #0
 811:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 2123              		.loc 1 811 0
 2124 001c 4FF6FF78 		movw	r8, #65535
 2125 0020 0CE0     		b	.L134
 2126              	.LVL310:
 2127              	.L137:
 834:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2128              		.loc 1 834 0
 2129 0022 2346     		mov	r3, r4
 2130 0024 4246     		mov	r2, r8
 2131 0026 0C99     		ldr	r1, [sp, #48]
 2132 0028 4846     		mov	r0, r9
 2133 002a FFF7FEFF 		bl	u8g2_GetKerning
 2134              	.LVL311:
 2135 002e 8046     		mov	r8, r0
 2136              	.LVL312:
 835:u8g2/csrc/u8g2_font.c ****       }
 2137              		.loc 1 835 0
 2138 0030 361A     		subs	r6, r6, r0
 2139              	.LVL313:
 2140 0032 F6B2     		uxtb	r6, r6
 2141              	.LVL314:
 2142 0034 26E0     		b	.L138
 2143              	.LVL315:
 2144              	.L139:
 849:u8g2/csrc/u8g2_font.c ****     }
 2145              		.loc 1 849 0
 2146 0036 3544     		add	r5, r5, r6
 2147              	.LVL316:
 2148 0038 EDB2     		uxtb	r5, r5
 2149              	.LVL317:
 837:u8g2/csrc/u8g2_font.c **** 
 2150              		.loc 1 837 0
 2151 003a A046     		mov	r8, r4
 2152              	.LVL318:
 2153              	.L134:
 818:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 2154              		.loc 1 818 0
 2155 003c D9F80430 		ldr	r3, [r9, #4]
 2156 0040 9AF80010 		ldrb	r1, [r10]	@ zero_extendqisi2
 2157 0044 4846     		mov	r0, r9
 2158 0046 9847     		blx	r3
 2159              	.LVL319:
 2160 0048 0446     		mov	r4, r0
 2161              	.LVL320:
 819:u8g2/csrc/u8g2_font.c ****       break;
 2162              		.loc 1 819 0
 2163 004a 4FF6FF73 		movw	r3, #65535
 2164 004e 9842     		cmp	r0, r3
 2165 0050 27D0     		beq	.L135
 821:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 2166              		.loc 1 821 0
 2167 0052 0AF1010A 		add	r10, r10, #1
 2168              	.LVL321:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 63


 822:u8g2/csrc/u8g2_font.c ****     {
 2169              		.loc 1 822 0
 2170 0056 4FF6FE73 		movw	r3, #65534
 2171 005a 9842     		cmp	r0, r3
 2172 005c EED0     		beq	.L134
 824:u8g2/csrc/u8g2_font.c **** 	    
 2173              		.loc 1 824 0
 2174 005e 0146     		mov	r1, r0
 2175 0060 4846     		mov	r0, r9
 2176              	.LVL322:
 2177 0062 FFF7FEFF 		bl	u8g2_GetGlyphWidth
 2178              	.LVL323:
 2179 0066 C6B2     		uxtb	r6, r0
 2180              	.LVL324:
 826:u8g2/csrc/u8g2_font.c ****       {
 2181              		.loc 1 826 0
 2182 0068 BBF1000F 		cmp	fp, #0
 2183 006c D9D0     		beq	.L137
 828:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2184              		.loc 1 828 0
 2185 006e 4346     		mov	r3, r8
 2186 0070 2246     		mov	r2, r4
 2187 0072 0C99     		ldr	r1, [sp, #48]
 2188 0074 4846     		mov	r0, r9
 2189 0076 FFF7FEFF 		bl	u8g2_GetKerning
 2190              	.LVL325:
 2191 007a 8046     		mov	r8, r0
 2192              	.LVL326:
 829:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 2193              		.loc 1 829 0
 2194 007c 361A     		subs	r6, r6, r0
 2195              	.LVL327:
 2196 007e F6B2     		uxtb	r6, r6
 2197              	.LVL328:
 830:u8g2/csrc/u8g2_font.c ****       }
 2198              		.loc 1 830 0
 2199 0080 BF1B     		subs	r7, r7, r6
 2200              	.LVL329:
 2201 0082 FFB2     		uxtb	r7, r7
 2202              	.LVL330:
 2203              	.L138:
 839:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 2204              		.loc 1 839 0
 2205 0084 2346     		mov	r3, r4
 2206 0086 019A     		ldr	r2, [sp, #4]
 2207 0088 3946     		mov	r1, r7
 2208 008a 4846     		mov	r0, r9
 2209 008c FFF7FEFF 		bl	u8g2_DrawGlyph
 2210              	.LVL331:
 840:u8g2/csrc/u8g2_font.c ****       {
 2211              		.loc 1 840 0
 2212 0090 BBF1000F 		cmp	fp, #0
 2213 0094 CFD1     		bne	.L139
 845:u8g2/csrc/u8g2_font.c **** 	x -= k;
 2214              		.loc 1 845 0
 2215 0096 3744     		add	r7, r7, r6
 2216              	.LVL332:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 64


 2217 0098 FFB2     		uxtb	r7, r7
 2218              	.LVL333:
 846:u8g2/csrc/u8g2_font.c ****       }
 2219              		.loc 1 846 0
 2220 009a A7EB0807 		sub	r7, r7, r8
 2221              	.LVL334:
 2222 009e FFB2     		uxtb	r7, r7
 2223              	.LVL335:
 2224 00a0 C9E7     		b	.L139
 2225              	.LVL336:
 2226              	.L135:
 853:u8g2/csrc/u8g2_font.c **** 
 2227              		.loc 1 853 0
 2228 00a2 2846     		mov	r0, r5
 2229              	.LVL337:
 2230 00a4 03B0     		add	sp, sp, #12
 2231              	.LCFI27:
 2232              		.cfi_def_cfa_offset 36
 2233              		@ sp needed
 2234 00a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2235              	.LVL338:
 2236              	.L142:
 2237 00aa 00BF     		.align	2
 2238              	.L141:
 2239 00ac 00000000 		.word	u8x8_utf8_next
 2240              		.cfi_endproc
 2241              	.LFE25:
 2243              		.section	.text.u8g2_DrawExtUTF8,"ax",%progbits
 2244              		.align	1
 2245              		.global	u8g2_DrawExtUTF8
 2246              		.syntax unified
 2247              		.thumb
 2248              		.thumb_func
 2249              		.fpu softvfp
 2251              	u8g2_DrawExtUTF8:
 2252              	.LFB26:
 856:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2253              		.loc 1 856 0
 2254              		.cfi_startproc
 2255              		@ args = 8, pretend = 0, frame = 8
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              	.LVL339:
 2258 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2259              	.LCFI28:
 2260              		.cfi_def_cfa_offset 36
 2261              		.cfi_offset 4, -36
 2262              		.cfi_offset 5, -32
 2263              		.cfi_offset 6, -28
 2264              		.cfi_offset 7, -24
 2265              		.cfi_offset 8, -20
 2266              		.cfi_offset 9, -16
 2267              		.cfi_offset 10, -12
 2268              		.cfi_offset 11, -8
 2269              		.cfi_offset 14, -4
 2270 0004 83B0     		sub	sp, sp, #12
 2271              	.LCFI29:
 2272              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 65


 2273 0006 0646     		mov	r6, r0
 2274 0008 8846     		mov	r8, r1
 2275 000a 0192     		str	r2, [sp, #4]
 2276 000c 9B46     		mov	fp, r3
 2277 000e 0D9F     		ldr	r7, [sp, #52]
 857:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 2278              		.loc 1 857 0
 2279 0010 244B     		ldr	r3, .L151
 2280              	.LVL340:
 2281 0012 4360     		str	r3, [r0, #4]
 2282              	.LVL341:
 861:u8g2/csrc/u8g2_font.c ****   sum = 0;
 2283              		.loc 1 861 0
 2284 0014 FFF7FEFF 		bl	u8x8_utf8_init
 2285              	.LVL342:
 862:u8g2/csrc/u8g2_font.c ****   for(;;)
 2286              		.loc 1 862 0
 2287 0018 4FF00009 		mov	r9, #0
 858:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 2288              		.loc 1 858 0
 2289 001c 4FF6FF7A 		movw	r10, #65535
 2290 0020 12E0     		b	.L144
 2291              	.LVL343:
 2292              	.L147:
 881:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2293              		.loc 1 881 0
 2294 0022 2346     		mov	r3, r4
 2295 0024 5246     		mov	r2, r10
 2296 0026 0C99     		ldr	r1, [sp, #48]
 2297 0028 3046     		mov	r0, r6
 2298 002a FFF7FEFF 		bl	u8g2_GetKerningByTable
 2299              	.LVL344:
 882:u8g2/csrc/u8g2_font.c ****       }
 2300              		.loc 1 882 0
 2301 002e 2D1A     		subs	r5, r5, r0
 2302              	.LVL345:
 2303 0030 EDB2     		uxtb	r5, r5
 2304              	.LVL346:
 2305 0032 2BE0     		b	.L148
 2306              	.LVL347:
 2307              	.L149:
 893:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 2308              		.loc 1 893 0
 2309 0034 2346     		mov	r3, r4
 2310 0036 019A     		ldr	r2, [sp, #4]
 2311 0038 4146     		mov	r1, r8
 2312 003a 3046     		mov	r0, r6
 2313              	.LVL348:
 2314 003c FFF7FEFF 		bl	u8g2_DrawGlyph
 2315              	.LVL349:
 903:u8g2/csrc/u8g2_font.c ****     }
 2316              		.loc 1 903 0
 2317 0040 A944     		add	r9, r9, r5
 2318              	.LVL350:
 2319 0042 5FFA89F9 		uxtb	r9, r9
 2320              	.LVL351:
 884:u8g2/csrc/u8g2_font.c **** 
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 66


 2321              		.loc 1 884 0
 2322 0046 A246     		mov	r10, r4
 2323              	.LVL352:
 2324              	.L144:
 865:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 2325              		.loc 1 865 0
 2326 0048 7368     		ldr	r3, [r6, #4]
 2327 004a 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 2328 004c 3046     		mov	r0, r6
 2329 004e 9847     		blx	r3
 2330              	.LVL353:
 2331 0050 0446     		mov	r4, r0
 2332              	.LVL354:
 866:u8g2/csrc/u8g2_font.c ****       break;
 2333              		.loc 1 866 0
 2334 0052 4FF6FF73 		movw	r3, #65535
 2335 0056 9842     		cmp	r0, r3
 2336 0058 1FD0     		beq	.L145
 868:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 2337              		.loc 1 868 0
 2338 005a 0137     		adds	r7, r7, #1
 2339              	.LVL355:
 869:u8g2/csrc/u8g2_font.c ****     {
 2340              		.loc 1 869 0
 2341 005c 4FF6FE73 		movw	r3, #65534
 2342 0060 9842     		cmp	r0, r3
 2343 0062 F1D0     		beq	.L144
 871:u8g2/csrc/u8g2_font.c **** 	    
 2344              		.loc 1 871 0
 2345 0064 0146     		mov	r1, r0
 2346 0066 3046     		mov	r0, r6
 2347              	.LVL356:
 2348 0068 FFF7FEFF 		bl	u8g2_GetGlyphWidth
 2349              	.LVL357:
 2350 006c C5B2     		uxtb	r5, r0
 2351              	.LVL358:
 873:u8g2/csrc/u8g2_font.c ****       {
 2352              		.loc 1 873 0
 2353 006e BBF1000F 		cmp	fp, #0
 2354 0072 D6D0     		beq	.L147
 875:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2355              		.loc 1 875 0
 2356 0074 5346     		mov	r3, r10
 2357 0076 2246     		mov	r2, r4
 2358 0078 0C99     		ldr	r1, [sp, #48]
 2359 007a 3046     		mov	r0, r6
 2360 007c FFF7FEFF 		bl	u8g2_GetKerningByTable
 2361              	.LVL359:
 876:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 2362              		.loc 1 876 0
 2363 0080 2D1A     		subs	r5, r5, r0
 2364              	.LVL360:
 2365 0082 EDB2     		uxtb	r5, r5
 2366              	.LVL361:
 877:u8g2/csrc/u8g2_font.c ****       }
 2367              		.loc 1 877 0
 2368 0084 A8EB0508 		sub	r8, r8, r5
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 67


 2369              	.LVL362:
 2370 0088 5FFA88F8 		uxtb	r8, r8
 2371              	.LVL363:
 2372              	.L148:
 886:u8g2/csrc/u8g2_font.c ****       {
 2373              		.loc 1 886 0
 2374 008c BBF1000F 		cmp	fp, #0
 2375 0090 D0D1     		bne	.L149
 891:u8g2/csrc/u8g2_font.c ****       }
 2376              		.loc 1 891 0
 2377 0092 A844     		add	r8, r8, r5
 2378              	.LVL364:
 2379 0094 5FFA88F8 		uxtb	r8, r8
 2380              	.LVL365:
 2381 0098 CCE7     		b	.L149
 2382              	.LVL366:
 2383              	.L145:
 907:u8g2/csrc/u8g2_font.c **** 
 2384              		.loc 1 907 0
 2385 009a 4846     		mov	r0, r9
 2386              	.LVL367:
 2387 009c 03B0     		add	sp, sp, #12
 2388              	.LCFI30:
 2389              		.cfi_def_cfa_offset 36
 2390              		@ sp needed
 2391 009e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2392              	.LVL368:
 2393              	.L152:
 2394 00a2 00BF     		.align	2
 2395              	.L151:
 2396 00a4 00000000 		.word	u8x8_utf8_next
 2397              		.cfi_endproc
 2398              	.LFE26:
 2400              		.section	.text.u8g2_UpdateRefHeight,"ax",%progbits
 2401              		.align	1
 2402              		.global	u8g2_UpdateRefHeight
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu softvfp
 2408              	u8g2_UpdateRefHeight:
 2409              	.LFB27:
 916:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font == NULL )
 2410              		.loc 1 916 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414              		@ link register save eliminated.
 2415              	.LVL369:
 917:u8g2/csrc/u8g2_font.c ****     return;
 2416              		.loc 1 917 0
 2417 0000 836C     		ldr	r3, [r0, #72]
 2418 0002 F3B1     		cbz	r3, .L161
 919:u8g2/csrc/u8g2_font.c ****   u8g2->font_ref_descent = u8g2->font_info.descent_g;
 2419              		.loc 1 919 0
 2420 0004 90F96D10 		ldrsb	r1, [r0, #109]
 2421 0008 80F87910 		strb	r1, [r0, #121]
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 68


 920:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
 2422              		.loc 1 920 0
 2423 000c 90F96E20 		ldrsb	r2, [r0, #110]
 2424 0010 80F87A20 		strb	r2, [r0, #122]
 921:u8g2/csrc/u8g2_font.c ****   {
 2425              		.loc 1 921 0
 2426 0014 90F87830 		ldrb	r3, [r0, #120]	@ zero_extendqisi2
 2427 0018 9BB1     		cbz	r3, .L161
 924:u8g2/csrc/u8g2_font.c ****   {
 2428              		.loc 1 924 0
 2429 001a 012B     		cmp	r3, #1
 2430 001c 12D0     		beq	.L162
 916:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font == NULL )
 2431              		.loc 1 916 0
 2432 001e 30B4     		push	{r4, r5}
 2433              	.LCFI31:
 2434              		.cfi_def_cfa_offset 8
 2435              		.cfi_offset 4, -8
 2436              		.cfi_offset 5, -4
 933:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
 2437              		.loc 1 933 0
 2438 0020 90F96A30 		ldrsb	r3, [r0, #106]
 2439 0024 90F96C40 		ldrsb	r4, [r0, #108]
 2440 0028 1D19     		adds	r5, r3, r4
 2441 002a A942     		cmp	r1, r5
 2442 002c 04DA     		bge	.L157
 934:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
 2443              		.loc 1 934 0
 2444 002e DBB2     		uxtb	r3, r3
 2445 0030 E1B2     		uxtb	r1, r4
 2446 0032 0B44     		add	r3, r3, r1
 2447 0034 80F87930 		strb	r3, [r0, #121]
 2448              	.L157:
 935:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.y_offset;
 2449              		.loc 1 935 0
 2450 0038 A242     		cmp	r2, r4
 2451 003a 01DD     		ble	.L153
 936:u8g2/csrc/u8g2_font.c ****   }  
 2452              		.loc 1 936 0
 2453 003c 80F87A40 		strb	r4, [r0, #122]
 2454              	.L153:
 938:u8g2/csrc/u8g2_font.c **** 
 2455              		.loc 1 938 0
 2456 0040 30BC     		pop	{r4, r5}
 2457              	.LCFI32:
 2458              		.cfi_restore 5
 2459              		.cfi_restore 4
 2460              		.cfi_def_cfa_offset 0
 2461              	.L161:
 2462 0042 7047     		bx	lr
 2463              	.L162:
 926:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
 2464              		.loc 1 926 0
 2465 0044 90F96F30 		ldrsb	r3, [r0, #111]
 2466 0048 9942     		cmp	r1, r3
 2467 004a 01DA     		bge	.L156
 927:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 69


 2468              		.loc 1 927 0
 2469 004c 80F87930 		strb	r3, [r0, #121]
 2470              	.L156:
 928:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.descent_para;
 2471              		.loc 1 928 0
 2472 0050 90F97030 		ldrsb	r3, [r0, #112]
 2473 0054 9A42     		cmp	r2, r3
 2474 0056 F4DD     		ble	.L161
 929:u8g2/csrc/u8g2_font.c ****   }
 2475              		.loc 1 929 0
 2476 0058 80F87A30 		strb	r3, [r0, #122]
 2477 005c 7047     		bx	lr
 2478              		.cfi_endproc
 2479              	.LFE27:
 2481              		.section	.text.u8g2_SetFontRefHeightText,"ax",%progbits
 2482              		.align	1
 2483              		.global	u8g2_SetFontRefHeightText
 2484              		.syntax unified
 2485              		.thumb
 2486              		.thumb_func
 2487              		.fpu softvfp
 2489              	u8g2_SetFontRefHeightText:
 2490              	.LFB28:
 941:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_TEXT;
 2491              		.loc 1 941 0
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 0
 2494              		@ frame_needed = 0, uses_anonymous_args = 0
 2495              	.LVL370:
 2496 0000 08B5     		push	{r3, lr}
 2497              	.LCFI33:
 2498              		.cfi_def_cfa_offset 8
 2499              		.cfi_offset 3, -8
 2500              		.cfi_offset 14, -4
 942:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 2501              		.loc 1 942 0
 2502 0002 0022     		movs	r2, #0
 2503 0004 80F87820 		strb	r2, [r0, #120]
 943:u8g2/csrc/u8g2_font.c **** }
 2504              		.loc 1 943 0
 2505 0008 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2506              	.LVL371:
 2507 000c 08BD     		pop	{r3, pc}
 2508              		.cfi_endproc
 2509              	.LFE28:
 2511              		.section	.text.u8g2_SetFontRefHeightExtendedText,"ax",%progbits
 2512              		.align	1
 2513              		.global	u8g2_SetFontRefHeightExtendedText
 2514              		.syntax unified
 2515              		.thumb
 2516              		.thumb_func
 2517              		.fpu softvfp
 2519              	u8g2_SetFontRefHeightExtendedText:
 2520              	.LFB29:
 947:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_XTEXT;
 2521              		.loc 1 947 0
 2522              		.cfi_startproc
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 70


 2523              		@ args = 0, pretend = 0, frame = 0
 2524              		@ frame_needed = 0, uses_anonymous_args = 0
 2525              	.LVL372:
 2526 0000 08B5     		push	{r3, lr}
 2527              	.LCFI34:
 2528              		.cfi_def_cfa_offset 8
 2529              		.cfi_offset 3, -8
 2530              		.cfi_offset 14, -4
 948:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 2531              		.loc 1 948 0
 2532 0002 0123     		movs	r3, #1
 2533 0004 80F87830 		strb	r3, [r0, #120]
 949:u8g2/csrc/u8g2_font.c **** }
 2534              		.loc 1 949 0
 2535 0008 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2536              	.LVL373:
 2537 000c 08BD     		pop	{r3, pc}
 2538              		.cfi_endproc
 2539              	.LFE29:
 2541              		.section	.text.u8g2_SetFontRefHeightAll,"ax",%progbits
 2542              		.align	1
 2543              		.global	u8g2_SetFontRefHeightAll
 2544              		.syntax unified
 2545              		.thumb
 2546              		.thumb_func
 2547              		.fpu softvfp
 2549              	u8g2_SetFontRefHeightAll:
 2550              	.LFB30:
 953:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_ALL;
 2551              		.loc 1 953 0
 2552              		.cfi_startproc
 2553              		@ args = 0, pretend = 0, frame = 0
 2554              		@ frame_needed = 0, uses_anonymous_args = 0
 2555              	.LVL374:
 2556 0000 08B5     		push	{r3, lr}
 2557              	.LCFI35:
 2558              		.cfi_def_cfa_offset 8
 2559              		.cfi_offset 3, -8
 2560              		.cfi_offset 14, -4
 954:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 2561              		.loc 1 954 0
 2562 0002 0223     		movs	r3, #2
 2563 0004 80F87830 		strb	r3, [r0, #120]
 955:u8g2/csrc/u8g2_font.c **** }
 2564              		.loc 1 955 0
 2565 0008 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2566              	.LVL375:
 2567 000c 08BD     		pop	{r3, pc}
 2568              		.cfi_endproc
 2569              	.LFE30:
 2571              		.section	.text.u8g2_SetFontPosBaseline,"ax",%progbits
 2572              		.align	1
 2573              		.global	u8g2_SetFontPosBaseline
 2574              		.syntax unified
 2575              		.thumb
 2576              		.thumb_func
 2577              		.fpu softvfp
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 71


 2579              	u8g2_SetFontPosBaseline:
 2580              	.LFB32:
 967:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_font;
 2581              		.loc 1 967 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 0
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
 2585              		@ link register save eliminated.
 2586              	.LVL376:
 968:u8g2/csrc/u8g2_font.c **** }
 2587              		.loc 1 968 0
 2588 0000 014B     		ldr	r3, .L170
 2589 0002 C364     		str	r3, [r0, #76]
 2590 0004 7047     		bx	lr
 2591              	.L171:
 2592 0006 00BF     		.align	2
 2593              	.L170:
 2594 0008 00000000 		.word	u8g2_font_calc_vref_font
 2595              		.cfi_endproc
 2596              	.LFE32:
 2598              		.section	.text.u8g2_SetFontPosBottom,"ax",%progbits
 2599              		.align	1
 2600              		.global	u8g2_SetFontPosBottom
 2601              		.syntax unified
 2602              		.thumb
 2603              		.thumb_func
 2604              		.fpu softvfp
 2606              	u8g2_SetFontPosBottom:
 2607              	.LFB34:
 978:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_bottom;
 2608              		.loc 1 978 0
 2609              		.cfi_startproc
 2610              		@ args = 0, pretend = 0, frame = 0
 2611              		@ frame_needed = 0, uses_anonymous_args = 0
 2612              		@ link register save eliminated.
 2613              	.LVL377:
 979:u8g2/csrc/u8g2_font.c **** }
 2614              		.loc 1 979 0
 2615 0000 014B     		ldr	r3, .L173
 2616 0002 C364     		str	r3, [r0, #76]
 2617 0004 7047     		bx	lr
 2618              	.L174:
 2619 0006 00BF     		.align	2
 2620              	.L173:
 2621 0008 00000000 		.word	u8g2_font_calc_vref_bottom
 2622              		.cfi_endproc
 2623              	.LFE34:
 2625              		.section	.text.u8g2_SetFontPosTop,"ax",%progbits
 2626              		.align	1
 2627              		.global	u8g2_SetFontPosTop
 2628              		.syntax unified
 2629              		.thumb
 2630              		.thumb_func
 2631              		.fpu softvfp
 2633              	u8g2_SetFontPosTop:
 2634              	.LFB36:
 992:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_top;
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 72


 2635              		.loc 1 992 0
 2636              		.cfi_startproc
 2637              		@ args = 0, pretend = 0, frame = 0
 2638              		@ frame_needed = 0, uses_anonymous_args = 0
 2639              		@ link register save eliminated.
 2640              	.LVL378:
 993:u8g2/csrc/u8g2_font.c **** }
 2641              		.loc 1 993 0
 2642 0000 014B     		ldr	r3, .L176
 2643 0002 C364     		str	r3, [r0, #76]
 2644 0004 7047     		bx	lr
 2645              	.L177:
 2646 0006 00BF     		.align	2
 2647              	.L176:
 2648 0008 00000000 		.word	u8g2_font_calc_vref_top
 2649              		.cfi_endproc
 2650              	.LFE36:
 2652              		.section	.text.u8g2_SetFontPosCenter,"ax",%progbits
 2653              		.align	1
 2654              		.global	u8g2_SetFontPosCenter
 2655              		.syntax unified
 2656              		.thumb
 2657              		.thumb_func
 2658              		.fpu softvfp
 2660              	u8g2_SetFontPosCenter:
 2661              	.LFB38:
1007:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_center;
 2662              		.loc 1 1007 0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666              		@ link register save eliminated.
 2667              	.LVL379:
1008:u8g2/csrc/u8g2_font.c **** }
 2668              		.loc 1 1008 0
 2669 0000 014B     		ldr	r3, .L179
 2670 0002 C364     		str	r3, [r0, #76]
 2671 0004 7047     		bx	lr
 2672              	.L180:
 2673 0006 00BF     		.align	2
 2674              	.L179:
 2675 0008 00000000 		.word	u8g2_font_calc_vref_center
 2676              		.cfi_endproc
 2677              	.LFE38:
 2679              		.section	.text.u8g2_SetFont,"ax",%progbits
 2680              		.align	1
 2681              		.global	u8g2_SetFont
 2682              		.syntax unified
 2683              		.thumb
 2684              		.thumb_func
 2685              		.fpu softvfp
 2687              	u8g2_SetFont:
 2688              	.LFB39:
1014:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font != font )
 2689              		.loc 1 1014 0
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 73


 2692              		@ frame_needed = 0, uses_anonymous_args = 0
 2693              	.LVL380:
1015:u8g2/csrc/u8g2_font.c ****   {
 2694              		.loc 1 1015 0
 2695 0000 836C     		ldr	r3, [r0, #72]
 2696 0002 8B42     		cmp	r3, r1
 2697 0004 09D0     		beq	.L184
1014:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font != font )
 2698              		.loc 1 1014 0
 2699 0006 10B5     		push	{r4, lr}
 2700              	.LCFI36:
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 4, -8
 2703              		.cfi_offset 14, -4
 2704 0008 0446     		mov	r4, r0
1021:u8g2/csrc/u8g2_font.c ****     u8g2_read_font_info(&(u8g2->font_info), font);
 2705              		.loc 1 1021 0
 2706 000a 8164     		str	r1, [r0, #72]
1022:u8g2/csrc/u8g2_font.c ****     u8g2_UpdateRefHeight(u8g2);
 2707              		.loc 1 1022 0
 2708 000c 6030     		adds	r0, r0, #96
 2709              	.LVL381:
 2710 000e FFF7FEFF 		bl	u8g2_read_font_info
 2711              	.LVL382:
1023:u8g2/csrc/u8g2_font.c ****     /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
 2712              		.loc 1 1023 0
 2713 0012 2046     		mov	r0, r4
 2714 0014 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2715              	.LVL383:
 2716 0018 10BD     		pop	{r4, pc}
 2717              	.LVL384:
 2718              	.L184:
 2719              	.LCFI37:
 2720              		.cfi_def_cfa_offset 0
 2721              		.cfi_restore 4
 2722              		.cfi_restore 14
 2723 001a 7047     		bx	lr
 2724              		.cfi_endproc
 2725              	.LFE39:
 2727              		.section	.text.u8g2_GetStrX,"ax",%progbits
 2728              		.align	1
 2729              		.global	u8g2_GetStrX
 2730              		.syntax unified
 2731              		.thumb
 2732              		.thumb_func
 2733              		.fpu softvfp
 2735              	u8g2_GetStrX:
 2736              	.LFB42:
1087:u8g2/csrc/u8g2_font.c ****   uint8_t w;
 2737              		.loc 1 1087 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 8
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741              	.LVL385:
 2742 0000 00B5     		push	{lr}
 2743              	.LCFI38:
 2744              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 74


 2745              		.cfi_offset 14, -4
 2746 0002 85B0     		sub	sp, sp, #20
 2747              	.LCFI39:
 2748              		.cfi_def_cfa_offset 24
1090:u8g2/csrc/u8g2_font.c ****   return ox;
 2749              		.loc 1 1090 0
 2750 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2751              	.LVL386:
 2752 0006 0DF10D03 		add	r3, sp, #13
 2753 000a 0093     		str	r3, [sp]
 2754 000c 0DF10E03 		add	r3, sp, #14
 2755 0010 0DF10F02 		add	r2, sp, #15
 2756 0014 FFF7FEFF 		bl	u8g2_GetGlyphHorizontalProperties
 2757              	.LVL387:
1092:u8g2/csrc/u8g2_font.c **** 
 2758              		.loc 1 1092 0
 2759 0018 9DF90E00 		ldrsb	r0, [sp, #14]
 2760 001c 05B0     		add	sp, sp, #20
 2761              	.LCFI40:
 2762              		.cfi_def_cfa_offset 4
 2763              		@ sp needed
 2764 001e 5DF804FB 		ldr	pc, [sp], #4
 2765              		.cfi_endproc
 2766              	.LFE42:
 2768              		.section	.text.u8g2_GetStrWidth,"ax",%progbits
 2769              		.align	1
 2770              		.global	u8g2_GetStrWidth
 2771              		.syntax unified
 2772              		.thumb
 2773              		.thumb_func
 2774              		.fpu softvfp
 2776              	u8g2_GetStrWidth:
 2777              	.LFB44:
1164:u8g2/csrc/u8g2_font.c **** 
1165:u8g2/csrc/u8g2_font.c **** 
1166:u8g2/csrc/u8g2_font.c **** 
1167:u8g2/csrc/u8g2_font.c **** 
1168:u8g2/csrc/u8g2_font.c **** 
1169:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_GetStrWidth(u8g2_t *u8g2, const char *s)
1170:u8g2/csrc/u8g2_font.c **** {
 2778              		.loc 1 1170 0
 2779              		.cfi_startproc
 2780              		@ args = 0, pretend = 0, frame = 0
 2781              		@ frame_needed = 0, uses_anonymous_args = 0
 2782              	.LVL388:
 2783 0000 08B5     		push	{r3, lr}
 2784              	.LCFI41:
 2785              		.cfi_def_cfa_offset 8
 2786              		.cfi_offset 3, -8
 2787              		.cfi_offset 14, -4
1171:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 2788              		.loc 1 1171 0
 2789 0002 024B     		ldr	r3, .L191
 2790 0004 4360     		str	r3, [r0, #4]
1172:u8g2/csrc/u8g2_font.c ****   return u8g2_string_width(u8g2, s);
 2791              		.loc 1 1172 0
 2792 0006 FFF7FEFF 		bl	u8g2_string_width
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 75


 2793              	.LVL389:
1173:u8g2/csrc/u8g2_font.c **** }
 2794              		.loc 1 1173 0
 2795 000a 08BD     		pop	{r3, pc}
 2796              	.L192:
 2797              		.align	2
 2798              	.L191:
 2799 000c 00000000 		.word	u8x8_ascii_next
 2800              		.cfi_endproc
 2801              	.LFE44:
 2803              		.section	.text.u8g2_GetExactStrWidth,"ax",%progbits
 2804              		.align	1
 2805              		.global	u8g2_GetExactStrWidth
 2806              		.syntax unified
 2807              		.thumb
 2808              		.thumb_func
 2809              		.fpu softvfp
 2811              	u8g2_GetExactStrWidth:
 2812              	.LFB45:
1174:u8g2/csrc/u8g2_font.c **** 
1175:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_GetExactStrWidth(u8g2_t *u8g2, const char *s)
1176:u8g2/csrc/u8g2_font.c **** {
 2813              		.loc 1 1176 0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 0, uses_anonymous_args = 0
 2817              	.LVL390:
 2818 0000 08B5     		push	{r3, lr}
 2819              	.LCFI42:
 2820              		.cfi_def_cfa_offset 8
 2821              		.cfi_offset 3, -8
 2822              		.cfi_offset 14, -4
1177:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 2823              		.loc 1 1177 0
 2824 0002 024B     		ldr	r3, .L195
 2825 0004 4360     		str	r3, [r0, #4]
1178:u8g2/csrc/u8g2_font.c ****   return u8g2_calculate_exact_string_width(u8g2, s);
 2826              		.loc 1 1178 0
 2827 0006 FFF7FEFF 		bl	u8g2_calculate_exact_string_width
 2828              	.LVL391:
1179:u8g2/csrc/u8g2_font.c **** }
 2829              		.loc 1 1179 0
 2830 000a 08BD     		pop	{r3, pc}
 2831              	.L196:
 2832              		.align	2
 2833              	.L195:
 2834 000c 00000000 		.word	u8x8_ascii_next
 2835              		.cfi_endproc
 2836              	.LFE45:
 2838              		.section	.text.u8g2_GetUTF8Width,"ax",%progbits
 2839              		.align	1
 2840              		.global	u8g2_GetUTF8Width
 2841              		.syntax unified
 2842              		.thumb
 2843              		.thumb_func
 2844              		.fpu softvfp
 2846              	u8g2_GetUTF8Width:
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 76


 2847              	.LFB46:
1180:u8g2/csrc/u8g2_font.c **** 
1181:u8g2/csrc/u8g2_font.c **** /*
1182:u8g2/csrc/u8g2_font.c **** source: https://en.wikipedia.org/wiki/UTF-8
1183:u8g2/csrc/u8g2_font.c **** Bits	from 		to			bytes	Byte 1 		Byte 2 		Byte 3 		Byte 4 		Byte 5 		Byte 6
1184:u8g2/csrc/u8g2_font.c ****   7 	U+0000 		U+007F 		1 		0xxxxxxx
1185:u8g2/csrc/u8g2_font.c **** 11 	U+0080 		U+07FF 		2 		110xxxxx 	10xxxxxx
1186:u8g2/csrc/u8g2_font.c **** 16 	U+0800 		U+FFFF 		3 		1110xxxx 	10xxxxxx 	10xxxxxx
1187:u8g2/csrc/u8g2_font.c **** 21 	U+10000 	U+1FFFFF 	4 		11110xxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
1188:u8g2/csrc/u8g2_font.c **** 26 	U+200000 	U+3FFFFFF 	5 		111110xx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
1189:u8g2/csrc/u8g2_font.c **** 31 	U+4000000 	U+7FFFFFFF 	6 		1111110x 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx  
1190:u8g2/csrc/u8g2_font.c **** */
1191:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_GetUTF8Width(u8g2_t *u8g2, const char *str)
1192:u8g2/csrc/u8g2_font.c **** {
 2848              		.loc 1 1192 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 0
 2851              		@ frame_needed = 0, uses_anonymous_args = 0
 2852              	.LVL392:
 2853 0000 08B5     		push	{r3, lr}
 2854              	.LCFI43:
 2855              		.cfi_def_cfa_offset 8
 2856              		.cfi_offset 3, -8
 2857              		.cfi_offset 14, -4
1193:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2858              		.loc 1 1193 0
 2859 0002 024B     		ldr	r3, .L199
 2860 0004 4360     		str	r3, [r0, #4]
1194:u8g2/csrc/u8g2_font.c ****   return u8g2_string_width(u8g2, str);
 2861              		.loc 1 1194 0
 2862 0006 FFF7FEFF 		bl	u8g2_string_width
 2863              	.LVL393:
1195:u8g2/csrc/u8g2_font.c **** }
 2864              		.loc 1 1195 0
 2865 000a 08BD     		pop	{r3, pc}
 2866              	.L200:
 2867              		.align	2
 2868              	.L199:
 2869 000c 00000000 		.word	u8x8_utf8_next
 2870              		.cfi_endproc
 2871              	.LFE46:
 2873              		.section	.text.u8g2_SetFontDirection,"ax",%progbits
 2874              		.align	1
 2875              		.global	u8g2_SetFontDirection
 2876              		.syntax unified
 2877              		.thumb
 2878              		.thumb_func
 2879              		.fpu softvfp
 2881              	u8g2_SetFontDirection:
 2882              	.LFB47:
1196:u8g2/csrc/u8g2_font.c **** 
1197:u8g2/csrc/u8g2_font.c **** 
1198:u8g2/csrc/u8g2_font.c **** 
1199:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontDirection(u8g2_t *u8g2, uint8_t dir)
1200:u8g2/csrc/u8g2_font.c **** {
 2883              		.loc 1 1200 0
 2884              		.cfi_startproc
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 77


 2885              		@ args = 0, pretend = 0, frame = 0
 2886              		@ frame_needed = 0, uses_anonymous_args = 0
 2887              		@ link register save eliminated.
 2888              	.LVL394:
1201:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION  
1202:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.dir = dir;
 2889              		.loc 1 1202 0
 2890 0000 80F85E10 		strb	r1, [r0, #94]
 2891 0004 7047     		bx	lr
 2892              		.cfi_endproc
 2893              	.LFE47:
 2895              		.text
 2896              	.Letext0:
 2897              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6.2 2016q4\\arm-none-eabi\\include\\mach
 2898              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6.2 2016q4\\arm-none-eabi\\include\\sys\
 2899              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6.2 2016q4\\lib\\gcc\\arm-none-eabi\\6.2
 2900              		.file 5 "u8g2/csrc/u8x8.h"
 2901              		.file 6 "u8g2/csrc/u8g2.h"
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 78


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_font.c
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:16     .text.u8g2_font_get_byte:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:22     .text.u8g2_font_get_byte:00000000 u8g2_font_get_byte
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:39     .text.u8g2_font_get_word:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:45     .text.u8g2_font_get_word:00000000 u8g2_font_get_word
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:70     .text.u8g2_add_vector_y:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:76     .text.u8g2_add_vector_y:00000000 u8g2_add_vector_y
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:125    .text.u8g2_add_vector_x:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:131    .text.u8g2_add_vector_x:00000000 u8g2_add_vector_x
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:180    .text.u8g2_font_calc_vref_font:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:187    .text.u8g2_font_calc_vref_font:00000000 u8g2_font_calc_vref_font
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:203    .text.u8g2_font_calc_vref_bottom:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:210    .text.u8g2_font_calc_vref_bottom:00000000 u8g2_font_calc_vref_bottom
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:226    .text.u8g2_font_calc_vref_top:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:233    .text.u8g2_font_calc_vref_top:00000000 u8g2_font_calc_vref_top
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:254    .text.u8g2_font_calc_vref_center:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:261    .text.u8g2_font_calc_vref_center:00000000 u8g2_font_calc_vref_center
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:291    .text.u8g2_read_font_info:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:298    .text.u8g2_read_font_info:00000000 u8g2_read_font_info
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:441    .text.u8g2_GetFontSize:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:448    .text.u8g2_GetFontSize:00000000 u8g2_GetFontSize
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:501    .text.u8g2_GetFontBBXWidth:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:508    .text.u8g2_GetFontBBXWidth:00000000 u8g2_GetFontBBXWidth
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:524    .text.u8g2_GetFontBBXHeight:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:531    .text.u8g2_GetFontBBXHeight:00000000 u8g2_GetFontBBXHeight
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:547    .text.u8g2_GetFontBBXOffX:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:554    .text.u8g2_GetFontBBXOffX:00000000 u8g2_GetFontBBXOffX
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:570    .text.u8g2_GetFontBBXOffY:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:577    .text.u8g2_GetFontBBXOffY:00000000 u8g2_GetFontBBXOffY
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:593    .text.u8g2_GetFontCapitalAHeight:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:600    .text.u8g2_GetFontCapitalAHeight:00000000 u8g2_GetFontCapitalAHeight
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:616    .text.u8g2_font_decode_get_unsigned_bits:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:623    .text.u8g2_font_decode_get_unsigned_bits:00000000 u8g2_font_decode_get_unsigned_bits
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:702    .text.u8g2_font_setup_decode:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:708    .text.u8g2_font_setup_decode:00000000 u8g2_font_setup_decode
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:757    .text.u8g2_font_decode_get_signed_bits:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:764    .text.u8g2_font_decode_get_signed_bits:00000000 u8g2_font_decode_get_signed_bits
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:798    .text.u8g2_font_decode_len:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:805    .text.u8g2_font_decode_len:00000000 u8g2_font_decode_len
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:953    .text.u8g2_font_decode_glyph:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:960    .text.u8g2_font_decode_glyph:00000000 u8g2_font_decode_glyph
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1051   .text.u8g2_font_decode_glyph:00000088 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1055   .text.u8g2_font_decode_glyph:0000008c $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1223   .text.u8g2_font_get_glyph_data:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1230   .text.u8g2_font_get_glyph_data:00000000 u8g2_font_get_glyph_data
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1332   .text.u8g2_font_draw_glyph:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1338   .text.u8g2_font_draw_glyph:00000000 u8g2_font_draw_glyph
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1383   .text.u8g2_GetGlyphHorizontalProperties:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1389   .text.u8g2_GetGlyphHorizontalProperties:00000000 u8g2_GetGlyphHorizontalProperties
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1446   .text.u8g2_calculate_exact_string_width:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1452   .text.u8g2_calculate_exact_string_width:00000000 u8g2_calculate_exact_string_width
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1581   .text.u8g2_IsGlyph:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1588   .text.u8g2_IsGlyph:00000000 u8g2_IsGlyph
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1616   .text.u8g2_GetGlyphWidth:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1623   .text.u8g2_GetGlyphWidth:00000000 u8g2_GetGlyphWidth
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1678   .text.u8g2_string_width:00000000 $t
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 79


C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1684   .text.u8g2_string_width:00000000 u8g2_string_width
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1774   .text.u8g2_SetFontMode:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1781   .text.u8g2_SetFontMode:00000000 u8g2_SetFontMode
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1796   .text.u8g2_DrawGlyph:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1803   .text.u8g2_DrawGlyph:00000000 u8g2_DrawGlyph
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1831   .text.u8g2_DrawGlyph:00000016 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1835   .text.u8g2_DrawGlyph:0000001a $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1891   .text.u8g2_draw_string:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1897   .text.u8g2_draw_string:00000000 u8g2_draw_string
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1970   .text.u8g2_draw_string:00000054 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:1974   .text.u8g2_draw_string:00000064 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2009   .text.u8g2_DrawStr:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2016   .text.u8g2_DrawStr:00000000 u8g2_DrawStr
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2039   .text.u8g2_DrawStr:0000000c $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2044   .text.u8g2_DrawUTF8:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2051   .text.u8g2_DrawUTF8:00000000 u8g2_DrawUTF8
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2074   .text.u8g2_DrawUTF8:0000000c $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2079   .text.u8g2_DrawExtendedUTF8:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2086   .text.u8g2_DrawExtendedUTF8:00000000 u8g2_DrawExtendedUTF8
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2239   .text.u8g2_DrawExtendedUTF8:000000ac $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2244   .text.u8g2_DrawExtUTF8:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2251   .text.u8g2_DrawExtUTF8:00000000 u8g2_DrawExtUTF8
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2396   .text.u8g2_DrawExtUTF8:000000a4 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2401   .text.u8g2_UpdateRefHeight:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2408   .text.u8g2_UpdateRefHeight:00000000 u8g2_UpdateRefHeight
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2482   .text.u8g2_SetFontRefHeightText:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2489   .text.u8g2_SetFontRefHeightText:00000000 u8g2_SetFontRefHeightText
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2512   .text.u8g2_SetFontRefHeightExtendedText:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2519   .text.u8g2_SetFontRefHeightExtendedText:00000000 u8g2_SetFontRefHeightExtendedText
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2542   .text.u8g2_SetFontRefHeightAll:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2549   .text.u8g2_SetFontRefHeightAll:00000000 u8g2_SetFontRefHeightAll
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2572   .text.u8g2_SetFontPosBaseline:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2579   .text.u8g2_SetFontPosBaseline:00000000 u8g2_SetFontPosBaseline
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2594   .text.u8g2_SetFontPosBaseline:00000008 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2599   .text.u8g2_SetFontPosBottom:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2606   .text.u8g2_SetFontPosBottom:00000000 u8g2_SetFontPosBottom
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2621   .text.u8g2_SetFontPosBottom:00000008 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2626   .text.u8g2_SetFontPosTop:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2633   .text.u8g2_SetFontPosTop:00000000 u8g2_SetFontPosTop
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2648   .text.u8g2_SetFontPosTop:00000008 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2653   .text.u8g2_SetFontPosCenter:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2660   .text.u8g2_SetFontPosCenter:00000000 u8g2_SetFontPosCenter
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2675   .text.u8g2_SetFontPosCenter:00000008 $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2680   .text.u8g2_SetFont:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2687   .text.u8g2_SetFont:00000000 u8g2_SetFont
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2728   .text.u8g2_GetStrX:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2735   .text.u8g2_GetStrX:00000000 u8g2_GetStrX
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2769   .text.u8g2_GetStrWidth:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2776   .text.u8g2_GetStrWidth:00000000 u8g2_GetStrWidth
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2799   .text.u8g2_GetStrWidth:0000000c $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2804   .text.u8g2_GetExactStrWidth:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2811   .text.u8g2_GetExactStrWidth:00000000 u8g2_GetExactStrWidth
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2834   .text.u8g2_GetExactStrWidth:0000000c $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2839   .text.u8g2_GetUTF8Width:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2846   .text.u8g2_GetUTF8Width:00000000 u8g2_GetUTF8Width
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2869   .text.u8g2_GetUTF8Width:0000000c $d
C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2874   .text.u8g2_SetFontDirection:00000000 $t
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s 			page 80


C:\Users\nhantt\AppData\Local\Temp\ccTfUzOC.s:2881   .text.u8g2_SetFontDirection:00000000 u8g2_SetFontDirection
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
u8g2_DrawHVLine
u8g2_IsIntersection
u8x8_utf8_init
u8x8_ascii_next
u8x8_utf8_next
u8g2_GetKerning
u8g2_GetKerningByTable
