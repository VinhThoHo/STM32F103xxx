ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB70:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** #include <stdlib.h>
   2:Src/main.c    **** #include <string.h>
   3:Src/main.c    **** #include <errno.h>
   4:Src/main.c    **** #include <stdio.h>
   5:Src/main.c    **** #include <unistd.h>
   6:Src/main.c    **** 
   7:Src/main.c    **** #include "main.h"
   8:Src/main.c    **** #include "stm32f1xx_hal.h"
   9:Src/main.c    **** #include "usb_device.h"
  10:Src/main.c    **** #include "u8g2.h"
  11:Src/main.c    **** #include "display.h"
  12:Src/main.c    **** 
  13:Src/main.c    **** #define LCD_RST_1       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6,  GPIO_PIN_SET)
  14:Src/main.c    **** #define LCD_RST_0       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6,  GPIO_PIN_RESET)
  15:Src/main.c    **** #define LCD_RS_1        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET)
  16:Src/main.c    **** #define LCD_RS_0        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET)
  17:Src/main.c    **** #define LCD_SCLK_1      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET)
  18:Src/main.c    **** #define LCD_SCLK_0      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET)
  19:Src/main.c    **** #define LCD_SID_1       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET)
  20:Src/main.c    **** #define LCD_SID_0       HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET)
  21:Src/main.c    **** 
  22:Src/main.c    **** void delay_us(uint32_t time)
  23:Src/main.c    **** {
  24:Src/main.c    ****   uint32_t i = 0;
  25:Src/main.c    ****   while(time--)
  26:Src/main.c    ****   {
  27:Src/main.c    ****     i = 10;
  28:Src/main.c    ****     while(i--);
  29:Src/main.c    ****   }
  30:Src/main.c    **** }
  31:Src/main.c    **** 
  32:Src/main.c    **** void delay_ms(uint32_t time)
  33:Src/main.c    **** {
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 2


  34:Src/main.c    ****   uint32_t i = 0;
  35:Src/main.c    ****   while(time--)
  36:Src/main.c    ****   {
  37:Src/main.c    ****     i = 12000;
  38:Src/main.c    ****     while(i--);
  39:Src/main.c    ****   }
  40:Src/main.c    **** }
  41:Src/main.c    **** 
  42:Src/main.c    **** void SystemClock_Config(void);
  43:Src/main.c    **** uint8_t u8g2_gpio_and_delay_stm32(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED ui
  44:Src/main.c    **** static void MX_GPIO_Init(void);
  45:Src/main.c    **** void display_logo();
  46:Src/main.c    **** 
  47:Src/main.c    **** static u8g2_t *u8g2;
  48:Src/main.c    **** int main(void)
  49:Src/main.c    **** {
  50:Src/main.c    ****   HAL_Init();
  51:Src/main.c    ****   SystemClock_Config();
  52:Src/main.c    ****   MX_GPIO_Init();
  53:Src/main.c    ****   //MX_USB_DEVICE_Init();
  54:Src/main.c    ****   u8g2_Setup_st7920_s_128x64_f(&u8g2, U8G2_R0, u8x8_byte_4wire_sw_spi, u8g2_gpio_and_delay_stm32); 
  55:Src/main.c    ****   u8g2_InitDisplay(&u8g2);
  56:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
  57:Src/main.c    ****   display_logo();
  58:Src/main.c    ****   HAL_Delay(10000);
  59:Src/main.c    ****   uint32_t timeRefesh = HAL_GetTick();
  60:Src/main.c    ****   while (1)
  61:Src/main.c    ****   {
  62:Src/main.c    ****     u8g2_ClearBuffer(&u8g2);
  63:Src/main.c    ****     u8g2_SetFontMode(&u8g2, 1);
  64:Src/main.c    ****     u8g2_SetFontDirection(&u8g2, 0);
  65:Src/main.c    ****     // u8g2_SetFont(&u8g2, u8g2_font_helvB18_te);
  66:Src/main.c    ****     // u8g2_DrawStr(&u8g2,  0, 24, "HelloWorld");
  67:Src/main.c    ****     // u8g2_DrawStr(&u8g2,  0, 53, "i'm vinhtho");
  68:Src/main.c    ****     // display_menu();
  69:Src/main.c    ****     // u8g2_SetFont(&u8g2, u8g2_font_6x10_tf);
  70:Src/main.c    ****     // u8g2_SetFontRefHeightAll(&u8g2);   /* this will add some extra space for the text inside the
  71:Src/main.c    ****     // u8g2_UserInterfaceMessage(&u8g2, "Title1", "Title2", "Title3", " Ok \n Cancel ");
  72:Src/main.c    ****     //u8g2_DrawHorizontalBitmap(&u8g2, 32, 32, 64, logo);
  73:Src/main.c    **** 
  74:Src/main.c    ****     //Refresh display
  75:Src/main.c    ****     if(HAL_GetTick() - timeRefesh > 100)
  76:Src/main.c    ****     {
  77:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
  78:Src/main.c    ****       timeRefesh = HAL_GetTick();
  79:Src/main.c    ****     }
  80:Src/main.c    ****   }
  81:Src/main.c    **** }
  82:Src/main.c    **** 
  83:Src/main.c    **** void SystemClock_Config(void)
  84:Src/main.c    **** {
  85:Src/main.c    **** 
  86:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  87:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  88:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
  89:Src/main.c    **** 
  90:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 3


  91:Src/main.c    ****     */
  92:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  93:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  94:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  95:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  96:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  97:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  98:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  99:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 100:Src/main.c    ****   {
 101:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 102:Src/main.c    ****   }
 103:Src/main.c    **** 
 104:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 105:Src/main.c    ****     */
 106:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 107:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 108:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 109:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 110:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 111:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 112:Src/main.c    **** 
 113:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 114:Src/main.c    ****   {
 115:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 116:Src/main.c    ****   }
 117:Src/main.c    **** 
 118:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 119:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 120:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 121:Src/main.c    ****   {
 122:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 123:Src/main.c    ****   }
 124:Src/main.c    **** 
 125:Src/main.c    ****     /**Configure the Systick interrupt time 
 126:Src/main.c    ****     */
 127:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 128:Src/main.c    **** 
 129:Src/main.c    ****     /**Configure the Systick 
 130:Src/main.c    ****     */
 131:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 134:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 135:Src/main.c    **** }
 136:Src/main.c    **** 
 137:Src/main.c    **** static void MX_GPIO_Init(void)
 138:Src/main.c    **** {
  26              		.loc 1 138 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 4


  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
 139:Src/main.c    **** 
 140:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
  40              		.loc 1 140 3 view .LVU1
 141:Src/main.c    **** 
 142:Src/main.c    ****   /* GPIO Ports Clock Enable */
 143:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  41              		.loc 1 143 3 view .LVU2
  42              	.LBB5:
  43              		.loc 1 143 3 view .LVU3
  44              		.loc 1 143 3 view .LVU4
  45 0004 164B     		ldr	r3, .L3
  46 0006 9A69     		ldr	r2, [r3, #24]
  47 0008 42F02002 		orr	r2, r2, #32
  48 000c 9A61     		str	r2, [r3, #24]
  49              		.loc 1 143 3 view .LVU5
  50 000e 9A69     		ldr	r2, [r3, #24]
  51 0010 02F02002 		and	r2, r2, #32
  52 0014 0092     		str	r2, [sp]
  53              		.loc 1 143 3 view .LVU6
  54 0016 009A     		ldr	r2, [sp]
  55              	.LBE5:
 144:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  56              		.loc 1 144 3 view .LVU7
  57              	.LBB6:
  58              		.loc 1 144 3 view .LVU8
  59              		.loc 1 144 3 view .LVU9
  60 0018 9A69     		ldr	r2, [r3, #24]
  61 001a 42F00402 		orr	r2, r2, #4
  62 001e 9A61     		str	r2, [r3, #24]
  63              		.loc 1 144 3 view .LVU10
  64 0020 9B69     		ldr	r3, [r3, #24]
  65 0022 03F00403 		and	r3, r3, #4
  66 0026 0193     		str	r3, [sp, #4]
  67              		.loc 1 144 3 view .LVU11
  68 0028 019B     		ldr	r3, [sp, #4]
  69              	.LBE6:
 145:Src/main.c    **** 
 146:Src/main.c    **** 
 147:Src/main.c    **** 
 148:Src/main.c    ****   /*Configure GPIO pin : PA15 */
 149:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
  70              		.loc 1 149 3 view .LVU12
  71              		.loc 1 149 23 is_stmt 0 view .LVU13
  72 002a 4FF40045 		mov	r5, #32768
  73 002e 0295     		str	r5, [sp, #8]
 150:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  74              		.loc 1 150 3 is_stmt 1 view .LVU14
  75              		.loc 1 150 24 is_stmt 0 view .LVU15
  76 0030 0123     		movs	r3, #1
  77 0032 0393     		str	r3, [sp, #12]
 151:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  78              		.loc 1 151 3 is_stmt 1 view .LVU16
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 5


  79              		.loc 1 151 24 is_stmt 0 view .LVU17
  80 0034 0026     		movs	r6, #0
  81 0036 0496     		str	r6, [sp, #16]
 152:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  82              		.loc 1 152 3 is_stmt 1 view .LVU18
  83              		.loc 1 152 25 is_stmt 0 view .LVU19
  84 0038 0223     		movs	r3, #2
  85 003a 0593     		str	r3, [sp, #20]
 153:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  86              		.loc 1 153 3 is_stmt 1 view .LVU20
  87 003c 094C     		ldr	r4, .L3+4
  88 003e 02A9     		add	r1, sp, #8
  89 0040 2046     		mov	r0, r4
  90 0042 FFF7FEFF 		bl	HAL_GPIO_Init
  91              	.LVL0:
 154:Src/main.c    **** 
 155:Src/main.c    ****     /*Configure GPIO pin Output Level */
 156:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
  92              		.loc 1 156 3 view .LVU21
  93 0046 3246     		mov	r2, r6
  94 0048 2946     		mov	r1, r5
  95 004a 2046     		mov	r0, r4
  96 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  97              	.LVL1:
 157:Src/main.c    ****   __HAL_AFIO_REMAP_SWJ_ENABLE();
  98              		.loc 1 157 3 view .LVU22
  99              	.LBB7:
 100              		.loc 1 157 3 view .LVU23
 101 0050 054A     		ldr	r2, .L3+8
 102 0052 5368     		ldr	r3, [r2, #4]
 103              	.LVL2:
 104              		.loc 1 157 3 view .LVU24
 105 0054 23F0E063 		bic	r3, r3, #117440512
 106              	.LVL3:
 107              		.loc 1 157 3 view .LVU25
 108              		.loc 1 157 3 view .LVU26
 109 0058 5360     		str	r3, [r2, #4]
 110              	.LBE7:
 158:Src/main.c    **** 
 159:Src/main.c    **** }
 111              		.loc 1 159 1 is_stmt 0 view .LVU27
 112 005a 06B0     		add	sp, sp, #24
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 16
 115              		@ sp needed
 116 005c 70BD     		pop	{r4, r5, r6, pc}
 117              	.L4:
 118 005e 00BF     		.align	2
 119              	.L3:
 120 0060 00100240 		.word	1073876992
 121 0064 00080140 		.word	1073809408
 122 0068 00000140 		.word	1073807360
 123              		.cfi_endproc
 124              	.LFE70:
 126              		.section	.text.u8g2_gpio_and_delay_stm32,"ax",%progbits
 127              		.align	1
 128              		.global	u8g2_gpio_and_delay_stm32
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 6


 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu softvfp
 134              	u8g2_gpio_and_delay_stm32:
 135              	.LVL4:
 136              	.LFB71:
 160:Src/main.c    **** 
 161:Src/main.c    **** uint8_t u8g2_gpio_and_delay_stm32(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED ui
 162:Src/main.c    **** {
 137              		.loc 1 162 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 24
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		.loc 1 162 1 is_stmt 0 view .LVU29
 142 0000 70B5     		push	{r4, r5, r6, lr}
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 4, -16
 146              		.cfi_offset 5, -12
 147              		.cfi_offset 6, -8
 148              		.cfi_offset 14, -4
 149 0002 86B0     		sub	sp, sp, #24
 150              	.LCFI4:
 151              		.cfi_def_cfa_offset 40
 163:Src/main.c    ****     GPIO_InitTypeDef  gpioinitstruct;
 152              		.loc 1 163 5 is_stmt 1 view .LVU30
 164:Src/main.c    ****   
 165:Src/main.c    ****     switch(msg){
 153              		.loc 1 165 5 view .LVU31
 154 0004 2839     		subs	r1, r1, #40
 155              	.LVL5:
 156              		.loc 1 165 5 is_stmt 0 view .LVU32
 157 0006 2629     		cmp	r1, #38
 158 0008 15D8     		bhi	.L6
 159 000a DFE801F0 		tbb	[pc, r1]
 160              	.LVL6:
 161              	.L8:
 162 000e 16       		.byte	(.L15-.L8)/2
 163 000f 34       		.byte	(.L14-.L8)/2
 164 0010 78       		.byte	(.L20-.L8)/2
 165 0011 39       		.byte	(.L13-.L8)/2
 166 0012 14       		.byte	(.L6-.L8)/2
 167 0013 14       		.byte	(.L6-.L8)/2
 168 0014 14       		.byte	(.L6-.L8)/2
 169 0015 14       		.byte	(.L6-.L8)/2
 170 0016 14       		.byte	(.L6-.L8)/2
 171 0017 14       		.byte	(.L6-.L8)/2
 172 0018 14       		.byte	(.L6-.L8)/2
 173 0019 14       		.byte	(.L6-.L8)/2
 174 001a 14       		.byte	(.L6-.L8)/2
 175 001b 14       		.byte	(.L6-.L8)/2
 176 001c 14       		.byte	(.L6-.L8)/2
 177 001d 14       		.byte	(.L6-.L8)/2
 178 001e 14       		.byte	(.L6-.L8)/2
 179 001f 14       		.byte	(.L6-.L8)/2
 180 0020 14       		.byte	(.L6-.L8)/2
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 7


 181 0021 14       		.byte	(.L6-.L8)/2
 182 0022 14       		.byte	(.L6-.L8)/2
 183 0023 14       		.byte	(.L6-.L8)/2
 184 0024 14       		.byte	(.L6-.L8)/2
 185 0025 14       		.byte	(.L6-.L8)/2
 186 0026 3C       		.byte	(.L12-.L8)/2
 187 0027 4B       		.byte	(.L11-.L8)/2
 188 0028 14       		.byte	(.L6-.L8)/2
 189 0029 14       		.byte	(.L6-.L8)/2
 190 002a 14       		.byte	(.L6-.L8)/2
 191 002b 14       		.byte	(.L6-.L8)/2
 192 002c 14       		.byte	(.L6-.L8)/2
 193 002d 14       		.byte	(.L6-.L8)/2
 194 002e 14       		.byte	(.L6-.L8)/2
 195 002f 14       		.byte	(.L6-.L8)/2
 196 0030 78       		.byte	(.L20-.L8)/2
 197 0031 69       		.byte	(.L9-.L8)/2
 198 0032 14       		.byte	(.L6-.L8)/2
 199 0033 14       		.byte	(.L6-.L8)/2
 200 0034 5A       		.byte	(.L7-.L8)/2
 201 0035 00       		.p2align 1
 202              	.L6:
 166:Src/main.c    **** 
 167:Src/main.c    ****     //Function which implements a delay, arg_int contains the amount of ms
 168:Src/main.c    ****     case U8X8_MSG_GPIO_AND_DELAY_INIT:
 169:Src/main.c    **** 
 170:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 171:Src/main.c    ****     /* Configure the GPIO_LED pin */
 172:Src/main.c    ****     gpioinitstruct.Pin    = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7;
 173:Src/main.c    ****     gpioinitstruct.Mode   = GPIO_MODE_OUTPUT_PP;
 174:Src/main.c    ****     gpioinitstruct.Pull   = GPIO_NOPULL;
 175:Src/main.c    ****     gpioinitstruct.Speed  = GPIO_SPEED_FREQ_HIGH;
 176:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &gpioinitstruct);
 177:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7, GPIO_PIN_SET);
 178:Src/main.c    **** 
 179:Src/main.c    ****     break;
 180:Src/main.c    ****     //Function which implements a delay, arg_int contains the amount of ms
 181:Src/main.c    ****     case U8X8_MSG_DELAY_MILLI:
 182:Src/main.c    ****     HAL_Delay(arg_int);
 183:Src/main.c    ****     break;
 184:Src/main.c    ****     //Function which delays 10us
 185:Src/main.c    ****     case U8X8_MSG_DELAY_10MICRO:
 186:Src/main.c    ****     delay_us(10);
 187:Src/main.c    ****     break;
 188:Src/main.c    ****     //Function which delays 100ns
 189:Src/main.c    ****     case U8X8_MSG_DELAY_100NANO:
 190:Src/main.c    ****     __NOP();
 191:Src/main.c    **** 
 192:Src/main.c    ****     break;
 193:Src/main.c    ****     //Function to define the logic level of the clockline
 194:Src/main.c    ****     case U8X8_MSG_GPIO_SPI_CLOCK:
 195:Src/main.c    ****       if (arg_int) LCD_SCLK_1;
 196:Src/main.c    ****       else LCD_SCLK_0;
 197:Src/main.c    **** 
 198:Src/main.c    ****     break;
 199:Src/main.c    ****     //Function to define the logic level of the data line to the display
 200:Src/main.c    ****     case U8X8_MSG_GPIO_SPI_DATA:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 8


 201:Src/main.c    ****       if (arg_int) LCD_SID_1;
 202:Src/main.c    ****       else LCD_SID_0;
 203:Src/main.c    **** 
 204:Src/main.c    ****     break;
 205:Src/main.c    **** 
 206:Src/main.c    ****     // Function to define the logic level of the CS line
 207:Src/main.c    ****     case U8X8_MSG_GPIO_CS1:
 208:Src/main.c    ****       if (arg_int) LCD_RS_1 ;
 209:Src/main.c    ****       else LCD_RS_0;
 210:Src/main.c    **** 
 211:Src/main.c    ****     break;
 212:Src/main.c    ****     //Function to define the logic level of the Data/ Command line
 213:Src/main.c    ****     case U8X8_MSG_GPIO_DC:
 214:Src/main.c    **** 
 215:Src/main.c    ****     break;
 216:Src/main.c    ****     //Function to define the logic level of the RESET line
 217:Src/main.c    ****     case U8X8_MSG_GPIO_RESET:
 218:Src/main.c    ****       if (arg_int) LCD_RST_1;
 219:Src/main.c    ****       else LCD_RST_0;
 220:Src/main.c    **** 
 221:Src/main.c    ****     break;
 222:Src/main.c    ****     
 223:Src/main.c    ****     default:
 224:Src/main.c    ****       return 0; //A message was received which is not implemented, return 0 to indicate an error
 203              		.loc 1 224 14 view .LVU33
 204 0036 0020     		movs	r0, #0
 205              	.LVL7:
 206              		.loc 1 224 14 view .LVU34
 207 0038 62E0     		b	.L10
 208              	.LVL8:
 209              	.L15:
 170:Src/main.c    ****     /* Configure the GPIO_LED pin */
 210              		.loc 1 170 5 is_stmt 1 view .LVU35
 211              	.LBB8:
 170:Src/main.c    ****     /* Configure the GPIO_LED pin */
 212              		.loc 1 170 5 view .LVU36
 170:Src/main.c    ****     /* Configure the GPIO_LED pin */
 213              		.loc 1 170 5 view .LVU37
 214 003a 324B     		ldr	r3, .L22
 215 003c 9A69     		ldr	r2, [r3, #24]
 216              	.LVL9:
 170:Src/main.c    ****     /* Configure the GPIO_LED pin */
 217              		.loc 1 170 5 is_stmt 0 view .LVU38
 218 003e 42F00402 		orr	r2, r2, #4
 219 0042 9A61     		str	r2, [r3, #24]
 170:Src/main.c    ****     /* Configure the GPIO_LED pin */
 220              		.loc 1 170 5 is_stmt 1 view .LVU39
 221 0044 9B69     		ldr	r3, [r3, #24]
 222 0046 03F00403 		and	r3, r3, #4
 223 004a 0193     		str	r3, [sp, #4]
 170:Src/main.c    ****     /* Configure the GPIO_LED pin */
 224              		.loc 1 170 5 view .LVU40
 225 004c 019B     		ldr	r3, [sp, #4]
 226              	.LBE8:
 172:Src/main.c    ****     gpioinitstruct.Mode   = GPIO_MODE_OUTPUT_PP;
 227              		.loc 1 172 5 view .LVU41
 172:Src/main.c    ****     gpioinitstruct.Mode   = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 9


 228              		.loc 1 172 27 is_stmt 0 view .LVU42
 229 004e B826     		movs	r6, #184
 230 0050 0296     		str	r6, [sp, #8]
 173:Src/main.c    ****     gpioinitstruct.Pull   = GPIO_NOPULL;
 231              		.loc 1 173 5 is_stmt 1 view .LVU43
 173:Src/main.c    ****     gpioinitstruct.Pull   = GPIO_NOPULL;
 232              		.loc 1 173 27 is_stmt 0 view .LVU44
 233 0052 0124     		movs	r4, #1
 234 0054 0394     		str	r4, [sp, #12]
 174:Src/main.c    ****     gpioinitstruct.Speed  = GPIO_SPEED_FREQ_HIGH;
 235              		.loc 1 174 5 is_stmt 1 view .LVU45
 174:Src/main.c    ****     gpioinitstruct.Speed  = GPIO_SPEED_FREQ_HIGH;
 236              		.loc 1 174 27 is_stmt 0 view .LVU46
 237 0056 0023     		movs	r3, #0
 238 0058 0493     		str	r3, [sp, #16]
 175:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &gpioinitstruct);
 239              		.loc 1 175 5 is_stmt 1 view .LVU47
 175:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &gpioinitstruct);
 240              		.loc 1 175 27 is_stmt 0 view .LVU48
 241 005a 0323     		movs	r3, #3
 242 005c 0593     		str	r3, [sp, #20]
 176:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7, GPIO_PIN_SET);
 243              		.loc 1 176 5 is_stmt 1 view .LVU49
 244 005e 2A4D     		ldr	r5, .L22+4
 245 0060 02A9     		add	r1, sp, #8
 246 0062 2846     		mov	r0, r5
 247              	.LVL10:
 176:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_7, GPIO_PIN_SET);
 248              		.loc 1 176 5 is_stmt 0 view .LVU50
 249 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 250              	.LVL11:
 177:Src/main.c    **** 
 251              		.loc 1 177 5 is_stmt 1 view .LVU51
 252 0068 2246     		mov	r2, r4
 253 006a 3146     		mov	r1, r6
 254 006c 2846     		mov	r0, r5
 255 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 256              	.LVL12:
 179:Src/main.c    ****     //Function which implements a delay, arg_int contains the amount of ms
 257              		.loc 1 179 5 view .LVU52
 225:Src/main.c    ****   }
 226:Src/main.c    **** 
 227:Src/main.c    ****   return 1; // command processed successfully.
 258              		.loc 1 227 10 is_stmt 0 view .LVU53
 259 0072 2046     		mov	r0, r4
 179:Src/main.c    ****     //Function which implements a delay, arg_int contains the amount of ms
 260              		.loc 1 179 5 view .LVU54
 261 0074 44E0     		b	.L10
 262              	.LVL13:
 263              	.L14:
 182:Src/main.c    ****     break;
 264              		.loc 1 182 5 is_stmt 1 view .LVU55
 265 0076 1046     		mov	r0, r2
 266              	.LVL14:
 182:Src/main.c    ****     break;
 267              		.loc 1 182 5 is_stmt 0 view .LVU56
 268 0078 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 10


 269              	.LVL15:
 183:Src/main.c    ****     //Function which delays 10us
 270              		.loc 1 183 5 is_stmt 1 view .LVU57
 271              		.loc 1 227 10 is_stmt 0 view .LVU58
 272 007c 0120     		movs	r0, #1
 183:Src/main.c    ****     //Function which delays 10us
 273              		.loc 1 183 5 view .LVU59
 274 007e 3FE0     		b	.L10
 275              	.LVL16:
 276              	.L13:
 190:Src/main.c    **** 
 277              		.loc 1 190 5 is_stmt 1 view .LVU60
 278              	.LBB9:
 279              	.LBI9:
 280              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 11


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 12


 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 13


 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 14


 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 15


 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 16


 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 281              		.loc 2 373 53 view .LVU61
 282              	.LBB10:
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 283              		.loc 2 375 3 view .LVU62
 284              		.syntax unified
 285              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 286 0080 00BF     		nop
 287              	@ 0 "" 2
 288              		.thumb
 289              		.syntax unified
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 17


 290              	.LBE10:
 291              	.LBE9:
 292              		.loc 1 227 10 is_stmt 0 view .LVU63
 293 0082 0120     		movs	r0, #1
 294              	.LVL17:
 295              		.loc 1 227 10 view .LVU64
 296 0084 3CE0     		b	.L10
 297              	.LVL18:
 298              	.L12:
 195:Src/main.c    ****       else LCD_SCLK_0;
 299              		.loc 1 195 7 is_stmt 1 view .LVU65
 195:Src/main.c    ****       else LCD_SCLK_0;
 300              		.loc 1 195 10 is_stmt 0 view .LVU66
 301 0086 32B1     		cbz	r2, .L16
 195:Src/main.c    ****       else LCD_SCLK_0;
 302              		.loc 1 195 20 is_stmt 1 discriminator 1 view .LVU67
 303 0088 0122     		movs	r2, #1
 304              	.LVL19:
 195:Src/main.c    ****       else LCD_SCLK_0;
 305              		.loc 1 195 20 is_stmt 0 discriminator 1 view .LVU68
 306 008a 2021     		movs	r1, #32
 307 008c 1E48     		ldr	r0, .L22+4
 308              	.LVL20:
 195:Src/main.c    ****       else LCD_SCLK_0;
 309              		.loc 1 195 20 discriminator 1 view .LVU69
 310 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 311              	.LVL21:
 312              		.loc 1 227 10 discriminator 1 view .LVU70
 313 0092 0120     		movs	r0, #1
 314 0094 34E0     		b	.L10
 315              	.LVL22:
 316              	.L16:
 196:Src/main.c    **** 
 317              		.loc 1 196 12 is_stmt 1 view .LVU71
 318 0096 0022     		movs	r2, #0
 319              	.LVL23:
 196:Src/main.c    **** 
 320              		.loc 1 196 12 is_stmt 0 view .LVU72
 321 0098 2021     		movs	r1, #32
 322 009a 1B48     		ldr	r0, .L22+4
 323              	.LVL24:
 196:Src/main.c    **** 
 324              		.loc 1 196 12 view .LVU73
 325 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 326              	.LVL25:
 327              		.loc 1 227 10 view .LVU74
 328 00a0 0120     		movs	r0, #1
 329 00a2 2DE0     		b	.L10
 330              	.LVL26:
 331              	.L11:
 201:Src/main.c    ****       else LCD_SID_0;
 332              		.loc 1 201 7 is_stmt 1 view .LVU75
 201:Src/main.c    ****       else LCD_SID_0;
 333              		.loc 1 201 10 is_stmt 0 view .LVU76
 334 00a4 32B1     		cbz	r2, .L17
 201:Src/main.c    ****       else LCD_SID_0;
 335              		.loc 1 201 20 is_stmt 1 discriminator 1 view .LVU77
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 18


 336 00a6 0122     		movs	r2, #1
 337              	.LVL27:
 201:Src/main.c    ****       else LCD_SID_0;
 338              		.loc 1 201 20 is_stmt 0 discriminator 1 view .LVU78
 339 00a8 8021     		movs	r1, #128
 340 00aa 1748     		ldr	r0, .L22+4
 341              	.LVL28:
 201:Src/main.c    ****       else LCD_SID_0;
 342              		.loc 1 201 20 discriminator 1 view .LVU79
 343 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 344              	.LVL29:
 345              		.loc 1 227 10 discriminator 1 view .LVU80
 346 00b0 0120     		movs	r0, #1
 347 00b2 25E0     		b	.L10
 348              	.LVL30:
 349              	.L17:
 202:Src/main.c    **** 
 350              		.loc 1 202 12 is_stmt 1 view .LVU81
 351 00b4 0022     		movs	r2, #0
 352              	.LVL31:
 202:Src/main.c    **** 
 353              		.loc 1 202 12 is_stmt 0 view .LVU82
 354 00b6 8021     		movs	r1, #128
 355 00b8 1348     		ldr	r0, .L22+4
 356              	.LVL32:
 202:Src/main.c    **** 
 357              		.loc 1 202 12 view .LVU83
 358 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 359              	.LVL33:
 360              		.loc 1 227 10 view .LVU84
 361 00be 0120     		movs	r0, #1
 362 00c0 1EE0     		b	.L10
 363              	.LVL34:
 364              	.L7:
 208:Src/main.c    ****       else LCD_RS_0;
 365              		.loc 1 208 7 is_stmt 1 view .LVU85
 208:Src/main.c    ****       else LCD_RS_0;
 366              		.loc 1 208 10 is_stmt 0 view .LVU86
 367 00c2 32B1     		cbz	r2, .L18
 208:Src/main.c    ****       else LCD_RS_0;
 368              		.loc 1 208 20 is_stmt 1 discriminator 1 view .LVU87
 369 00c4 0122     		movs	r2, #1
 370              	.LVL35:
 208:Src/main.c    ****       else LCD_RS_0;
 371              		.loc 1 208 20 is_stmt 0 discriminator 1 view .LVU88
 372 00c6 1021     		movs	r1, #16
 373 00c8 0F48     		ldr	r0, .L22+4
 374              	.LVL36:
 208:Src/main.c    ****       else LCD_RS_0;
 375              		.loc 1 208 20 discriminator 1 view .LVU89
 376 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 377              	.LVL37:
 378              		.loc 1 227 10 discriminator 1 view .LVU90
 379 00ce 0120     		movs	r0, #1
 380 00d0 16E0     		b	.L10
 381              	.LVL38:
 382              	.L18:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 19


 209:Src/main.c    **** 
 383              		.loc 1 209 12 is_stmt 1 view .LVU91
 384 00d2 0022     		movs	r2, #0
 385              	.LVL39:
 209:Src/main.c    **** 
 386              		.loc 1 209 12 is_stmt 0 view .LVU92
 387 00d4 1021     		movs	r1, #16
 388 00d6 0C48     		ldr	r0, .L22+4
 389              	.LVL40:
 209:Src/main.c    **** 
 390              		.loc 1 209 12 view .LVU93
 391 00d8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 392              	.LVL41:
 393              		.loc 1 227 10 view .LVU94
 394 00dc 0120     		movs	r0, #1
 395 00de 0FE0     		b	.L10
 396              	.LVL42:
 397              	.L9:
 218:Src/main.c    ****       else LCD_RST_0;
 398              		.loc 1 218 7 is_stmt 1 view .LVU95
 218:Src/main.c    ****       else LCD_RST_0;
 399              		.loc 1 218 10 is_stmt 0 view .LVU96
 400 00e0 32B1     		cbz	r2, .L19
 218:Src/main.c    ****       else LCD_RST_0;
 401              		.loc 1 218 20 is_stmt 1 discriminator 1 view .LVU97
 402 00e2 0122     		movs	r2, #1
 403              	.LVL43:
 218:Src/main.c    ****       else LCD_RST_0;
 404              		.loc 1 218 20 is_stmt 0 discriminator 1 view .LVU98
 405 00e4 4021     		movs	r1, #64
 406 00e6 0848     		ldr	r0, .L22+4
 407              	.LVL44:
 218:Src/main.c    ****       else LCD_RST_0;
 408              		.loc 1 218 20 discriminator 1 view .LVU99
 409 00e8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 410              	.LVL45:
 411              		.loc 1 227 10 discriminator 1 view .LVU100
 412 00ec 0120     		movs	r0, #1
 413 00ee 07E0     		b	.L10
 414              	.LVL46:
 415              	.L19:
 219:Src/main.c    **** 
 416              		.loc 1 219 12 is_stmt 1 view .LVU101
 417 00f0 0022     		movs	r2, #0
 418              	.LVL47:
 219:Src/main.c    **** 
 419              		.loc 1 219 12 is_stmt 0 view .LVU102
 420 00f2 4021     		movs	r1, #64
 421 00f4 0448     		ldr	r0, .L22+4
 422              	.LVL48:
 219:Src/main.c    **** 
 423              		.loc 1 219 12 view .LVU103
 424 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 425              	.LVL49:
 426              		.loc 1 227 10 view .LVU104
 427 00fa 0120     		movs	r0, #1
 428 00fc 00E0     		b	.L10
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 20


 429              	.LVL50:
 430              	.L20:
 431              		.loc 1 227 10 view .LVU105
 432 00fe 0120     		movs	r0, #1
 433              	.LVL51:
 434              	.L10:
 228:Src/main.c    **** }
 435              		.loc 1 228 1 view .LVU106
 436 0100 06B0     		add	sp, sp, #24
 437              	.LCFI5:
 438              		.cfi_def_cfa_offset 16
 439              		@ sp needed
 440 0102 70BD     		pop	{r4, r5, r6, pc}
 441              	.L23:
 442              		.align	2
 443              	.L22:
 444 0104 00100240 		.word	1073876992
 445 0108 00080140 		.word	1073809408
 446              		.cfi_endproc
 447              	.LFE71:
 449              		.section	.text.delay_us,"ax",%progbits
 450              		.align	1
 451              		.global	delay_us
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu softvfp
 457              	delay_us:
 458              	.LVL52:
 459              	.LFB66:
  23:Src/main.c    ****   uint32_t i = 0;
 460              		.loc 1 23 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
  24:Src/main.c    ****   while(time--)
 465              		.loc 1 24 3 view .LVU108
  25:Src/main.c    ****   {
 466              		.loc 1 25 3 view .LVU109
  25:Src/main.c    ****   {
 467              		.loc 1 25 8 is_stmt 0 view .LVU110
 468 0000 04E0     		b	.L25
 469              	.LVL53:
 470              	.L27:
  28:Src/main.c    ****   }
 471              		.loc 1 28 12 view .LVU111
 472 0002 1346     		mov	r3, r2
 473              	.LVL54:
 474              	.L26:
  28:Src/main.c    ****   }
 475              		.loc 1 28 15 is_stmt 1 discriminator 1 view .LVU112
  28:Src/main.c    ****   }
 476              		.loc 1 28 12 is_stmt 0 discriminator 1 view .LVU113
 477 0004 5A1E     		subs	r2, r3, #1
 478              	.LVL55:
  28:Src/main.c    ****   }
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 21


 479              		.loc 1 28 10 discriminator 1 view .LVU114
 480 0006 002B     		cmp	r3, #0
 481 0008 FBD1     		bne	.L27
  25:Src/main.c    ****   {
 482              		.loc 1 25 13 view .LVU115
 483 000a 0846     		mov	r0, r1
 484              	.LVL56:
 485              	.L25:
  25:Src/main.c    ****   {
 486              		.loc 1 25 13 view .LVU116
 487 000c 411E     		subs	r1, r0, #1
 488              	.LVL57:
  25:Src/main.c    ****   {
 489              		.loc 1 25 8 view .LVU117
 490 000e 08B1     		cbz	r0, .L29
  27:Src/main.c    ****     while(i--);
 491              		.loc 1 27 7 view .LVU118
 492 0010 0A23     		movs	r3, #10
 493 0012 F7E7     		b	.L26
 494              	.L29:
  30:Src/main.c    **** 
 495              		.loc 1 30 1 view .LVU119
 496 0014 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE66:
 500              		.section	.text.delay_ms,"ax",%progbits
 501              		.align	1
 502              		.global	delay_ms
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu softvfp
 508              	delay_ms:
 509              	.LVL58:
 510              	.LFB67:
  33:Src/main.c    ****   uint32_t i = 0;
 511              		.loc 1 33 1 is_stmt 1 view -0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
  34:Src/main.c    ****   while(time--)
 516              		.loc 1 34 3 view .LVU121
  35:Src/main.c    ****   {
 517              		.loc 1 35 3 view .LVU122
  35:Src/main.c    ****   {
 518              		.loc 1 35 8 is_stmt 0 view .LVU123
 519 0000 04E0     		b	.L31
 520              	.LVL59:
 521              	.L33:
  38:Src/main.c    ****   }
 522              		.loc 1 38 12 view .LVU124
 523 0002 1346     		mov	r3, r2
 524              	.LVL60:
 525              	.L32:
  38:Src/main.c    ****   }
 526              		.loc 1 38 15 is_stmt 1 discriminator 1 view .LVU125
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 22


  38:Src/main.c    ****   }
 527              		.loc 1 38 12 is_stmt 0 discriminator 1 view .LVU126
 528 0004 5A1E     		subs	r2, r3, #1
 529              	.LVL61:
  38:Src/main.c    ****   }
 530              		.loc 1 38 10 discriminator 1 view .LVU127
 531 0006 002B     		cmp	r3, #0
 532 0008 FBD1     		bne	.L33
  35:Src/main.c    ****   {
 533              		.loc 1 35 13 view .LVU128
 534 000a 0846     		mov	r0, r1
 535              	.LVL62:
 536              	.L31:
  35:Src/main.c    ****   {
 537              		.loc 1 35 13 view .LVU129
 538 000c 411E     		subs	r1, r0, #1
 539              	.LVL63:
  35:Src/main.c    ****   {
 540              		.loc 1 35 8 view .LVU130
 541 000e 10B1     		cbz	r0, .L35
  37:Src/main.c    ****     while(i--);
 542              		.loc 1 37 7 view .LVU131
 543 0010 42F6E063 		movw	r3, #12000
 544 0014 F6E7     		b	.L32
 545              	.L35:
  40:Src/main.c    **** 
 546              		.loc 1 40 1 view .LVU132
 547 0016 7047     		bx	lr
 548              		.cfi_endproc
 549              	.LFE67:
 551              		.section	.text._Error_Handler,"ax",%progbits
 552              		.align	1
 553              		.global	_Error_Handler
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu softvfp
 559              	_Error_Handler:
 560              	.LFB72:
 229:Src/main.c    **** 
 230:Src/main.c    **** 
 231:Src/main.c    **** void _Error_Handler(char *file, int line)
 232:Src/main.c    **** {
 561              		.loc 1 232 1 is_stmt 1 view -0
 562              		.cfi_startproc
 563              		@ Volatile: function does not return.
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567              	.LVL64:
 568              	.L37:
 233:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 234:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 235:Src/main.c    ****   while(1)
 569              		.loc 1 235 3 discriminator 1 view .LVU134
 236:Src/main.c    ****   {
 237:Src/main.c    ****   }
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 23


 570              		.loc 1 237 3 discriminator 1 view .LVU135
 571 0000 FEE7     		b	.L37
 572              		.cfi_endproc
 573              	.LFE72:
 575              		.section	.text.SystemClock_Config,"ax",%progbits
 576              		.align	1
 577              		.global	SystemClock_Config
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu softvfp
 583              	SystemClock_Config:
 584              	.LFB69:
  84:Src/main.c    **** 
 585              		.loc 1 84 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 88
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 00B5     		push	{lr}
 590              	.LCFI6:
 591              		.cfi_def_cfa_offset 4
 592              		.cfi_offset 14, -4
 593 0002 97B0     		sub	sp, sp, #92
 594              	.LCFI7:
 595              		.cfi_def_cfa_offset 96
  86:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 596              		.loc 1 86 3 view .LVU137
  87:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 597              		.loc 1 87 3 view .LVU138
  88:Src/main.c    **** 
 598              		.loc 1 88 3 view .LVU139
  92:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 599              		.loc 1 92 3 view .LVU140
  92:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 600              		.loc 1 92 36 is_stmt 0 view .LVU141
 601 0004 0122     		movs	r2, #1
 602 0006 0C92     		str	r2, [sp, #48]
  93:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 603              		.loc 1 93 3 is_stmt 1 view .LVU142
  93:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 604              		.loc 1 93 30 is_stmt 0 view .LVU143
 605 0008 4FF48033 		mov	r3, #65536
 606 000c 0D93     		str	r3, [sp, #52]
  94:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 607              		.loc 1 94 3 is_stmt 1 view .LVU144
  94:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 608              		.loc 1 94 36 is_stmt 0 view .LVU145
 609 000e 0021     		movs	r1, #0
 610 0010 0E91     		str	r1, [sp, #56]
  95:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 611              		.loc 1 95 3 is_stmt 1 view .LVU146
  95:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 612              		.loc 1 95 30 is_stmt 0 view .LVU147
 613 0012 1092     		str	r2, [sp, #64]
  96:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 614              		.loc 1 96 3 is_stmt 1 view .LVU148
  96:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 24


 615              		.loc 1 96 34 is_stmt 0 view .LVU149
 616 0014 0222     		movs	r2, #2
 617 0016 1392     		str	r2, [sp, #76]
  97:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 618              		.loc 1 97 3 is_stmt 1 view .LVU150
  97:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 619              		.loc 1 97 35 is_stmt 0 view .LVU151
 620 0018 1493     		str	r3, [sp, #80]
  98:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 621              		.loc 1 98 3 is_stmt 1 view .LVU152
  98:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 622              		.loc 1 98 32 is_stmt 0 view .LVU153
 623 001a 4FF4E013 		mov	r3, #1835008
 624 001e 1593     		str	r3, [sp, #84]
  99:Src/main.c    ****   {
 625              		.loc 1 99 3 is_stmt 1 view .LVU154
  99:Src/main.c    ****   {
 626              		.loc 1 99 7 is_stmt 0 view .LVU155
 627 0020 0CA8     		add	r0, sp, #48
 628 0022 FFF7FEFF 		bl	HAL_RCC_OscConfig
 629              	.LVL65:
  99:Src/main.c    ****   {
 630              		.loc 1 99 6 view .LVU156
 631 0026 48BB     		cbnz	r0, .L43
 106:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 632              		.loc 1 106 3 is_stmt 1 view .LVU157
 106:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 633              		.loc 1 106 31 is_stmt 0 view .LVU158
 634 0028 0F23     		movs	r3, #15
 635 002a 0793     		str	r3, [sp, #28]
 108:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 636              		.loc 1 108 3 is_stmt 1 view .LVU159
 108:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 637              		.loc 1 108 34 is_stmt 0 view .LVU160
 638 002c 0221     		movs	r1, #2
 639 002e 0891     		str	r1, [sp, #32]
 109:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 640              		.loc 1 109 3 is_stmt 1 view .LVU161
 109:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 641              		.loc 1 109 35 is_stmt 0 view .LVU162
 642 0030 0023     		movs	r3, #0
 643 0032 0993     		str	r3, [sp, #36]
 110:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 644              		.loc 1 110 3 is_stmt 1 view .LVU163
 110:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 645              		.loc 1 110 36 is_stmt 0 view .LVU164
 646 0034 4FF48062 		mov	r2, #1024
 647 0038 0A92     		str	r2, [sp, #40]
 111:Src/main.c    **** 
 648              		.loc 1 111 3 is_stmt 1 view .LVU165
 111:Src/main.c    **** 
 649              		.loc 1 111 36 is_stmt 0 view .LVU166
 650 003a 0B93     		str	r3, [sp, #44]
 113:Src/main.c    ****   {
 651              		.loc 1 113 3 is_stmt 1 view .LVU167
 113:Src/main.c    ****   {
 652              		.loc 1 113 7 is_stmt 0 view .LVU168
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 25


 653 003c 07A8     		add	r0, sp, #28
 654 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 655              	.LVL66:
 113:Src/main.c    ****   {
 656              		.loc 1 113 6 view .LVU169
 657 0042 F8B9     		cbnz	r0, .L44
 118:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 658              		.loc 1 118 3 is_stmt 1 view .LVU170
 118:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 659              		.loc 1 118 38 is_stmt 0 view .LVU171
 660 0044 1023     		movs	r3, #16
 661 0046 0193     		str	r3, [sp, #4]
 119:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 662              		.loc 1 119 3 is_stmt 1 view .LVU172
 119:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 663              		.loc 1 119 35 is_stmt 0 view .LVU173
 664 0048 0023     		movs	r3, #0
 665 004a 0693     		str	r3, [sp, #24]
 120:Src/main.c    ****   {
 666              		.loc 1 120 3 is_stmt 1 view .LVU174
 120:Src/main.c    ****   {
 667              		.loc 1 120 7 is_stmt 0 view .LVU175
 668 004c 01A8     		add	r0, sp, #4
 669 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 670              	.LVL67:
 120:Src/main.c    ****   {
 671              		.loc 1 120 6 view .LVU176
 672 0052 D8B9     		cbnz	r0, .L45
 127:Src/main.c    **** 
 673              		.loc 1 127 3 is_stmt 1 view .LVU177
 127:Src/main.c    **** 
 674              		.loc 1 127 22 is_stmt 0 view .LVU178
 675 0054 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 676              	.LVL68:
 127:Src/main.c    **** 
 677              		.loc 1 127 3 view .LVU179
 678 0058 0E4B     		ldr	r3, .L46
 679 005a A3FB0030 		umull	r3, r0, r3, r0
 680 005e 8009     		lsrs	r0, r0, #6
 681 0060 FFF7FEFF 		bl	HAL_SYSTICK_Config
 682              	.LVL69:
 131:Src/main.c    **** 
 683              		.loc 1 131 3 is_stmt 1 view .LVU180
 684 0064 0420     		movs	r0, #4
 685 0066 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 686              	.LVL70:
 134:Src/main.c    **** }
 687              		.loc 1 134 3 view .LVU181
 688 006a 0022     		movs	r2, #0
 689 006c 1146     		mov	r1, r2
 690 006e 4FF0FF30 		mov	r0, #-1
 691 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 692              	.LVL71:
 135:Src/main.c    **** 
 693              		.loc 1 135 1 is_stmt 0 view .LVU182
 694 0076 17B0     		add	sp, sp, #92
 695              	.LCFI8:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 26


 696              		.cfi_remember_state
 697              		.cfi_def_cfa_offset 4
 698              		@ sp needed
 699 0078 5DF804FB 		ldr	pc, [sp], #4
 700              	.L43:
 701              	.LCFI9:
 702              		.cfi_restore_state
 101:Src/main.c    ****   }
 703              		.loc 1 101 5 is_stmt 1 view .LVU183
 704 007c 6521     		movs	r1, #101
 705 007e 0648     		ldr	r0, .L46+4
 706 0080 FFF7FEFF 		bl	_Error_Handler
 707              	.LVL72:
 708              	.L44:
 115:Src/main.c    ****   }
 709              		.loc 1 115 5 view .LVU184
 710 0084 7321     		movs	r1, #115
 711 0086 0448     		ldr	r0, .L46+4
 712 0088 FFF7FEFF 		bl	_Error_Handler
 713              	.LVL73:
 714              	.L45:
 122:Src/main.c    ****   }
 715              		.loc 1 122 5 view .LVU185
 716 008c 7A21     		movs	r1, #122
 717 008e 0248     		ldr	r0, .L46+4
 718 0090 FFF7FEFF 		bl	_Error_Handler
 719              	.LVL74:
 720              	.L47:
 721              		.align	2
 722              	.L46:
 723 0094 D34D6210 		.word	274877907
 724 0098 00000000 		.word	.LC0
 725              		.cfi_endproc
 726              	.LFE69:
 728              		.section	.text.main,"ax",%progbits
 729              		.align	1
 730              		.global	main
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 734              		.fpu softvfp
 736              	main:
 737              	.LFB68:
  49:Src/main.c    ****   HAL_Init();
 738              		.loc 1 49 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 38B5     		push	{r3, r4, r5, lr}
 743              	.LCFI10:
 744              		.cfi_def_cfa_offset 16
 745              		.cfi_offset 3, -16
 746              		.cfi_offset 4, -12
 747              		.cfi_offset 5, -8
 748              		.cfi_offset 14, -4
  50:Src/main.c    ****   SystemClock_Config();
 749              		.loc 1 50 3 view .LVU187
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 27


 750 0002 FFF7FEFF 		bl	HAL_Init
 751              	.LVL75:
  51:Src/main.c    ****   MX_GPIO_Init();
 752              		.loc 1 51 3 view .LVU188
 753 0006 FFF7FEFF 		bl	SystemClock_Config
 754              	.LVL76:
  52:Src/main.c    ****   //MX_USB_DEVICE_Init();
 755              		.loc 1 52 3 view .LVU189
 756 000a FFF7FEFF 		bl	MX_GPIO_Init
 757              	.LVL77:
  54:Src/main.c    ****   u8g2_InitDisplay(&u8g2);
 758              		.loc 1 54 3 view .LVU190
 759 000e 184C     		ldr	r4, .L53
 760 0010 184B     		ldr	r3, .L53+4
 761 0012 194A     		ldr	r2, .L53+8
 762 0014 1949     		ldr	r1, .L53+12
 763 0016 2046     		mov	r0, r4
 764 0018 FFF7FEFF 		bl	u8g2_Setup_st7920_s_128x64_f
 765              	.LVL78:
  55:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 766              		.loc 1 55 3 view .LVU191
 767 001c 2046     		mov	r0, r4
 768 001e FFF7FEFF 		bl	u8x8_InitDisplay
 769              	.LVL79:
  56:Src/main.c    ****   display_logo();
 770              		.loc 1 56 3 view .LVU192
 771 0022 0021     		movs	r1, #0
 772 0024 2046     		mov	r0, r4
 773 0026 FFF7FEFF 		bl	u8x8_SetPowerSave
 774              	.LVL80:
  57:Src/main.c    ****   HAL_Delay(10000);
 775              		.loc 1 57 3 view .LVU193
 776 002a FFF7FEFF 		bl	display_logo
 777              	.LVL81:
  58:Src/main.c    ****   uint32_t timeRefesh = HAL_GetTick();
 778              		.loc 1 58 3 view .LVU194
 779 002e 42F21070 		movw	r0, #10000
 780 0032 FFF7FEFF 		bl	HAL_Delay
 781              	.LVL82:
  59:Src/main.c    ****   while (1)
 782              		.loc 1 59 3 view .LVU195
  59:Src/main.c    ****   while (1)
 783              		.loc 1 59 25 is_stmt 0 view .LVU196
 784 0036 FFF7FEFF 		bl	HAL_GetTick
 785              	.LVL83:
 786 003a 0546     		mov	r5, r0
 787              	.LVL84:
  59:Src/main.c    ****   while (1)
 788              		.loc 1 59 25 view .LVU197
 789 003c 05E0     		b	.L49
 790              	.LVL85:
 791              	.L52:
  77:Src/main.c    ****       timeRefesh = HAL_GetTick();
 792              		.loc 1 77 7 is_stmt 1 view .LVU198
 793 003e 2046     		mov	r0, r4
 794 0040 FFF7FEFF 		bl	u8g2_SendBuffer
 795              	.LVL86:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 28


  78:Src/main.c    ****     }
 796              		.loc 1 78 7 view .LVU199
  78:Src/main.c    ****     }
 797              		.loc 1 78 20 is_stmt 0 view .LVU200
 798 0044 FFF7FEFF 		bl	HAL_GetTick
 799              	.LVL87:
 800 0048 0546     		mov	r5, r0
 801              	.LVL88:
 802              	.L49:
  60:Src/main.c    ****   {
 803              		.loc 1 60 3 is_stmt 1 view .LVU201
  62:Src/main.c    ****     u8g2_SetFontMode(&u8g2, 1);
 804              		.loc 1 62 5 view .LVU202
 805 004a 094C     		ldr	r4, .L53
 806 004c 2046     		mov	r0, r4
 807 004e FFF7FEFF 		bl	u8g2_ClearBuffer
 808              	.LVL89:
  63:Src/main.c    ****     u8g2_SetFontDirection(&u8g2, 0);
 809              		.loc 1 63 5 view .LVU203
 810 0052 0121     		movs	r1, #1
 811 0054 2046     		mov	r0, r4
 812 0056 FFF7FEFF 		bl	u8g2_SetFontMode
 813              	.LVL90:
  64:Src/main.c    ****     // u8g2_SetFont(&u8g2, u8g2_font_helvB18_te);
 814              		.loc 1 64 5 view .LVU204
 815 005a 0021     		movs	r1, #0
 816 005c 2046     		mov	r0, r4
 817 005e FFF7FEFF 		bl	u8g2_SetFontDirection
 818              	.LVL91:
  75:Src/main.c    ****     {
 819              		.loc 1 75 5 view .LVU205
  75:Src/main.c    ****     {
 820              		.loc 1 75 8 is_stmt 0 view .LVU206
 821 0062 FFF7FEFF 		bl	HAL_GetTick
 822              	.LVL92:
  75:Src/main.c    ****     {
 823              		.loc 1 75 22 view .LVU207
 824 0066 401B     		subs	r0, r0, r5
  75:Src/main.c    ****     {
 825              		.loc 1 75 7 view .LVU208
 826 0068 6428     		cmp	r0, #100
 827 006a EED9     		bls	.L49
  75:Src/main.c    ****     {
 828              		.loc 1 75 7 view .LVU209
 829 006c E7E7     		b	.L52
 830              	.L54:
 831 006e 00BF     		.align	2
 832              	.L53:
 833 0070 00000000 		.word	.LANCHOR0
 834 0074 00000000 		.word	u8g2_gpio_and_delay_stm32
 835 0078 00000000 		.word	u8x8_byte_4wire_sw_spi
 836 007c 00000000 		.word	u8g2_cb_r0
 837              		.cfi_endproc
 838              	.LFE68:
 840              		.section	.bss.u8g2,"aw",%nobits
 841              		.align	2
 842              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 29


 845              	u8g2:
 846 0000 00000000 		.space	4
 847              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 848              		.align	2
 849              	.LC0:
 850 0000 5372632F 		.ascii	"Src/main.c\000"
 850      6D61696E 
 850      2E6300
 851              		.text
 852              	.Letext0:
 853              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-eab
 854              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 855              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 856              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 857              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 858              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 859              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 860              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 861              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 862              		.file 12 "Drivers/CMSIS/Include/core_cm3.h"
 863              		.file 13 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 864              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 865              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 866              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 867              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 868              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 869              		.file 19 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 870              		.file 20 "Inc/usb_device.h"
 871              		.file 21 "u8g2/csrc/u8x8.h"
 872              		.file 22 "u8g2/csrc/u8g2.h"
 873              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 874              		.file 24 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:120    .text.MX_GPIO_Init:00000060 $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:127    .text.u8g2_gpio_and_delay_stm32:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:134    .text.u8g2_gpio_and_delay_stm32:00000000 u8g2_gpio_and_delay_stm32
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:162    .text.u8g2_gpio_and_delay_stm32:0000000e $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:444    .text.u8g2_gpio_and_delay_stm32:00000104 $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:450    .text.delay_us:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:457    .text.delay_us:00000000 delay_us
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:501    .text.delay_ms:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:508    .text.delay_ms:00000000 delay_ms
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:552    .text._Error_Handler:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:559    .text._Error_Handler:00000000 _Error_Handler
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:576    .text.SystemClock_Config:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:583    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:723    .text.SystemClock_Config:00000094 $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:729    .text.main:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:736    .text.main:00000000 main
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:833    .text.main:00000070 $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:841    .bss.u8g2:00000000 $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:845    .bss.u8g2:00000000 u8g2
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:848    .rodata.SystemClock_Config.str1.4:00000000 $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:201    .text.u8g2_gpio_and_delay_stm32:00000035 $d
C:\Users\behun\AppData\Local\Temp\ccNuFMLS.s:201    .text.u8g2_gpio_and_delay_stm32:00000036 $t

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_Delay
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
u8g2_Setup_st7920_s_128x64_f
u8x8_InitDisplay
u8x8_SetPowerSave
display_logo
HAL_GetTick
u8g2_SendBuffer
u8g2_ClearBuffer
u8g2_SetFontMode
u8g2_SetFontDirection
u8x8_byte_4wire_sw_spi
u8g2_cb_r0
