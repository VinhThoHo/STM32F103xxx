ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g2_kerning.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_GetKerning,"ax",%progbits
  16              		.align	1
  17              		.global	u8g2_GetKerning
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	u8g2_GetKerning:
  24              	.LFB0:
  25              		.file 1 "u8g2/csrc/u8g2_kerning.c"
   1:u8g2/csrc/u8g2_kerning.c **** /*
   2:u8g2/csrc/u8g2_kerning.c **** 
   3:u8g2/csrc/u8g2_kerning.c ****   u8g2_kerning.c
   4:u8g2/csrc/u8g2_kerning.c **** 
   5:u8g2/csrc/u8g2_kerning.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2/csrc/u8g2_kerning.c **** 
   7:u8g2/csrc/u8g2_kerning.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2/csrc/u8g2_kerning.c ****   All rights reserved.
   9:u8g2/csrc/u8g2_kerning.c **** 
  10:u8g2/csrc/u8g2_kerning.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2/csrc/u8g2_kerning.c ****   are permitted provided that the following conditions are met:
  12:u8g2/csrc/u8g2_kerning.c **** 
  13:u8g2/csrc/u8g2_kerning.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2/csrc/u8g2_kerning.c ****     of conditions and the following disclaimer.
  15:u8g2/csrc/u8g2_kerning.c ****     
  16:u8g2/csrc/u8g2_kerning.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2/csrc/u8g2_kerning.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2/csrc/u8g2_kerning.c ****     materials provided with the distribution.
  19:u8g2/csrc/u8g2_kerning.c **** 
  20:u8g2/csrc/u8g2_kerning.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2/csrc/u8g2_kerning.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2/csrc/u8g2_kerning.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2/csrc/u8g2_kerning.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2/csrc/u8g2_kerning.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2/csrc/u8g2_kerning.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2/csrc/u8g2_kerning.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2/csrc/u8g2_kerning.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2/csrc/u8g2_kerning.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2/csrc/u8g2_kerning.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2/csrc/u8g2_kerning.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2/csrc/u8g2_kerning.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:u8g2/csrc/u8g2_kerning.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2/csrc/u8g2_kerning.c **** 
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s 			page 2


  34:u8g2/csrc/u8g2_kerning.c **** */
  35:u8g2/csrc/u8g2_kerning.c **** 
  36:u8g2/csrc/u8g2_kerning.c **** #include "u8g2.h"
  37:u8g2/csrc/u8g2_kerning.c **** 
  38:u8g2/csrc/u8g2_kerning.c **** /* this function is used as "u8g2_get_kerning_cb" */
  39:u8g2/csrc/u8g2_kerning.c **** /*
  40:u8g2/csrc/u8g2_kerning.c **** uint8_t u8g2_GetNullKerning(u8g2_t *u8g2, uint16_t e1, uint16_t e2)
  41:u8g2/csrc/u8g2_kerning.c **** {
  42:u8g2/csrc/u8g2_kerning.c ****   return 0;
  43:u8g2/csrc/u8g2_kerning.c **** }
  44:u8g2/csrc/u8g2_kerning.c **** */
  45:u8g2/csrc/u8g2_kerning.c **** 
  46:u8g2/csrc/u8g2_kerning.c **** /* this function is used as "u8g2_get_kerning_cb" */
  47:u8g2/csrc/u8g2_kerning.c **** uint8_t u8g2_GetKerning(U8X8_UNUSED u8g2_t *u8g2, u8g2_kerning_t *kerning, uint16_t e1, uint16_t e2
  48:u8g2/csrc/u8g2_kerning.c **** {
  26              		.loc 1 48 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  49:u8g2/csrc/u8g2_kerning.c ****   uint16_t i1, i2, cnt, end;
  50:u8g2/csrc/u8g2_kerning.c ****   if ( kerning == NULL )
  32              		.loc 1 50 0
  33 0000 31B3     		cbz	r1, .L9
  48:u8g2/csrc/u8g2_kerning.c ****   uint16_t i1, i2, cnt, end;
  34              		.loc 1 48 0
  35 0002 30B4     		push	{r4, r5}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 5, -4
  40 0004 0C46     		mov	r4, r1
  51:u8g2/csrc/u8g2_kerning.c ****     return 0;
  52:u8g2/csrc/u8g2_kerning.c ****   
  53:u8g2/csrc/u8g2_kerning.c ****   /* search for the encoding in the first table */
  54:u8g2/csrc/u8g2_kerning.c ****   cnt = kerning->first_table_cnt;
  41              		.loc 1 54 0
  42 0006 0D88     		ldrh	r5, [r1]
  43              	.LVL1:
  55:u8g2/csrc/u8g2_kerning.c ****   cnt--;	/* ignore the last element of the table, which is 0x0ffff */
  44              		.loc 1 55 0
  45 0008 013D     		subs	r5, r5, #1
  46              	.LVL2:
  47 000a ADB2     		uxth	r5, r5
  48              	.LVL3:
  56:u8g2/csrc/u8g2_kerning.c ****   for( i1 = 0; i1 < cnt; i1++ )
  49              		.loc 1 56 0
  50 000c 0021     		movs	r1, #0
  51              	.LVL4:
  52              	.L3:
  53              		.loc 1 56 0 is_stmt 0 discriminator 1
  54 000e A942     		cmp	r1, r5
  55 0010 07D2     		bcs	.L4
  57:u8g2/csrc/u8g2_kerning.c ****   {
  58:u8g2/csrc/u8g2_kerning.c ****     if ( kerning->first_encoding_table[i1] == e1 )
  56              		.loc 1 58 0 is_stmt 1
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s 			page 3


  57 0012 6068     		ldr	r0, [r4, #4]
  58 0014 30F81100 		ldrh	r0, [r0, r1, lsl #1]
  59 0018 9042     		cmp	r0, r2
  60 001a 02D0     		beq	.L4
  56:u8g2/csrc/u8g2_kerning.c ****   for( i1 = 0; i1 < cnt; i1++ )
  61              		.loc 1 56 0 discriminator 2
  62 001c 0131     		adds	r1, r1, #1
  63              	.LVL5:
  64 001e 89B2     		uxth	r1, r1
  65              	.LVL6:
  66 0020 F5E7     		b	.L3
  67              	.L4:
  59:u8g2/csrc/u8g2_kerning.c ****       break;
  60:u8g2/csrc/u8g2_kerning.c ****   }
  61:u8g2/csrc/u8g2_kerning.c ****   if ( i1 >= cnt )
  68              		.loc 1 61 0
  69 0022 A942     		cmp	r1, r5
  70 0024 16D2     		bcs	.L10
  62:u8g2/csrc/u8g2_kerning.c ****     return 0;	/* e1 not part of the kerning table, return 0 */
  63:u8g2/csrc/u8g2_kerning.c **** 
  64:u8g2/csrc/u8g2_kerning.c ****   /* get the upper index for i2 */
  65:u8g2/csrc/u8g2_kerning.c ****   end = kerning->index_to_second_table[i1+1];
  71              		.loc 1 65 0
  72 0026 A268     		ldr	r2, [r4, #8]
  73              	.LVL7:
  74 0028 481C     		adds	r0, r1, #1
  75 002a 32F81000 		ldrh	r0, [r2, r0, lsl #1]
  76              	.LVL8:
  66:u8g2/csrc/u8g2_kerning.c ****   for( i2 = kerning->index_to_second_table[i1]; i2 < end; i2++ )
  77              		.loc 1 66 0
  78 002e 32F81120 		ldrh	r2, [r2, r1, lsl #1]
  79              	.LVL9:
  80              	.L6:
  81              		.loc 1 66 0 is_stmt 0 discriminator 1
  82 0032 8242     		cmp	r2, r0
  83 0034 07D2     		bcs	.L7
  67:u8g2/csrc/u8g2_kerning.c ****   {
  68:u8g2/csrc/u8g2_kerning.c ****     if ( kerning->second_encoding_table[i2] == e2 )
  84              		.loc 1 68 0 is_stmt 1
  85 0036 E168     		ldr	r1, [r4, #12]
  86 0038 31F81210 		ldrh	r1, [r1, r2, lsl #1]
  87 003c 9942     		cmp	r1, r3
  88 003e 02D0     		beq	.L7
  66:u8g2/csrc/u8g2_kerning.c ****   for( i2 = kerning->index_to_second_table[i1]; i2 < end; i2++ )
  89              		.loc 1 66 0 discriminator 2
  90 0040 0132     		adds	r2, r2, #1
  91              	.LVL10:
  92 0042 92B2     		uxth	r2, r2
  93              	.LVL11:
  94 0044 F5E7     		b	.L6
  95              	.L7:
  69:u8g2/csrc/u8g2_kerning.c ****       break;
  70:u8g2/csrc/u8g2_kerning.c ****   }
  71:u8g2/csrc/u8g2_kerning.c ****   
  72:u8g2/csrc/u8g2_kerning.c ****   if ( i2 >= end )
  96              		.loc 1 72 0
  97 0046 8242     		cmp	r2, r0
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s 			page 4


  98 0048 07D2     		bcs	.L11
  73:u8g2/csrc/u8g2_kerning.c ****     return 0;	/* e2 not part of any pair with e1, return 0 */
  74:u8g2/csrc/u8g2_kerning.c ****   
  75:u8g2/csrc/u8g2_kerning.c ****   return kerning->kerning_values[i2];
  99              		.loc 1 75 0
 100 004a 2369     		ldr	r3, [r4, #16]
 101              	.LVL12:
 102 004c 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 103              	.LVL13:
 104 004e 02E0     		b	.L2
 105              	.LVL14:
 106              	.L9:
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 0
 109              		.cfi_restore 4
 110              		.cfi_restore 5
  51:u8g2/csrc/u8g2_kerning.c ****   
 111              		.loc 1 51 0
 112 0050 0020     		movs	r0, #0
 113              	.LVL15:
 114 0052 7047     		bx	lr
 115              	.LVL16:
 116              	.L10:
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 5, -4
  62:u8g2/csrc/u8g2_kerning.c **** 
 121              		.loc 1 62 0
 122 0054 0020     		movs	r0, #0
 123              	.LVL17:
 124              	.L2:
  76:u8g2/csrc/u8g2_kerning.c **** }
 125              		.loc 1 76 0
 126 0056 30BC     		pop	{r4, r5}
 127              	.LCFI3:
 128              		.cfi_remember_state
 129              		.cfi_restore 5
 130              		.cfi_restore 4
 131              		.cfi_def_cfa_offset 0
 132              	.LVL18:
 133 0058 7047     		bx	lr
 134              	.LVL19:
 135              	.L11:
 136              	.LCFI4:
 137              		.cfi_restore_state
  73:u8g2/csrc/u8g2_kerning.c ****   
 138              		.loc 1 73 0
 139 005a 0020     		movs	r0, #0
 140              	.LVL20:
 141 005c FBE7     		b	.L2
 142              		.cfi_endproc
 143              	.LFE0:
 145              		.section	.text.u8g2_GetKerningByTable,"ax",%progbits
 146              		.align	1
 147              		.global	u8g2_GetKerningByTable
 148              		.syntax unified
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s 			page 5


 149              		.thumb
 150              		.thumb_func
 151              		.fpu softvfp
 153              	u8g2_GetKerningByTable:
 154              	.LFB1:
  77:u8g2/csrc/u8g2_kerning.c **** 
  78:u8g2/csrc/u8g2_kerning.c **** uint8_t u8g2_GetKerningByTable(U8X8_UNUSED u8g2_t *u8g2, const uint16_t *kt, uint16_t e1, uint16_t 
  79:u8g2/csrc/u8g2_kerning.c **** {
 155              		.loc 1 79 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL21:
  80:u8g2/csrc/u8g2_kerning.c ****   uint16_t i;
  81:u8g2/csrc/u8g2_kerning.c ****   i = 0;
  82:u8g2/csrc/u8g2_kerning.c ****   if ( kt == NULL )
 161              		.loc 1 82 0
 162 0000 B9B1     		cbz	r1, .L20
  79:u8g2/csrc/u8g2_kerning.c ****   uint16_t i;
 163              		.loc 1 79 0
 164 0002 70B4     		push	{r4, r5, r6}
 165              	.LCFI5:
 166              		.cfi_def_cfa_offset 12
 167              		.cfi_offset 4, -12
 168              		.cfi_offset 5, -8
 169              		.cfi_offset 6, -4
 170 0004 0D46     		mov	r5, r1
 171 0006 0021     		movs	r1, #0
 172              	.LVL22:
 173 0008 01E0     		b	.L19
 174              	.LVL23:
 175              	.L18:
  83:u8g2/csrc/u8g2_kerning.c ****     return 0;
  84:u8g2/csrc/u8g2_kerning.c ****   for(;;)
  85:u8g2/csrc/u8g2_kerning.c ****   {
  86:u8g2/csrc/u8g2_kerning.c ****     if ( kt[i] == 0x0ffff )
  87:u8g2/csrc/u8g2_kerning.c ****       break;
  88:u8g2/csrc/u8g2_kerning.c ****     if ( kt[i] == e1 && kt[i+1] == e2 )
  89:u8g2/csrc/u8g2_kerning.c ****       return kt[i+2];
  90:u8g2/csrc/u8g2_kerning.c ****     i+=3;
 176              		.loc 1 90 0
 177 000a 0331     		adds	r1, r1, #3
 178              	.LVL24:
 179 000c 89B2     		uxth	r1, r1
 180              	.LVL25:
 181              	.L19:
  86:u8g2/csrc/u8g2_kerning.c ****       break;
 182              		.loc 1 86 0
 183 000e 0E46     		mov	r6, r1
 184 0010 35F81100 		ldrh	r0, [r5, r1, lsl #1]
 185 0014 4FF6FF74 		movw	r4, #65535
 186 0018 A042     		cmp	r0, r4
 187 001a 0CD0     		beq	.L21
  88:u8g2/csrc/u8g2_kerning.c ****       return kt[i+2];
 188              		.loc 1 88 0
 189 001c 9042     		cmp	r0, r2
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s 			page 6


 190 001e F4D1     		bne	.L18
  88:u8g2/csrc/u8g2_kerning.c ****       return kt[i+2];
 191              		.loc 1 88 0 is_stmt 0 discriminator 1
 192 0020 481C     		adds	r0, r1, #1
 193 0022 35F81000 		ldrh	r0, [r5, r0, lsl #1]
 194 0026 9842     		cmp	r0, r3
 195 0028 EFD1     		bne	.L18
  89:u8g2/csrc/u8g2_kerning.c ****     i+=3;
 196              		.loc 1 89 0 is_stmt 1
 197 002a 0236     		adds	r6, r6, #2
 198 002c 15F81600 		ldrb	r0, [r5, r6, lsl #1]	@ zero_extendqisi2
 199 0030 02E0     		b	.L17
 200              	.LVL26:
 201              	.L20:
 202              	.LCFI6:
 203              		.cfi_def_cfa_offset 0
 204              		.cfi_restore 4
 205              		.cfi_restore 5
 206              		.cfi_restore 6
  83:u8g2/csrc/u8g2_kerning.c ****   for(;;)
 207              		.loc 1 83 0
 208 0032 0020     		movs	r0, #0
 209              	.LVL27:
 210 0034 7047     		bx	lr
 211              	.LVL28:
 212              	.L21:
 213              	.LCFI7:
 214              		.cfi_def_cfa_offset 12
 215              		.cfi_offset 4, -12
 216              		.cfi_offset 5, -8
 217              		.cfi_offset 6, -4
  91:u8g2/csrc/u8g2_kerning.c ****   }
  92:u8g2/csrc/u8g2_kerning.c ****   return 0;
 218              		.loc 1 92 0
 219 0036 0020     		movs	r0, #0
 220              	.L17:
  93:u8g2/csrc/u8g2_kerning.c **** }
 221              		.loc 1 93 0
 222 0038 70BC     		pop	{r4, r5, r6}
 223              	.LCFI8:
 224              		.cfi_restore 6
 225              		.cfi_restore 5
 226              		.cfi_restore 4
 227              		.cfi_def_cfa_offset 0
 228              	.LVL29:
 229 003a 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE1:
 233              		.text
 234              	.Letext0:
 235              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6.2 2016q4\\arm-none-eabi\\include\\mach
 236              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6.2 2016q4\\arm-none-eabi\\include\\sys\
 237              		.file 4 "u8g2/csrc/u8x8.h"
 238              		.file 5 "u8g2/csrc/u8g2.h"
ARM GAS  C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_kerning.c
C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s:16     .text.u8g2_GetKerning:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s:23     .text.u8g2_GetKerning:00000000 u8g2_GetKerning
C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s:146    .text.u8g2_GetKerningByTable:00000000 $t
C:\Users\nhantt\AppData\Local\Temp\ccDPqtUb.s:153    .text.u8g2_GetKerningByTable:00000000 u8g2_GetKerningByTable
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
